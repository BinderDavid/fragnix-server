{"sliceID":6295382639751667280,"uses":[{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8581563535957577507},"usedName":{"constructorName":{"identifier":"View"},"constructorTypeName":{"identifier":"View"}},"qualification":null},{"reference":{"otherSlice":5576356556970261137},"usedName":{"valueName":{"identifier":"binCheckLeft"}},"qualification":null},{"reference":{"otherSlice":1003427505070580460},"usedName":{"valueName":{"identifier":"binCheckRight"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":555828902643222699},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null}],"fragment":["maxViewWithKey :: IntMap a -> Maybe ((Key, a), IntMap a)","maxViewWithKey t\n  = case t of\n        Nil -> Nothing\n        Bin p m l r | m < 0 ->\n                      Just $\n                        case go l of\n                            View k a l' -> ((k, a), binCheckLeft p m l' r)\n        _ -> Just $\n               case go t of\n                   View k a t' -> ((k, a), t')\n  where go (Bin p m l r)\n          = case go r of\n                View k a r' -> View k a (binCheckRight p m l r')\n        go (Tip k y) = View k y Nil\n        go Nil = error \"maxViewWithKey Nil\""],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}