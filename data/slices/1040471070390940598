{"sliceID":1040471070390940598,"uses":[{"reference":{"otherSlice":8366189638825021424},"usedName":{"valueName":{"identifier":"equalFilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"dropWhile"}},"qualification":null},{"reference":{"otherSlice":3469772711641887809},"usedName":{"valueName":{"identifier":"isPathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"break"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2311304393424467109},"usedName":{"valueName":{"identifier":"hasLeadingPathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":2597854417710877617},"usedName":{"valueName":{"identifier":"hasDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"tail"}},"qualification":null},{"reference":{"otherSlice":6282687857133394861},"usedName":{"valueName":{"identifier":"dropDrive"}},"qualification":null},{"reference":{"otherSlice":7749264433993515722},"usedName":{"valueName":{"identifier":"pathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"otherSlice":8058607766298504419},"usedName":{"valueName":{"identifier":"takeDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null}],"fragment":["makeRelative :: FilePath -> FilePath -> FilePath","makeRelative root path\n  | equalFilePath root path = \".\"\n  | takeAbs root /= takeAbs path = path\n  | otherwise = f (dropAbs root) (dropAbs path)\n  where f \"\" y = dropWhile isPathSeparator y\n        f x y\n          = let (x1, x2) = g x\n                (y1, y2) = g y\n              in if equalFilePath x1 y1 then f x2 y2 else path\n        g x = (dropWhile isPathSeparator a, dropWhile isPathSeparator b)\n          where (a, b) = break isPathSeparator $ dropWhile isPathSeparator x\n        dropAbs x | hasLeadingPathSeparator x && not (hasDrive x) = tail x\n        dropAbs x = dropDrive x\n        takeAbs x\n          | hasLeadingPathSeparator x && not (hasDrive x) = [pathSeparator]\n        takeAbs x\n          = map\n              (\\ y -> if isPathSeparator y then pathSeparator else toLower y)\n              $ takeDrive x"],"instances":[],"language":{"extensions":["PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}