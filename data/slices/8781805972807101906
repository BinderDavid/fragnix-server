{"sliceID":8781805972807101906,"uses":[{"reference":{"otherSlice":3133657107112504818},"usedName":{"typeName":{"identifier":"CallCC"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4214969997485425698},"usedName":{"valueName":{"identifier":"runExceptT"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null}],"fragment":["liftCallCC ::\n           CallCC m (Either e a) (Either e b) -> CallCC (ExceptT e m) a b","liftCallCC callCC f\n  = ExceptT $\n      callCC $ \\ c -> runExceptT (f (\\ a -> ExceptT $ c (Right a)))"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}