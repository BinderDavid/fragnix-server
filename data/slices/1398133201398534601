{"sliceID":1398133201398534601,"uses":[{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2592740015436521371},"usedName":{"valueName":{"identifier":"findIndex"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null}],"fragment":["findIndex :: (Word8 -> Bool) -> ByteString -> Maybe Int64","findIndex k cs0 = findIndex' 0 cs0\n  where findIndex' _ Empty = Nothing\n        findIndex' n (Chunk c cs)\n          = case S.findIndex k c of\n                Nothing -> findIndex' (n + fromIntegral (S.length c)) cs\n                Just i -> Just (n + fromIntegral i)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}