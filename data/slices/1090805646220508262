{"sliceID":1090805646220508262,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8218805848122191995},"usedName":{"constructorName":{"identifier":"ResponseRaw"},"constructorTypeName":{"identifier":"Response"}},"qualification":null},{"reference":{"otherSlice":8218805848122191995},"usedName":{"constructorName":{"identifier":"ResponseFile"},"constructorTypeName":{"identifier":"Response"}},"qualification":null},{"reference":{"otherSlice":7129769246609355574},"usedName":{"valueName":{"identifier":"gzipFiles"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":2854855887109639905},"usedName":{"constructorName":{"identifier":"GzipIgnore"},"constructorTypeName":{"identifier":"GzipFiles"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"elem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2854855887109639905},"usedName":{"constructorName":{"identifier":"GzipPreCompressed"},"constructorTypeName":{"identifier":"GzipFiles"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":7642891578229450761},"usedName":{"valueName":{"identifier":"doesFileExist"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":5565122751013001987},"usedName":{"valueName":{"identifier":"fixHeaders"}},"qualification":null},{"reference":{"otherSlice":2854855887109639905},"usedName":{"constructorName":{"identifier":"GzipCacheFolder"},"constructorTypeName":{"identifier":"GzipFiles"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":null},{"reference":{"otherSlice":2325900752127330681},"usedName":{"valueName":{"identifier":"hContentType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7129769246609355574},"usedName":{"valueName":{"identifier":"gzipCheckMime"}},"qualification":null},{"reference":{"otherSlice":5211333323094759042},"usedName":{"valueName":{"identifier":"compressFile"}},"qualification":null},{"reference":{"otherSlice":3145990847075102438},"usedName":{"valueName":{"identifier":"compressE"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"fromMaybe"}},"qualification":null},{"reference":{"otherSlice":7810297066949439326},"usedName":{"valueName":{"identifier":"splitCommas"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":846558884396738766},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"requestHeaders"}},"qualification":null},{"reference":{"otherSlice":2325900752127330681},"usedName":{"valueName":{"identifier":"hUserAgent"}},"qualification":null},{"reference":{"otherSlice":8153825048320937403},"usedName":{"valueName":{"identifier":"isInfixOf"}},"qualification":"S"},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"isJust"}},"qualification":null},{"reference":{"otherSlice":2325900752127330681},"usedName":{"valueName":{"identifier":"hContentEncoding"}},"qualification":null},{"reference":{"otherSlice":551714491366486876},"usedName":{"valueName":{"identifier":"responseHeaders"}},"qualification":null},{"reference":{"otherSlice":6197401285561738162},"usedName":{"valueName":{"identifier":"contentLength"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":7129769246609355574},"usedName":{"typeName":{"identifier":"GzipSettings"}},"qualification":null},{"reference":{"otherSlice":8780573258186764165},"usedName":{"typeName":{"identifier":"Middleware"}},"qualification":null}],"fragment":["gzip :: GzipSettings -> Middleware","gzip set app env sendResponse\n  = app env $\n      \\ res ->\n        case res of\n            ResponseRaw{} -> sendResponse res\n            ResponseFile{} | gzipFiles set == GzipIgnore -> sendResponse res\n            _ -> if\n                   \"gzip\" `elem` enc &&\n                     not isMSIE6 && not (isEncoded res) && (bigEnough res)\n                   then\n                   let runAction x\n                         = case x of\n                               (ResponseFile s hs file Nothing,\n                                GzipPreCompressed nextAction) -> let compressedVersion\n                                                                       = file ++ \".gz\"\n                                                                   in\n                                                                   doesFileExist compressedVersion\n                                                                     >>=\n                                                                     \\ x ->\n                                                                       if x then\n                                                                         (sendResponse $\n                                                                            ResponseFile s\n                                                                              (fixHeaders hs)\n                                                                              compressedVersion\n                                                                              Nothing)\n                                                                         else\n                                                                         (runAction\n                                                                            (ResponseFile s hs file\n                                                                               Nothing,\n                                                                             nextAction))\n                               (ResponseFile s hs file Nothing, GzipCacheFolder cache) -> case\n                                                                                            lookup\n                                                                                              hContentType\n                                                                                              hs\n                                                                                            of\n                                                                                              Just\n                                                                                                m | gzipCheckMime\n                                                                                                      set\n                                                                                                      m\n                                                                                                    ->\n                                                                                                    compressFile\n                                                                                                      s\n                                                                                                      hs\n                                                                                                      file\n                                                                                                      cache\n                                                                                                      sendResponse\n                                                                                              _ -> sendResponse\n                                                                                                     res\n                               (ResponseFile{}, GzipIgnore) -> sendResponse res\n                               _ -> compressE set res sendResponse\n                     in runAction (res, gzipFiles set)\n                   else sendResponse res\n  where enc\n          = fromMaybe [] $\n              (splitCommas . S8.unpack) `fmap`\n                lookup \"Accept-Encoding\" (requestHeaders env)\n        ua = fromMaybe \"\" $ lookup hUserAgent $ requestHeaders env\n        isMSIE6 = \"MSIE 6\" `S.isInfixOf` ua\n        isEncoded res\n          = isJust $ lookup hContentEncoding $ responseHeaders res\n        bigEnough rsp\n          = case contentLength (responseHeaders rsp) of\n                Nothing -> True\n                Just len -> len >= minimumLength\n        minimumLength = 860"],"instances":[],"language":{"extensions":["OverloadedStrings","Rank2Types","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}