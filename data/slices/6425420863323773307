{"sliceID":6425420863323773307,"uses":[{"reference":{"otherSlice":3431323994583690750},"usedName":{"constructorName":{"identifier":"Inflate"},"constructorTypeName":{"identifier":"Inflate"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3829819806467854161},"usedName":{"valueName":{"identifier":"unsafeUseAsCStringLen"}},"qualification":null},{"reference":{"otherSlice":3366217403336567510},"usedName":{"valueName":{"identifier":"c_set_avail_in"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5171630907937111994},"usedName":{"valueName":{"identifier":"drain"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4887939462268407367},"usedName":{"valueName":{"identifier":"c_call_inflate_noflush"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":1883145235964991085},"usedName":{"valueName":{"identifier":"zNeedDict"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":2934654877145387817},"usedName":{"valueName":{"identifier":"c_call_inflate_set_dictionary"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"otherSlice":4543311556477352782},"usedName":{"valueName":{"identifier":"zStreamEnd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":3431323994583690750},"usedName":{"typeName":{"identifier":"Inflate"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3240663209338734866},"usedName":{"typeName":{"identifier":"Popper"}},"qualification":null}],"fragment":["feedInflate :: Inflate -> S.ByteString -> IO Popper","feedInflate\n  (Inflate (fzstr, fbuff) lastBS complete inflateDictionary) bs\n  = do writeIORef lastBS bs\n       withForeignPtr fzstr $\n         \\ zstr ->\n           unsafeUseAsCStringLen bs $\n             \\ (cstr, len) -> c_set_avail_in zstr cstr $ fromIntegral len\n       return $ drain fbuff fzstr (Just bs) inflate False\n  where inflate zstr\n          = do res <- c_call_inflate_noflush zstr\n               res2 <- if (res == zNeedDict) then\n                         maybe (return zNeedDict)\n                           (\\ dict ->\n                              (unsafeUseAsCStringLen dict $\n                                 \\ (cstr, len) ->\n                                   do c_call_inflate_set_dictionary zstr cstr $ fromIntegral len\n                                      c_call_inflate_noflush zstr))\n                           inflateDictionary\n                         else return res\n               when (res2 == zStreamEnd) (writeIORef complete True)\n               return res2"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}