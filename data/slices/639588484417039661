{"sliceID":639588484417039661,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4240602345081494639},"usedName":{"valueName":{"identifier":"ioeAddLocation"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"modifyIOError"}},"qualification":null},{"reference":{"otherSlice":7862873721858512248},"usedName":{"valueName":{"identifier":"renamePath"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"catchIOError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"tryIOError"}},"qualification":null},{"reference":{"otherSlice":478974211277000722},"usedName":{"valueName":{"identifier":"getSymbolicLinkMetadata"}},"qualification":null},{"reference":{"otherSlice":6148474647728415034},"usedName":{"valueName":{"identifier":"fileTypeFromMetadata"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3162314834453787601},"usedName":{"constructorName":{"identifier":"Directory"},"constructorTypeName":{"identifier":"FileType"}},"qualification":null},{"reference":{"otherSlice":3162314834453787601},"usedName":{"constructorName":{"identifier":"DirectoryLink"},"constructorTypeName":{"identifier":"FileType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"ioeSetErrorString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"mkIOError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"InappropriateType"},"constructorTypeName":{"identifier":"IOErrorType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["renameFile :: FilePath -> FilePath -> IO ()","renameFile opath npath\n  = (`ioeAddLocation` \"renameFile\") `modifyIOError`\n      do checkNotDir opath\n         renamePath opath npath `catchIOError`\n           \\ err ->\n             do checkNotDir npath\n                ioError err\n  where checkNotDir path\n          = do m <- tryIOError (getSymbolicLinkMetadata path)\n               case fileTypeFromMetadata <$> m of\n                   Right Directory -> errIsDir path\n                   Right DirectoryLink -> errIsDir path\n                   _ -> return ()\n        errIsDir path\n          = ioError . (`ioeSetErrorString` \"is a directory\") $\n              mkIOError InappropriateType \"\" Nothing (Just path)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}