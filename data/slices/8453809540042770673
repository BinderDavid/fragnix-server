{"sliceID":8453809540042770673,"uses":[{"reference":{"otherSlice":6736627862700948246},"usedName":{"valueName":{"identifier":"contentRange"}},"qualification":null},{"reference":{"otherSlice":4266482746038848749},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"Numeric"},"usedName":{"valueName":{"identifier":"showInt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"otherSlice":8460257586132860418},"usedName":{"typeName":{"identifier":"Header"}},"qualification":"H"}],"fragment":["contentRangeHeader :: Integer -> Integer -> Integer -> H.Header","contentRangeHeader beg end total = (contentRange, range)\n  where range\n          = B.pack $\n              'b' :\n                'y' :\n                  't' :\n                    'e' :\n                      's' :\n                        ' ' :\n                          (if beg > end then ('*' :) else\n                             showInt beg . ('-' :) . showInt end)\n                            ('/' : showInt total \"\")"],"instances":[],"language":{"extensions":["OverloadedStrings","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}