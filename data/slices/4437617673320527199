{"sliceID":4437617673320527199,"uses":[{"reference":{"otherSlice":3572244850193552443},"usedName":{"valueName":{"identifier":"unstreamM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5421335120341410320},"usedName":{"valueName":{"identifier":"mapM"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["mapM ::\n       (Monad m, Vector v a, Vector v b) => (a -> m b) -> v a -> m (v b)","mapM f = unstreamM . Bundle.mapM f . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}