{"sliceID":3245605354851384949,"uses":[{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"alloca"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5031776449332514163},"usedName":{"constructorName":{"identifier":"EntireFile"},"constructorTypeName":{"identifier":"FileRange"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"poke"}},"qualification":null},{"reference":{"otherSlice":3226616342299867364},"usedName":{"valueName":{"identifier":"fileSize"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":2283458531005248779},"usedName":{"valueName":{"identifier":"getFdStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":8923157961364475481},"usedName":{"valueName":{"identifier":"sendfileloop"}},"qualification":null},{"reference":{"otherSlice":5031776449332514163},"usedName":{"constructorName":{"identifier":"PartOfFile"},"constructorTypeName":{"identifier":"FileRange"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"Fd"}},"qualification":null},{"reference":{"otherSlice":5031776449332514163},"usedName":{"typeName":{"identifier":"FileRange"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["sendfileFd' :: Fd -> Fd -> FileRange -> IO () -> IO ()","sendfileFd' dst src range hook\n  = alloca $\n      \\ offp ->\n        case range of\n            EntireFile -> do poke offp 0\n                             len <- fileSize <$> getFdStatus src\n                             let len' = fromIntegral len\n                             sendfileloop dst src offp len' hook\n            PartOfFile off len -> do poke offp (fromIntegral off)\n                                     let len' = fromIntegral len\n                                     sendfileloop dst src offp len' hook"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}