{"sliceID":3977558338223390180,"uses":[{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":1085547626622467697},"usedName":{"valueName":{"identifier":"bin"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":2864545199436471750},"usedName":{"valueName":{"identifier":"tip"}},"qualification":null},{"reference":{"otherSlice":6737989198458137278},"usedName":{"valueName":{"identifier":"foldl'Bits"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"otherSlice":3470112391334951570},"usedName":{"valueName":{"identifier":"bitmapOfSuffix"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":555828902643222699},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"typeName":{"identifier":"IntSet"}},"qualification":null}],"fragment":["filter :: (Key -> Bool) -> IntSet -> IntSet","filter predicate t\n  = case t of\n        Bin p m l r -> bin p m (filter predicate l) (filter predicate r)\n        Tip kx bm -> tip kx (foldl'Bits 0 (bitPred kx) 0 bm)\n        Nil -> Nil\n  where bitPred kx bm bi\n          | predicate (kx + bi) = bm .|. bitmapOfSuffix bi\n          | otherwise = bm\n        \n        {-# INLINE bitPred #-}"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}