{"sliceID":3039011035720625274,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2597048707352617539},"usedName":{"typeName":{"identifier":"BoundedPrim"}},"qualification":null},{"reference":{"otherSlice":7510131549198584080},"usedName":{"valueName":{"identifier":"contramapB"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":5102229669656856113},"usedName":{"valueName":{"identifier":"eitherB"}},"qualification":null}],"fragment":["condB ::\n      (a -> Bool) -> BoundedPrim a -> BoundedPrim a -> BoundedPrim a","condB p be1 be2\n  = contramapB (\\ x -> if p x then Left x else Right x)\n      (eitherB be1 be2)"],"instances":[],"language":{"extensions":["ScopedTypeVariables","BangPatterns","Unsafe","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}