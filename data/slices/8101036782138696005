{"sliceID":8101036782138696005,"uses":[{"reference":{"otherSlice":4289542537616874493},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2159560523119755043},"usedName":{"valueName":{"identifier":"concatVectors"}},"qualification":"Bundle"},{"reference":{"otherSlice":6739772363523456257},"usedName":{"valueName":{"identifier":"map"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["concatMap :: (Vector v a, Vector v b) => (a -> v b) -> v a -> v b","concatMap f\n  = unstream . Bundle.concatVectors . Bundle.map f . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}