{"sliceID":8076979696170401206,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5286553186981066813},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":530940436697558710},"usedName":{"valueName":{"identifier":"jsonFunValOrListName"}},"qualification":null},{"reference":{"otherSlice":2818706129061850543},"usedName":{"constructorName":{"identifier":"Arity0"},"constructorTypeName":{"identifier":"Arity"}},"qualification":null},{"reference":{"builtinModule":"Data.List.NonEmpty"},"usedName":{"constructorName":{"operator":":|"},"constructorTypeName":{"identifier":"NonEmpty"}},"qualification":null},{"reference":{"otherSlice":7455584928982954593},"usedName":{"valueName":{"identifier":"unapplyTy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"otherSlice":4096054026617212887},"usedName":{"valueName":{"identifier":"arityInt"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"splitAt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":6694129542108817590},"usedName":{"valueName":{"identifier":"keys"}},"qualification":"M"},{"reference":{"otherSlice":1786837376296627898},"usedName":{"valueName":{"identifier":"isTyFamily"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"any"}},"qualification":null},{"reference":{"otherSlice":6998041959137378908},"usedName":{"valueName":{"identifier":"mentionsName"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":6197455550314944784},"usedName":{"valueName":{"identifier":"outOfPlaceTyVarError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"toEnum"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"cycle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2406948088679681918},"usedName":{"valueName":{"identifier":"interleave"}},"qualification":null},{"reference":{"otherSlice":3720735402915720453},"usedName":{"typeName":{"identifier":"JSONClass"}},"qualification":null},{"reference":{"otherSlice":7833486762289634300},"usedName":{"typeName":{"identifier":"JSONFun"}},"qualification":null},{"reference":{"otherSlice":143484768843649221},"usedName":{"typeName":{"identifier":"TyVarMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["dispatchFunByType ::\n                  JSONClass -> JSONFun -> Name -> TyVarMap -> Bool -> Type -> Q Exp","dispatchFunByType _ jf _ tvMap list (VarT tyName)\n  = varE $\n      case M.lookup tyName tvMap of\n          Just (tfjExp, tfjlExp) -> if list then tfjlExp else tfjExp\n          Nothing -> jsonFunValOrListName list jf Arity0\ndispatchFunByType jc jf conName tvMap list (SigT ty _)\n  = dispatchFunByType jc jf conName tvMap list ty\ndispatchFunByType jc jf conName tvMap list (ForallT _ _ ty)\n  = dispatchFunByType jc jf conName tvMap list ty\ndispatchFunByType jc jf conName tvMap list ty\n  = do let tyCon :: Type\n           tyArgs :: [Type]\n           tyCon :| tyArgs = unapplyTy ty\n           numLastArgs :: Int\n           numLastArgs = min (arityInt jc) (length tyArgs)\n           lhsArgs, rhsArgs :: [Type]\n           (lhsArgs, rhsArgs) = splitAt (length tyArgs - numLastArgs) tyArgs\n           tyVarNames :: [Name]\n           tyVarNames = M.keys tvMap\n       itf <- isTyFamily tyCon\n       if\n         any (`mentionsName` tyVarNames) lhsArgs ||\n           itf && any (`mentionsName` tyVarNames) tyArgs\n         then outOfPlaceTyVarError jc conName else\n         if any (`mentionsName` tyVarNames) rhsArgs then\n           appsE $\n             varE (jsonFunValOrListName list jf $ toEnum numLastArgs) :\n               zipWith (dispatchFunByType jc jf conName tvMap)\n                 (cycle [False, True])\n                 (interleave rhsArgs rhsArgs)\n           else varE $ jsonFunValOrListName list jf Arity0"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"]}}