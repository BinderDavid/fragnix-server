{"sliceID":5497948880319494943,"uses":[{"reference":{"otherSlice":1971102957276645166},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1228382585339943791},"usedName":{"valueName":{"identifier":"unbufferAt"}},"qualification":"Buf"},{"reference":{"otherSlice":5481301733920344986},"usedName":{"valueName":{"identifier":"fromPos"}},"qualification":null},{"reference":{"otherSlice":7809759684430670010},"usedName":{"valueName":{"identifier":"commonPrefixes"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3184162202925999579},"usedName":{"valueName":{"identifier":"null"}},"qualification":"T"},{"reference":{"otherSlice":660583772428268831},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5481301733920344986},"usedName":{"constructorName":{"identifier":"Pos"},"constructorTypeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":1253209961187862965},"usedName":{"valueName":{"identifier":"lengthWord16"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":9082019101718493720},"usedName":{"valueName":{"identifier":"substring"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":6434239717856201971},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":5481301733920344986},"usedName":{"typeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":6915584818829723372},"usedName":{"typeName":{"identifier":"More"}},"qualification":null},{"reference":{"otherSlice":6159679655008308241},"usedName":{"typeName":{"identifier":"Failure"}},"qualification":null},{"reference":{"otherSlice":7115182279313903899},"usedName":{"typeName":{"identifier":"Success"}},"qualification":null},{"reference":{"otherSlice":1583956944014925508},"usedName":{"typeName":{"identifier":"Result"}},"qualification":null},{"reference":{"otherSlice":1770770862601050229},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["string_ ::\n        (forall r .\n           Text ->\n             Text ->\n               Buffer -> Pos -> More -> Failure r -> Success Text r -> Result r)\n          -> (Text -> Text) -> Text -> Parser Text","string_ suspended f s0\n  = T.Parser $\n      \\ t pos more lose succ ->\n        let s = f s0\n            ft = f (Buf.unbufferAt (fromPos pos) t)\n          in\n          case T.commonPrefixes s ft of\n              Nothing | T.null s -> succ t pos more T.empty\n                      | T.null ft -> suspended s s t pos more lose succ\n                      | otherwise -> lose t pos more [] \"string\"\n              Just (pfx, ssfx, tsfx) | T.null ssfx ->\n                                       let l = Pos (T.lengthWord16 pfx) in\n                                         succ t (pos + l) more (substring pos l t)\n                                     | not (T.null tsfx) -> lose t pos more [] \"string\"\n                                     | otherwise -> suspended s ssfx t pos more lose succ"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}