{"sliceID":6039434509564074524,"uses":[{"reference":{"otherSlice":6952565387900026146},"usedName":{"valueName":{"identifier":"unsafeAccum_stream"}},"qualification":null},{"reference":{"otherSlice":6146303340648410203},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["unsafeAccumulate_ ::\n                    (Vector v a, Vector v Int, Vector v b) =>\n                    (a -> b -> a) -> v a -> v Int -> v b -> v a","unsafeAccumulate_ f v is xs\n  = unsafeAccum_stream f v\n      (Bundle.zipWith (,) (stream is) (stream xs))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}