{"sliceID":4850073106161359067,"uses":[{"reference":{"otherSlice":9078146625900166621},"usedName":{"typeName":{"identifier":"FromJSONKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Natural"},"usedName":{"typeName":{"identifier":"Natural"}},"qualification":null},{"reference":{"otherSlice":9078146625900166621},"usedName":{"valueName":{"identifier":"fromJSONKey"}},"qualification":null},{"reference":{"otherSlice":1244610440950428656},"usedName":{"constructorName":{"identifier":"FromJSONKeyTextParser"},"constructorTypeName":{"identifier":"FromJSONKeyFunction"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6673836259354390170},"usedName":{"valueName":{"identifier":"parseScientificText"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1008626907939011545},"usedName":{"valueName":{"identifier":"coefficient"}},"qualification":"Scientific"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"operator":"<>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"truncate"}},"qualification":null}],"fragment":["instance FromJSONKey Natural where\n        fromJSONKey\n          = FromJSONKeyTextParser $\n              \\ t ->\n                parseScientificText t >>=\n                  \\ s ->\n                    if Scientific.coefficient s < 0 then\n                      fail $\n                        \"Expected a Natural number but got the negative number: \" <> show s\n                      else pure $ truncate s"],"instances":[],"language":{"extensions":["DataKinds","DefaultSignatures","FlexibleContexts","FlexibleInstances","GADTs","MultiParamTypeClasses","NamedFieldPuns","OverloadedStrings","RecordWildCards","ScopedTypeVariables","TypeOperators","TypeSynonymInstances","UndecidableInstances","ViewPatterns","PolyKinds","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}