{"sliceID":2553988028764430667,"uses":[{"reference":{"otherSlice":7565183779444256373},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":5762600404558588346},"usedName":{"valueName":{"identifier":"replicate"}},"qualification":"T"},{"reference":{"otherSlice":4979796707675811916},"usedName":{"valueName":{"identifier":"smallChunkSize"}},"qualification":null},{"reference":{"otherSlice":480200876081285843},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":7565183779444256373},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["repeat :: Char -> Text","repeat c\n  = let t = Chunk (T.replicate smallChunkSize (T.singleton c)) t in t"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}