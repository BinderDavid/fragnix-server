{"sliceID":3833530496338093402,"uses":[{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"typeName":{"identifier":"MonadZip"}},"qualification":null},{"reference":{"otherSlice":6611341608342455607},"usedName":{"typeName":{"identifier":"SmallArray"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"valueName":{"identifier":"mzip"}},"qualification":null},{"reference":{"otherSlice":4637855676900029281},"usedName":{"valueName":{"identifier":"zipW"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"valueName":{"identifier":"mzipWith"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"valueName":{"identifier":"munzip"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":5824486289373347249},"usedName":{"valueName":{"identifier":"newSmallArray"}},"qualification":null},{"reference":{"otherSlice":1336222803606167606},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"Data.Function"},"usedName":{"valueName":{"identifier":"fix"}},"qualification":null},{"reference":{"otherSlice":6305159245959420917},"usedName":{"valueName":{"operator":"?"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5643076820601837867},"usedName":{"valueName":{"identifier":"indexSmallArray"}},"qualification":null},{"reference":{"otherSlice":3408757399140055139},"usedName":{"valueName":{"identifier":"writeSmallArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":2512788389366620457},"usedName":{"valueName":{"identifier":"unsafeFreezeSmallArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<*>"}},"qualification":null}],"fragment":["instance MonadZip SmallArray where\n        mzip = zipW \"mzip\" (,)\n        mzipWith = zipW \"mzipWith\"\n        \n        {-# INLINE mzipWith #-}\n        munzip sab\n          = runST $\n              do let sz = length sab\n                 sma <- newSmallArray sz $ die \"munzip\" \"impossible\"\n                 smb <- newSmallArray sz $ die \"munzip\" \"impossible\"\n                 fix ? 0 $\n                   \\ go i ->\n                     when (i < sz) $\n                       case indexSmallArray sab i of\n                           (x, y) -> do writeSmallArray sma i x\n                                        writeSmallArray smb i y\n                                        go $ i + 1\n                 (,) <$> unsafeFreezeSmallArray sma <*> unsafeFreezeSmallArray smb"],"instances":[],"language":{"extensions":["MagicHash","RankNTypes","TypeFamilies","UnboxedTuples","DeriveTraversable","DeriveDataTypeable","GeneralizedNewtypeDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}