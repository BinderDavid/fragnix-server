{"sliceID":533037285014031427,"uses":[{"reference":{"otherSlice":3848874062030354227},"usedName":{"constructorName":{"identifier":"WhenMissing"},"constructorTypeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"valueName":{"identifier":"missingSubtree"}},"qualification":null},{"reference":{"otherSlice":5222310507075854585},"usedName":{"valueName":{"identifier":"traverseWithKey"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"valueName":{"identifier":"missingKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null}],"fragment":["traverseMissing ::\n                  Applicative f => (k -> x -> f y) -> WhenMissing f k x y","traverseMissing f\n  = WhenMissing{missingSubtree = traverseWithKey f,\n                missingKey = \\ k x -> (Just $!) <$> f k x}"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}