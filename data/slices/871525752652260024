{"sliceID":871525752652260024,"uses":[{"reference":{"otherSlice":4302818720694206147},"usedName":{"constructorName":{"identifier":"Bundle"},"constructorTypeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"valueName":{"identifier":"sSize"}},"qualification":null},{"reference":{"otherSlice":6110420032456596170},"usedName":{"constructorName":{"identifier":"Exact"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"valueName":{"identifier":"sChunks"}},"qualification":null},{"reference":{"otherSlice":4570765286340506453},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":"S"},{"reference":{"otherSlice":7913830746686835807},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Chunk"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["null :: Monad m => Bundle m v a -> m Bool","null Bundle{sSize = Exact n} = return (n == 0)\nnull Bundle{sChunks = s}\n  = S.foldr (\\ (Chunk n _) z -> n == 0 && z) True s"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}