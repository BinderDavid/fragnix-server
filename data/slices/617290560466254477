{"sliceID":617290560466254477,"uses":[{"reference":{"otherSlice":5353085893229343222},"usedName":{"constructorName":{"identifier":"PriorityTree"},"constructorTypeName":{"identifier":"PriorityTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"atomically"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"readTVar"}},"qualification":null},{"reference":{"otherSlice":5783778720325805178},"usedName":{"constructorName":{"identifier":"Child"},"constructorTypeName":{"identifier":"Element"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":3797314449682470499},"usedName":{"valueName":{"identifier":"enqueue"}},"qualification":"Q"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6396109612671124023},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"Map"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7381214382763621096},"usedName":{"valueName":{"identifier":"isEmpty"}},"qualification":"Q"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"otherSlice":5783778720325805178},"usedName":{"constructorName":{"identifier":"Parent"},"constructorTypeName":{"identifier":"Element"}},"qualification":null},{"reference":{"otherSlice":1474726555369894793},"usedName":{"valueName":{"identifier":"dependency"}},"qualification":"Q"},{"reference":{"otherSlice":5353085893229343222},"usedName":{"typeName":{"identifier":"PriorityTree"}},"qualification":null},{"reference":{"otherSlice":606063981647933956},"usedName":{"typeName":{"identifier":"StreamId"}},"qualification":null},{"reference":{"otherSlice":1474726555369894793},"usedName":{"typeName":{"identifier":"Precedence"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["enqueue :: PriorityTree a -> StreamId -> Precedence -> a -> IO ()","enqueue (PriorityTree var q0) sid p0 x\n  = atomically $\n      do m <- readTVar var\n         let !el = Child x\n         loop m el p0\n  where loop m el p\n          | pid == 0 = Q.enqueue q0 sid p el\n          | otherwise =\n            case Map.lookup pid m of\n                Nothing -> Q.enqueue q0 sid p el\n                Just (q', p') -> do notQueued <- Q.isEmpty q'\n                                    Q.enqueue q' sid p el\n                                    when notQueued $\n                                      do let !el' = Parent q'\n                                         loop m el' p'\n          where pid = Q.dependency p"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}