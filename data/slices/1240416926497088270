{"sliceID":1240416926497088270,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"valueName":{"identifier":"primitive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"newArray#"}},"qualification":null},{"reference":{"otherSlice":1745715555375600494},"usedName":{"constructorName":{"identifier":"MutableArray"},"constructorTypeName":{"identifier":"MutableArray"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1745715555375600494},"usedName":{"typeName":{"identifier":"MutableArray"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["newArray ::\n           PrimMonad m => Int -> a -> m (MutableArray (PrimState m) a)","newArray (I# n#) x\n  = primitive\n      (\\ s# ->\n         case newArray# n# x s# of\n             (# s'#, arr# #) -> let ma = MutableArray arr# in (# s'#, ma #))"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}