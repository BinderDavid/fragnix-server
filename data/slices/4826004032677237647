{"sliceID":4826004032677237647,"uses":[{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3803459480839340337},"usedName":{"typeName":{"identifier":"Except"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor.Identity"},"usedName":{"constructorName":{"identifier":"Identity"},"constructorTypeName":{"identifier":"Identity"}},"qualification":null}],"fragment":["except :: Either e a -> Except e a","except m = ExceptT (Identity m)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}