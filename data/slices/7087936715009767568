{"sliceID":7087936715009767568,"uses":[{"reference":{"otherSlice":1106325324778289270},"usedName":{"constructorName":{"identifier":"WhenMatched"},"constructorTypeName":{"identifier":"WhenMatched"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":8074404895141021673},"usedName":{"valueName":{"identifier":"forceMaybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1106325324778289270},"usedName":{"typeName":{"identifier":"WhenMatched"}},"qualification":null}],"fragment":["zipWithMaybeMatched ::\n                      Applicative f => (k -> x -> y -> Maybe z) -> WhenMatched f k x y z","zipWithMaybeMatched f\n  = WhenMatched $ \\ k x y -> pure $! forceMaybe $! f k x y"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}