{"sliceID":1093281831608341007,"uses":[{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":1745715555375600494},"usedName":{"typeName":{"identifier":"MutableArray"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":521552564646137297},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":330799558505403247},"usedName":{"valueName":{"identifier":"loopM"}},"qualification":null},{"reference":{"otherSlice":5575741799243539711},"usedName":{"valueName":{"identifier":"readArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1080947357764179124},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null}],"fragment":["moveBackwards ::\n                PrimMonad m =>\n                MutableArray (PrimState m) a -> Int -> Int -> Int -> m ()","moveBackwards !arr !dstOff !srcOff !len\n  = ((Ck.check \"Data/Vector/Mutable.hs\" 150) Ck.Internal)\n      \"moveBackwards\"\n      \"not a backwards move\"\n      (dstOff < srcOff)\n      $\n      loopM len $\n        \\ i -> readArray arr (srcOff + i) >>= writeArray arr (dstOff + i)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","FlexibleInstances","BangPatterns","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}