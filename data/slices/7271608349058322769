{"sliceID":7271608349058322769,"uses":[{"reference":{"otherSlice":4426932037271932392},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4214969997485425698},"usedName":{"valueName":{"identifier":"runExceptT"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null}],"fragment":["mapExceptT ::\n           (m (Either e a) -> n (Either e' b)) ->\n             ExceptT e m a -> ExceptT e' n b","mapExceptT f m = ExceptT $ f (runExceptT m)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}