{"sliceID":6894952919000931467,"uses":[{"reference":{"otherSlice":4810524997948272614},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4333211870080298674},"usedName":{"valueName":{"identifier":"lookupMin"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null}],"fragment":["findMin :: Set a -> a","findMin t\n  | Just r <- lookupMin t = r\n  | otherwise = error \"Set.findMin: empty set has no minimal element\""],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}