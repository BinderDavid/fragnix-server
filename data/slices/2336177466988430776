{"sliceID":2336177466988430776,"uses":[{"reference":{"otherSlice":460497716562189627},"usedName":{"typeName":{"identifier":"MonadMask"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":8978767458331868247},"usedName":{"typeName":{"identifier":"RWST"}},"qualification":"LazyRWS"},{"reference":{"otherSlice":460497716562189627},"usedName":{"valueName":{"identifier":"mask"}},"qualification":null},{"reference":{"otherSlice":8978767458331868247},"usedName":{"constructorName":{"identifier":"RWST"},"constructorTypeName":{"identifier":"RWST"}},"qualification":"LazyRWS"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8978767458331868247},"usedName":{"valueName":{"identifier":"runRWST"}},"qualification":"LazyRWS"},{"reference":{"otherSlice":460497716562189627},"usedName":{"valueName":{"identifier":"uninterruptibleMask"}},"qualification":null}],"fragment":["instance (MonadMask m, Monoid w) =>\n         MonadMask (LazyRWS.RWST r w s m)\n         where\n        mask a\n          = LazyRWS.RWST $\n              \\ r s -> mask $ \\ u -> LazyRWS.runRWST (a $ q u) r s\n          where q ::\n                  (m (a, s, w) -> m (a, s, w)) ->\n                    LazyRWS.RWST r w s m a -> LazyRWS.RWST r w s m a\n                q u (LazyRWS.RWST b) = LazyRWS.RWST $ \\ r s -> u (b r s)\n        uninterruptibleMask a\n          = LazyRWS.RWST $\n              \\ r s -> uninterruptibleMask $ \\ u -> LazyRWS.runRWST (a $ q u) r s\n          where q ::\n                  (m (a, s, w) -> m (a, s, w)) ->\n                    LazyRWS.RWST r w s m a -> LazyRWS.RWST r w s m a\n                q u (LazyRWS.RWST b) = LazyRWS.RWST $ \\ r s -> u (b r s)"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}