{"sliceID":5964107403045317892,"uses":[{"reference":{"otherSlice":6205980380132502844},"usedName":{"valueName":{"identifier":"safeRangeSize"}},"qualification":null},{"reference":{"otherSlice":7390130272431652744},"usedName":{"valueName":{"identifier":"unsafeAccumArray"}},"qualification":null},{"reference":{"otherSlice":5450451306159135692},"usedName":{"valueName":{"identifier":"safeIndex"}},"qualification":null},{"reference":{"otherSlice":7390130272431652744},"usedName":{"typeName":{"identifier":"IArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Arr"},"usedName":{"typeName":{"identifier":"Ix"}},"qualification":null}],"fragment":["accumArray ::\n             (IArray a e, Ix i) =>\n             (e -> e' -> e) -> e -> (i, i) -> [(i, e')] -> a i e","accumArray f initialValue (l, u) ies\n  = let n = safeRangeSize (l, u) in\n      unsafeAccumArray f initialValue (l, u)\n        [(safeIndex (l, u) n i, e) | (i, e) <- ies]"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","RoleAnnotations","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}