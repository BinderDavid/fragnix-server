{"sliceID":3820181889823953887,"uses":[{"reference":{"otherSlice":2520963219192896432},"usedName":{"typeName":{"identifier":"FromJSON1"}},"qualification":null},{"reference":{"builtinModule":"Data.List.NonEmpty"},"usedName":{"typeName":{"identifier":"NonEmpty"}},"qualification":null},{"reference":{"otherSlice":2520963219192896432},"usedName":{"valueName":{"identifier":"liftParseJSON"}},"qualification":null},{"reference":{"otherSlice":2955134678835024079},"usedName":{"valueName":{"identifier":"withArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Data.Traversable"},"usedName":{"valueName":{"identifier":"sequence"}},"qualification":"Tr"},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":null},{"reference":{"otherSlice":2561774662309837166},"usedName":{"valueName":{"identifier":"parseIndexedJSON"}},"qualification":null},{"reference":{"otherSlice":9026110825259294577},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"V"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"Data.List.NonEmpty"},"usedName":{"constructorName":{"operator":":|"},"constructorTypeName":{"identifier":"NonEmpty"}},"qualification":null}],"fragment":["instance FromJSON1 NonEmpty where\n        liftParseJSON p _\n          = withArray \"NonEmpty a\" $\n              (>>= ne) .\n                Tr.sequence . zipWith (parseIndexedJSON p) [0 ..] . V.toList\n          where ne [] = fail \"Expected a NonEmpty but got an empty list\"\n                ne (x : xs) = pure (x :| xs)\n        \n        {-# INLINE liftParseJSON #-}"],"instances":[],"language":{"extensions":["DataKinds","DefaultSignatures","FlexibleContexts","FlexibleInstances","GADTs","MultiParamTypeClasses","NamedFieldPuns","OverloadedStrings","RecordWildCards","ScopedTypeVariables","TypeOperators","TypeSynonymInstances","UndecidableInstances","ViewPatterns","PolyKinds","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}