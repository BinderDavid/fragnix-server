{"sliceID":7937845514117623157,"uses":[{"reference":{"otherSlice":4050968582571819670},"usedName":{"valueName":{"identifier":"unstreamList"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3572604384653929005},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"S"},{"reference":{"otherSlice":5209636935073169998},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null}],"fragment":["zip :: Text -> Text -> [(Char, Char)]","zip a b = S.unstreamList $ S.zipWith (,) (stream a) (stream b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}