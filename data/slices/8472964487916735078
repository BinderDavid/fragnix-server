{"sliceID":8472964487916735078,"uses":[{"reference":{"otherSlice":6847450126335022993},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"otherSlice":1742289114557094478},"usedName":{"typeName":{"identifier":"ReaderT"}},"qualification":null},{"reference":{"otherSlice":6847450126335022993},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":6485218519662548500},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance MonadThrow m => MonadThrow (ReaderT r m) where\n        throwM e = lift $ throwM e"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}