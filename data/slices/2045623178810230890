{"sliceID":2045623178810230890,"uses":[{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"typeName":{"identifier":"Storable"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":"G"},{"reference":{"otherSlice":4712271613458680745},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":4712271613458680745},"usedName":{"constructorName":{"identifier":"MVector"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"otherSlice":5560156063485050252},"usedName":{"valueName":{"identifier":"updPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"advancePtr"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicOverlaps"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":1563446721712631093},"usedName":{"valueName":{"identifier":"getPtr"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeNew"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2866072309135087758},"usedName":{"valueName":{"identifier":"unsafePrimToPrim"}},"qualification":null},{"reference":{"otherSlice":2752094065246721175},"usedName":{"valueName":{"identifier":"mallocVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"maxBound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quot"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicInitialize"}},"qualification":"G"},{"reference":{"otherSlice":2160315910710506186},"usedName":{"valueName":{"identifier":"storableZero"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeRead"}},"qualification":"G"},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekElemOff"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeWrite"}},"qualification":"G"},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeElemOff"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicSet"}},"qualification":"G"},{"reference":{"otherSlice":8061469897437061275},"usedName":{"valueName":{"identifier":"storableSet"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"copyArray"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeMove"}},"qualification":"G"},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"moveArray"}},"qualification":null}],"fragment":["instance Storable a => G.MVector MVector a where\n        {-# INLINE basicLength #-}\n        basicLength (MVector n _) = n\n        \n        {-# INLINE basicUnsafeSlice #-}\n        basicUnsafeSlice j m (MVector _ fp)\n          = MVector m (updPtr (`advancePtr` j) fp)\n        \n        {-# INLINE basicOverlaps #-}\n        basicOverlaps (MVector m fp) (MVector n fq)\n          = between p q (q `advancePtr` n) || between q p (p `advancePtr` m)\n          where between x y z = x >= y && x < z\n                p = getPtr fp\n                q = getPtr fq\n        \n        {-# INLINE basicUnsafeNew #-}\n        basicUnsafeNew n\n          | n < 0 =\n            error $ \"Storable.basicUnsafeNew: negative length: \" ++ show n\n          | n > mx =\n            error $ \"Storable.basicUnsafeNew: length too large: \" ++ show n\n          | otherwise =\n            unsafePrimToPrim $\n              do fp <- mallocVector n\n                 return $ MVector n fp\n          where size = sizeOf (undefined :: a)\n                mx = maxBound `quot` size :: Int\n        \n        {-# INLINE basicInitialize #-}\n        basicInitialize = storableZero\n        \n        {-# INLINE basicUnsafeRead #-}\n        basicUnsafeRead (MVector _ fp) i\n          = unsafePrimToPrim $ withForeignPtr fp (`peekElemOff` i)\n        \n        {-# INLINE basicUnsafeWrite #-}\n        basicUnsafeWrite (MVector _ fp) i x\n          = unsafePrimToPrim $ withForeignPtr fp $ \\ p -> pokeElemOff p i x\n        \n        {-# INLINE basicSet #-}\n        basicSet = storableSet\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MVector n fp) (MVector _ fq)\n          = unsafePrimToPrim $\n              withForeignPtr fp $\n                \\ p -> withForeignPtr fq $ \\ q -> copyArray p q n\n        \n        {-# INLINE basicUnsafeMove #-}\n        basicUnsafeMove (MVector n fp) (MVector _ fq)\n          = unsafePrimToPrim $\n              withForeignPtr fp $\n                \\ p -> withForeignPtr fq $ \\ q -> moveArray p q n"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","MagicHash","MultiParamTypeClasses","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}