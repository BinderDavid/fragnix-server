{"sliceID":3651015460382939123,"uses":[{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2694158817781932873},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"otherSlice":8729740523953049306},"usedName":{"valueName":{"identifier":"mkInvalidRecvArgError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":516868628687576238},"usedName":{"valueName":{"identifier":"withNewSockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"alloca"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"poke"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":2027249411829490598},"usedName":{"valueName":{"identifier":"throwSocketErrorWaitRead"}},"qualification":null},{"reference":{"otherSlice":8319617064718618995},"usedName":{"valueName":{"identifier":"c_recvfrom"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":8916289653060199919},"usedName":{"valueName":{"identifier":"mkEOFError"}},"qualification":null},{"reference":{"otherSlice":1513406067610602982},"usedName":{"valueName":{"identifier":"isConnected"}},"qualification":null},{"reference":{"otherSlice":2500289176883325979},"usedName":{"valueName":{"identifier":"getPeerName"}},"qualification":null},{"reference":{"otherSlice":1053031603453933343},"usedName":{"valueName":{"identifier":"peekSockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["recvBufFrom :: Socket -> Ptr a -> Int -> IO (Int, SockAddr)","recvBufFrom sock@(MkSocket s family _stype _protocol _status) ptr\n  nbytes\n  | nbytes <= 0 =\n    ioError (mkInvalidRecvArgError \"Network.Socket.recvFrom\")\n  | otherwise =\n    withNewSockAddr family $\n      \\ ptr_addr sz ->\n        do alloca $\n             \\ ptr_len ->\n               do poke ptr_len (fromIntegral sz)\n                  len <- throwSocketErrorWaitRead sock \"Network.Socket.recvFrom\" $\n                           c_recvfrom s ptr (fromIntegral nbytes) 0 ptr_addr ptr_len\n                  let len' = fromIntegral len\n                  if len' == 0 then ioError (mkEOFError \"Network.Socket.recvFrom\")\n                    else\n                    do flg <- isConnected sock\n                       sockaddr <- if flg then getPeerName sock else peekSockAddr ptr_addr\n                       return (len', sockaddr)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}