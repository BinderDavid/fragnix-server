{"sliceID":8413869252730723529,"uses":[{"reference":{"otherSlice":1599603479796789446},"usedName":{"typeName":{"identifier":"Input"}},"qualification":null},{"reference":{"otherSlice":5879622369460343407},"usedName":{"typeName":{"identifier":"MkParser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":3524442302762518323},"usedName":{"valueName":{"identifier":"satisfy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["anyChar :: Input inp => MkParser inp Char","anyChar = satisfy (const True)"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}