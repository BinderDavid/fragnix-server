{"sliceID":8292488503102734794,"uses":[{"reference":{"otherSlice":1684953695762370946},"usedName":{"constructorName":{"identifier":"C"},"constructorTypeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":248739104559243974},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"B"},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":1684953695762370946},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null}],"fragment":["pushBack :: [B.ByteString] -> Get ()","pushBack [] = C $ \\ inp ks -> ks inp ()\npushBack bs = C $ \\ inp ks -> ks (B.concat (inp : bs)) ()"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}