{"sliceID":1211476802505943301,"uses":[{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"otherSlice":2256778640200800668},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8597262708113552862},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":"Bundle"},{"reference":{"otherSlice":46296727456033264},"usedName":{"valueName":{"identifier":"checkIndex"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Unsafe"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":827568665629779481},"usedName":{"valueName":{"identifier":"unsafeRead"}},"qualification":null},{"reference":{"otherSlice":6370104610824253647},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"otherSlice":7298166268752041815},"usedName":{"valueName":{"identifier":"length"}},"qualification":null}],"fragment":["unsafeAccum ::\n              (PrimMonad m, MVector v a) =>\n              (a -> b -> a) -> v (PrimState m) a -> Bundle u (Int, b) -> m ()","unsafeAccum f !v s = Bundle.mapM_ upd s\n  where {-# INLINE [0] upd #-}\n        upd (i, b)\n          = do a <- ((Ck.checkIndex \"Data/Vector/Generic/Mutable.hs\" 857)\n                       Ck.Unsafe)\n                      \"accum\"\n                      i\n                      n\n                      $ unsafeRead v i\n               unsafeWrite v i (f a b)\n        !n = length v"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}