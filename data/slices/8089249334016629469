{"sliceID":8089249334016629469,"uses":[{"reference":{"otherSlice":8028585778067812017},"usedName":{"typeName":{"identifier":"RegexMaker"}},"qualification":null},{"reference":{"otherSlice":5383107759007114376},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"otherSlice":3514027083194216634},"usedName":{"typeName":{"identifier":"CompOption"}},"qualification":null},{"reference":{"otherSlice":6024572806983767782},"usedName":{"typeName":{"identifier":"ExecOption"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"otherSlice":8028585778067812017},"usedName":{"valueName":{"identifier":"makeRegexOpts"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8168346315145379828},"usedName":{"valueName":{"identifier":"compile"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":6795394398254038510},"usedName":{"valueName":{"identifier":"unwrap"}},"qualification":null},{"reference":{"otherSlice":8028585778067812017},"usedName":{"valueName":{"identifier":"makeRegexOptsM"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["instance RegexMaker Regex CompOption ExecOption L.ByteString where\n        makeRegexOpts c e pattern\n          = unsafePerformIO $ compile c e pattern >>= unwrap\n        makeRegexOptsM c e pattern\n          = either (fail . show) return $\n              unsafePerformIO $ compile c e pattern"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}