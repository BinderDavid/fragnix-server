{"sliceID":8056330025569894447,"uses":[{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":6674542350474729315},"usedName":{"typeName":{"identifier":"SocketOption"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":1131227992560969135},"usedName":{"valueName":{"identifier":"packSocketOption'"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Utils"},"usedName":{"valueName":{"identifier":"with"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7565703929110708721},"usedName":{"valueName":{"identifier":"throwSocketErrorIfMinus1_"}},"qualification":null},{"reference":{"otherSlice":9210048966305576191},"usedName":{"valueName":{"identifier":"c_setsockopt"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Types"},"usedName":{"typeName":{"identifier":"CInt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["setSocketOption :: Socket -> SocketOption -> Int -> IO ()","setSocketOption (MkSocket s _ _ _ _) so v\n  = do (level, opt) <- packSocketOption' \"setSocketOption\" so\n       with (fromIntegral v) $\n         \\ ptr_v ->\n           do throwSocketErrorIfMinus1_ \"Network.Socket.setSocketOption\" $\n                c_setsockopt s level opt ptr_v\n                  (fromIntegral (sizeOf (undefined :: CInt)))\n              return ()"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}