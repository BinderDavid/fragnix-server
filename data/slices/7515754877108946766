{"sliceID":7515754877108946766,"uses":[{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3456823540224708168},"usedName":{"valueName":{"identifier":"toBoundedRealFloat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Float"},"usedName":{"typeName":{"identifier":"RealFloat"}},"qualification":null},{"reference":{"otherSlice":1008626907939011545},"usedName":{"typeName":{"identifier":"Scientific"}},"qualification":null}],"fragment":["toRealFloat :: (RealFloat a) => Scientific -> a","toRealFloat = either id id . toBoundedRealFloat"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","UnboxedTuples","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}