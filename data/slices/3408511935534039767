{"sliceID":3408511935534039767,"uses":[{"reference":{"otherSlice":349926399415958927},"usedName":{"valueName":{"identifier":"runGetIncremental"}},"qualification":null},{"reference":{"otherSlice":1159679583748719057},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":4645870123692490014},"usedName":{"valueName":{"identifier":"chunk"}},"qualification":"L"},{"reference":{"otherSlice":1159679583748719057},"usedName":{"constructorName":{"identifier":"Partial"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"otherSlice":1967690556927568142},"usedName":{"valueName":{"identifier":"takeHeadChunk"}},"qualification":null},{"reference":{"otherSlice":6139696115448899087},"usedName":{"valueName":{"identifier":"dropHeadChunk"}},"qualification":null},{"reference":{"otherSlice":1159679583748719057},"usedName":{"constructorName":{"identifier":"Fail"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":1684953695762370946},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":1019482563193416814},"usedName":{"typeName":{"identifier":"ByteOffset"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null}],"fragment":["runGetOrFail ::\n             Get a ->\n               L.ByteString ->\n                 Either (L.ByteString, ByteOffset, String)\n                   (L.ByteString, ByteOffset, a)","runGetOrFail g lbs0 = feedAll (runGetIncremental g) lbs0\n  where feedAll (Done bs pos x) lbs = Right (L.chunk bs lbs, pos, x)\n        feedAll (Partial k) lbs\n          = feedAll (k (takeHeadChunk lbs)) (dropHeadChunk lbs)\n        feedAll (Fail x pos msg) xs = Left (L.chunk x xs, pos, msg)"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}