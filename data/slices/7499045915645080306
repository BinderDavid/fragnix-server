{"sliceID":7499045915645080306,"uses":[{"reference":{"otherSlice":6150436666955507733},"usedName":{"typeName":{"identifier":"Prim"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"sizeOf#"}},"qualification":null},{"reference":{"otherSlice":4915836160333208116},"usedName":{"valueName":{"identifier":"unI#"}},"qualification":null},{"reference":{"otherSlice":3493535245002302920},"usedName":{"valueName":{"identifier":"sIZEOF_FLOAT"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"alignment#"}},"qualification":null},{"reference":{"otherSlice":3493535245002302920},"usedName":{"valueName":{"identifier":"aLIGNMENT_FLOAT"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"indexByteArray#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"F#"},"constructorTypeName":{"identifier":"Float"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"indexFloatArray#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"readByteArray#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"readFloatArray#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"writeByteArray#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"writeFloatArray#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"setByteArray#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"unsafeCoerce#"}},"qualification":null},{"reference":{"otherSlice":4506631845755624938},"usedName":{"valueName":{"identifier":"internal"}},"qualification":null},{"reference":{"otherSlice":5197010631331373356},"usedName":{"valueName":{"identifier":"setFloatArray#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"indexOffAddr#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"indexFloatOffAddr#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"readOffAddr#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"readFloatOffAddr#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"writeOffAddr#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"writeFloatOffAddr#"}},"qualification":null},{"reference":{"otherSlice":6150436666955507733},"usedName":{"valueName":{"identifier":"setOffAddr#"}},"qualification":null},{"reference":{"otherSlice":8163707358857227034},"usedName":{"valueName":{"identifier":"setFloatOffAddr#"}},"qualification":null}],"fragment":["instance Prim (Float) where\n        sizeOf# _ = unI# sIZEOF_FLOAT\n        alignment# _ = unI# aLIGNMENT_FLOAT\n        indexByteArray# arr# i# = F# (indexFloatArray# arr# i#)\n        readByteArray# arr# i# s#\n          = case readFloatArray# arr# i# s# of\n                (# s1#, x# #) -> (# s1#, F# x# #)\n        writeByteArray# arr# i# (F# x#) s# = writeFloatArray# arr# i# x# s#\n        setByteArray# arr# i# n# (F# x#) s#\n          = let i = fromIntegral (I# i#)\n                n = fromIntegral (I# n#)\n              in\n              case unsafeCoerce# (internal (setFloatArray# arr# i n x#)) s# of\n                  (# s1#, _ #) -> s1#\n        indexOffAddr# addr# i# = F# (indexFloatOffAddr# addr# i#)\n        readOffAddr# addr# i# s#\n          = case readFloatOffAddr# addr# i# s# of\n                (# s1#, x# #) -> (# s1#, F# x# #)\n        writeOffAddr# addr# i# (F# x#) s#\n          = writeFloatOffAddr# addr# i# x# s#\n        setOffAddr# addr# i# n# (F# x#) s#\n          = let i = fromIntegral (I# i#)\n                n = fromIntegral (I# n#)\n              in\n              case unsafeCoerce# (internal (setFloatOffAddr# addr# i n x#)) s# of\n                  (# s1#, _ #) -> s1#\n        \n        {-# INLINE sizeOf# #-}\n        \n        {-# INLINE alignment# #-}\n        \n        {-# INLINE indexByteArray# #-}\n        \n        {-# INLINE readByteArray# #-}\n        \n        {-# INLINE writeByteArray# #-}\n        \n        {-# INLINE setByteArray# #-}\n        \n        {-# INLINE indexOffAddr# #-}\n        \n        {-# INLINE readOffAddr# #-}\n        \n        {-# INLINE writeOffAddr# #-}\n        \n        {-# INLINE setOffAddr# #-}"],"instances":[],"language":{"extensions":["UnboxedTuples","MagicHash","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}