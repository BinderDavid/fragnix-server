{"sliceID":6222537986862133813,"uses":[{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2311309294628532666},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":3855045874624644727},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":5010666227755546614},"usedName":{"valueName":{"identifier":"merge"}},"qualification":null},{"reference":{"otherSlice":7074760854266457307},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"otherSlice":3545442061195933811},"usedName":{"valueName":{"identifier":"unsafeInsertNew"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":6658013581939880226},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"typeName":{"identifier":"IntPSQ"}},"qualification":null}],"fragment":["unsafeInsertWithIncreasePriority ::\n                                   Ord p =>\n                                   (p -> v -> p -> v -> (p, v)) ->\n                                     Key -> p -> v -> IntPSQ p v -> IntPSQ p v","unsafeInsertWithIncreasePriority f k p x t0 = go t0\n  where go t\n          = case t of\n                Nil -> Tip k p x\n                Tip k' p' x' | k == k' ->\n                               case f p x p' x' of\n                                   (!fp, !fx) -> Tip k fp fx\n                             | otherwise -> link k' p' x' k (Tip k p x) Nil\n                Bin k' p' x' m l r | nomatch k k' m ->\n                                     link k' p' x' k (Tip k p x) (merge m l r)\n                                   | k == k' ->\n                                     case f p x p' x' of\n                                         (!fp, !fx) | zero k m ->\n                                                      merge m (unsafeInsertNew k fp fx l) r\n                                                    | otherwise ->\n                                                      merge m l (unsafeInsertNew k fp fx r)\n                                   | zero k m -> Bin k' p' x' m (go l) r\n                                   | otherwise -> Bin k' p' x' m l (go r)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}