{"sliceID":1225366833495066670,"uses":[{"reference":{"otherSlice":3720735402915720453},"usedName":{"typeName":{"identifier":"JSONClass"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":4862954853102401142},"usedName":{"valueName":{"identifier":"tvbToType"}},"qualification":null},{"reference":{"otherSlice":1061920283477832407},"usedName":{"valueName":{"identifier":"buildTypeInstanceFromTys"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":null},{"reference":{"otherSlice":5738139876645045975},"usedName":{"valueName":{"identifier":"stealKindForType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["buildTypeInstance ::\n                  Name ->\n                    JSONClass -> Cxt -> [TyVarBndr] -> Maybe [Type] -> Q (Cxt, Type)","buildTypeInstance tyConName jc dataCxt tvbs Nothing\n  = let varTys :: [Type]\n        varTys = map tvbToType tvbs\n      in buildTypeInstanceFromTys tyConName jc dataCxt varTys False\nbuildTypeInstance dataFamName jc dataCxt tvbs\n  (Just instTysAndKinds)\n  = do let instTys :: [Type]\n           instTys = zipWith stealKindForType tvbs instTysAndKinds\n       buildTypeInstanceFromTys dataFamName jc dataCxt instTys True"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"]}}