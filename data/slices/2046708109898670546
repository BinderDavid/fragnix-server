{"sliceID":2046708109898670546,"uses":[{"reference":{"otherSlice":1883707309920229271},"usedName":{"valueName":{"identifier":"getPossibleAddrs"}},"qualification":null},{"reference":{"otherSlice":1575450884604877623},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"SocketType"}},"qualification":"NS"},{"reference":{"otherSlice":846558884396738766},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":"S8"},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"catch"}},"qualification":"E"},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"typeName":{"identifier":"IOException"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":1339151303418925646},"usedName":{"valueName":{"identifier":"socket"}},"qualification":"NS"},{"reference":{"otherSlice":1781973223832186205},"usedName":{"valueName":{"identifier":"addrFamily"}},"qualification":"NS"},{"reference":{"otherSlice":1781973223832186205},"usedName":{"valueName":{"identifier":"addrSocketType"}},"qualification":"NS"},{"reference":{"otherSlice":1781973223832186205},"usedName":{"valueName":{"identifier":"addrProtocol"}},"qualification":"NS"},{"reference":{"otherSlice":8056330025569894447},"usedName":{"valueName":{"identifier":"setSocketOption"}},"qualification":"NS"},{"reference":{"otherSlice":6674542350474729315},"usedName":{"constructorName":{"identifier":"NoDelay"},"constructorTypeName":{"identifier":"SocketOption"}},"qualification":"NS"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracketOnError"}},"qualification":"E"},{"reference":{"otherSlice":4456032333110337922},"usedName":{"valueName":{"identifier":"close"}},"qualification":"NS"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5694006279979804583},"usedName":{"valueName":{"identifier":"connect"}},"qualification":"NS"},{"reference":{"otherSlice":1781973223832186205},"usedName":{"valueName":{"identifier":"addrAddress"}},"qualification":"NS"},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":7599519667858710776},"usedName":{"typeName":{"identifier":"Family"}},"qualification":"NS"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":"NS"},{"reference":{"otherSlice":2694158817781932873},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":"NS"}],"fragment":["getSocketFamilyTCP ::\n                   ByteString -> Int -> NS.Family -> IO (NS.Socket, NS.SockAddr)","getSocketFamilyTCP host' port' addrFamily\n  = do addrsInfo <- getPossibleAddrs NS.Stream (S8.unpack host')\n                      port'\n                      addrFamily\n       firstSuccess addrsInfo\n  where firstSuccess [ai] = connect ai\n        firstSuccess (ai : ais)\n          = connect ai `E.catch` \\ (_ :: IOException) -> firstSuccess ais\n        firstSuccess _ = error \"getSocketFamilyTCP: can't happen\"\n        createSocket addrInfo\n          = do sock <- NS.socket (NS.addrFamily addrInfo)\n                         (NS.addrSocketType addrInfo)\n                         (NS.addrProtocol addrInfo)\n               NS.setSocketOption sock NS.NoDelay 1\n               return sock\n        connect addrInfo\n          = E.bracketOnError (createSocket addrInfo) NS.close $\n              \\ sock ->\n                do NS.connect sock (NS.addrAddress addrInfo)\n                   return (sock, NS.addrAddress addrInfo)"],"instances":[],"language":{"extensions":["ScopedTypeVariables","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}