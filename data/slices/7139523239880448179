{"sliceID":7139523239880448179,"uses":[{"reference":{"otherSlice":1289144971551604409},"usedName":{"constructorName":{"identifier":"Void"},"constructorTypeName":{"identifier":"OrdPSQ"}},"qualification":null},{"reference":{"otherSlice":1653478133539946166},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":1289144971551604409},"usedName":{"constructorName":{"identifier":"Winner"},"constructorTypeName":{"identifier":"OrdPSQ"}},"qualification":null},{"reference":{"otherSlice":3812437197416925147},"usedName":{"constructorName":{"identifier":"E"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"Start"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":8473275628648531546},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"RLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":2482608232249771564},"usedName":{"valueName":{"identifier":"play"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"LLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":1289144971551604409},"usedName":{"typeName":{"identifier":"OrdPSQ"}},"qualification":null}],"fragment":["delete :: (Ord k, Ord p) => k -> OrdPSQ k p v -> OrdPSQ k p v","delete k = go\n  where go t\n          = case t of\n                Void -> empty\n                Winner (E k' p v) Start _ | k == k' -> empty\n                                          | otherwise -> singleton k' p v\n                Winner e (RLoser _ e' tl m tr) m' | k <= m ->\n                                                    go (Winner e tl m) `play` (Winner e' tr m')\n                                                  | otherwise ->\n                                                    (Winner e tl m) `play` go (Winner e' tr m')\n                Winner e (LLoser _ e' tl m tr) m' | k <= m ->\n                                                    go (Winner e' tl m) `play` (Winner e tr m')\n                                                  | otherwise ->\n                                                    (Winner e' tl m) `play` go (Winner e tr m')"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}