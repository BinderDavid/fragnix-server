{"sliceID":7193510314222444702,"uses":[{"reference":{"otherSlice":6416309471946888257},"usedName":{"constructorName":{"identifier":"ErrorT"},"constructorTypeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":6416309471946888257},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null}],"fragment":["throwError :: (Monad m) => e -> ErrorT e m a","throwError l = ErrorT $ return (Left l)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}