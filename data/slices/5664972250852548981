{"sliceID":5664972250852548981,"uses":[{"reference":{"otherSlice":536573953574804129},"usedName":{"valueName":{"identifier":"mkReaper"}},"qualification":null},{"reference":{"otherSlice":2268949600468344760},"usedName":{"valueName":{"identifier":"defaultReaperSettings"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperAction"}},"qualification":null},{"reference":{"otherSlice":3429560073620192777},"usedName":{"valueName":{"identifier":"mkListAction"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperDelay"}},"qualification":null},{"reference":{"otherSlice":4289378736736410887},"usedName":{"constructorName":{"identifier":"Handle"},"constructorTypeName":{"identifier":"Handle"}},"qualification":null},{"reference":{"builtinModule":"Data.IORef"},"usedName":{"valueName":{"identifier":"atomicModifyIORef'"}},"qualification":"I"},{"reference":{"otherSlice":7643827777230132146},"usedName":{"constructorName":{"identifier":"Inactive"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":"I"},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"catch"}},"qualification":"E"},{"reference":{"otherSlice":1182771370629240986},"usedName":{"valueName":{"identifier":"ignoreAll"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7643827777230132146},"usedName":{"constructorName":{"identifier":"Canceled"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7643827777230132146},"usedName":{"constructorName":{"identifier":"Active"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3624653502930161964},"usedName":{"typeName":{"identifier":"Manager"}},"qualification":null}],"fragment":["initialize :: Int -> IO Manager","initialize timeout\n  = mkReaper\n      defaultReaperSettings{reaperAction = mkListAction prune,\n                            reaperDelay = timeout}\n  where prune m@(Handle actionRef stateRef)\n          = do state <- I.atomicModifyIORef' stateRef\n                          (\\ x -> (inactivate x, x))\n               case state of\n                   Inactive -> do onTimeout <- I.readIORef actionRef\n                                  onTimeout `E.catch` ignoreAll\n                                  return Nothing\n                   Canceled -> return Nothing\n                   _ -> return $ Just m\n        inactivate Active = Inactive\n        inactivate x = x"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}