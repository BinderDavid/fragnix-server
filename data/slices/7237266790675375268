{"sliceID":7237266790675375268,"uses":[{"reference":{"otherSlice":4289542537616874493},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":6146303340648410203},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"Bundle"},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"uncurry"}},"qualification":null},{"reference":{"otherSlice":1066027298338131259},"usedName":{"valueName":{"identifier":"indexed"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["izipWith ::\n           (Vector v a, Vector v b, Vector v c) =>\n           (Int -> a -> b -> c) -> v a -> v b -> v c","izipWith f\n  = \\ xs ys ->\n      unstream\n        (Bundle.zipWith (uncurry f) (Bundle.indexed (stream xs))\n           (stream ys))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}