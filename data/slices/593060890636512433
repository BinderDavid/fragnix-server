{"sliceID":593060890636512433,"uses":[{"reference":{"otherSlice":211242300878604134},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":3770236081188429249},"usedName":{"valueName":{"identifier":"hasOneByte"}},"qualification":null},{"reference":{"otherSlice":3881237054726774681},"usedName":{"valueName":{"identifier":"getByte"}},"qualification":null},{"reference":{"otherSlice":3643532483078383744},"usedName":{"valueName":{"identifier":"toTokenHeader"}},"qualification":null},{"reference":{"otherSlice":4709582743340651841},"usedName":{"valueName":{"operator":"<<"}},"qualification":null},{"reference":{"otherSlice":8545298451166551068},"usedName":{"valueName":{"identifier":"run"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":2180608661464841369},"usedName":{"valueName":{"identifier":"tokenFoldedKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2728446607831036551},"usedName":{"typeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"otherSlice":4242350305663552248},"usedName":{"typeName":{"identifier":"ReadBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2548818857463243711},"usedName":{"typeName":{"identifier":"HeaderList"}},"qualification":null}],"fragment":["decodeSimple :: DynamicTable -> ReadBuffer -> IO HeaderList","decodeSimple dyntbl rbuf = go empty\n  where go builder\n          = do more <- hasOneByte rbuf\n               if more then\n                 do w <- getByte rbuf\n                    !tv <- toTokenHeader dyntbl w rbuf\n                    let builder' = builder << tv\n                    go builder'\n                 else\n                 do let !tvs = run builder\n                        !kvs = map (\\ (t, v) -> let !k = tokenFoldedKey t in (k, v)) tvs\n                    return kvs"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}