{"sliceID":1801218542215679451,"uses":[{"reference":{"otherSlice":3572244850193552443},"usedName":{"valueName":{"identifier":"unstreamM"}},"qualification":null},{"reference":{"otherSlice":8477239479510972737},"usedName":{"valueName":{"identifier":"generateM"}},"qualification":"MBundle"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["generateM ::\n            (Monad m, Vector v a) => Int -> (Int -> m a) -> m (v a)","generateM n f = unstreamM (MBundle.generateM n f)"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}