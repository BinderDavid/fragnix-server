{"sliceID":4348296255908580135,"uses":[{"reference":{"otherSlice":8530606344857069545},"usedName":{"constructorName":{"identifier":"WhenMissing"},"constructorTypeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"otherSlice":8530606344857069545},"usedName":{"valueName":{"identifier":"missingSubtree"}},"qualification":null},{"reference":{"otherSlice":2511470583471245861},"usedName":{"valueName":{"identifier":"traverseMaybeWithKey"}},"qualification":null},{"reference":{"otherSlice":8530606344857069545},"usedName":{"valueName":{"identifier":"missingKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"otherSlice":555828902643222699},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8530606344857069545},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null}],"fragment":["traverseMaybeMissing ::\n                       Applicative f => (Key -> x -> f (Maybe y)) -> WhenMissing f x y","traverseMaybeMissing f\n  = WhenMissing{missingSubtree = traverseMaybeWithKey f,\n                missingKey = f}"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}