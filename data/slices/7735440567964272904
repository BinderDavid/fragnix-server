{"sliceID":7735440567964272904,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"modifyIOError"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"ioeSetFileName"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4240602345081494639},"usedName":{"valueName":{"identifier":"ioeAddLocation"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"otherSlice":1389435903532062540},"usedName":{"valueName":{"identifier":"openDirStream"}},"qualification":"Posix"},{"reference":{"otherSlice":6994962645240061183},"usedName":{"valueName":{"identifier":"closeDirStream"}},"qualification":"Posix"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"otherSlice":5187639690936493815},"usedName":{"valueName":{"identifier":"readDirStream"}},"qualification":"Posix"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["getDirectoryContents :: FilePath -> IO [FilePath]","getDirectoryContents path\n  = modifyIOError\n      ((`ioeSetFileName` path) .\n         (`ioeAddLocation` \"getDirectoryContents\"))\n      $ do bracket (Posix.openDirStream path) Posix.closeDirStream start\n  where start dirp = loop id\n          where loop acc\n                  = do e <- Posix.readDirStream dirp\n                       if null e then return (acc []) else loop (acc . (e :))"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}