{"sliceID":113640712074753724,"uses":[{"reference":{"otherSlice":8819714792153022361},"usedName":{"valueName":{"identifier":"bogus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"typeName":{"identifier":"Proxy#"}},"qualification":null},{"reference":{"otherSlice":6369360844340108296},"usedName":{"typeName":{"identifier":"BitQueue"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":356770294696042422},"usedName":{"valueName":{"identifier":"unconsQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":9085244951776104570},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":5492475195316348806},"usedName":{"valueName":{"identifier":"balanceL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4896811384005926977},"usedName":{"valueName":{"identifier":"glue"}},"qualification":null}],"fragment":["deleteAlong :: any -> BitQueue -> Map k a -> Map k a","deleteAlong old !q0 !m = go (bogus old) q0 m\n  where go :: Proxy# () -> BitQueue -> Map k a -> Map k a\n        go !_ !_ Tip = Tip\n        go foom q (Bin _ ky y l r)\n          = case unconsQ q of\n                Just (False, tl) -> balanceR ky y (go foom tl l) r\n                Just (True, tl) -> balanceL ky y l (go foom tl r)\n                Nothing -> glue l r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}