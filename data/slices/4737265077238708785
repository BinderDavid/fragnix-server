{"sliceID":4737265077238708785,"uses":[{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":2656393015452141261},"usedName":{"valueName":{"identifier":"suffixBitMask"}},"qualification":"IntSet"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":7204950828003028705},"usedName":{"valueName":{"identifier":"prefixBitMask"}},"qualification":"IntSet"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":6872806235400289581},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":3272476539275573849},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"otherSlice":5576356556970261137},"usedName":{"valueName":{"identifier":"binCheckLeft"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":1003427505070580460},"usedName":{"valueName":{"identifier":"binCheckRight"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":3560529080271627853},"usedName":{"typeName":{"identifier":"IntSetPrefix"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null}],"fragment":["updatePrefix ::\n             IntSetPrefix -> IntMap a -> (IntMap a -> IntMap a) -> IntMap a","updatePrefix !kp t@(Bin p m l r) f\n  | m .&. IntSet.suffixBitMask /= 0 =\n    if p .&. IntSet.prefixBitMask == kp then f t else t\n  | nomatch kp p m = t\n  | zero kp m = binCheckLeft p m (updatePrefix kp l f) r\n  | otherwise = binCheckRight p m l (updatePrefix kp r f)\nupdatePrefix kp t@(Tip kx _) f\n  | kx .&. IntSet.prefixBitMask == kp = f t\n  | otherwise = t\nupdatePrefix _ Nil _ = Nil"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}