{"sliceID":1537847050575442772,"uses":[{"reference":{"otherSlice":5070660610753346485},"usedName":{"typeName":{"identifier":"ResourceT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":5070660610753346485},"usedName":{"constructorName":{"identifier":"ResourceT"},"constructorTypeName":{"identifier":"ResourceT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"valueName":{"identifier":"liftIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"mask"}},"qualification":"E"}],"fragment":["resourceMaskRIO ::\n                ((forall a . ResourceT IO a -> ResourceT IO a) -> ResourceT IO b)\n                  -> ResourceT IO b","resourceMaskRIO f\n  = ResourceT $\n      \\ istate ->\n        liftIO $\n          E.mask $\n            \\ restore -> let ResourceT f' = f (go restore) in f' istate\n  where go ::\n           (forall a . IO a -> IO a) ->\n             (forall a . ResourceT IO a -> ResourceT IO a)\n        go r (ResourceT g) = ResourceT (\\ i -> r (g i))"],"instances":[],"language":{"extensions":["FlexibleContexts","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","RankNTypes","DeriveDataTypeable","ConstraintKinds","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}