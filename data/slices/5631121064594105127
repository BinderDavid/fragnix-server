{"sliceID":5631121064594105127,"uses":[{"reference":{"otherSlice":4289542537616874493},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":673775860187228082},"usedName":{"valueName":{"identifier":"zipWith3"}},"qualification":"Bundle"},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"uncurry"}},"qualification":null},{"reference":{"otherSlice":1066027298338131259},"usedName":{"valueName":{"identifier":"indexed"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["izipWith3 ::\n            (Vector v a, Vector v b, Vector v c, Vector v d) =>\n            (Int -> a -> b -> c -> d) -> v a -> v b -> v c -> v d","izipWith3 f\n  = \\ as bs cs ->\n      unstream\n        (Bundle.zipWith3 (uncurry f) (Bundle.indexed (stream as))\n           (stream bs)\n           (stream cs))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}