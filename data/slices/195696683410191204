{"sliceID":195696683410191204,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":6423202506202804909},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mempty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mconcat"}},"qualification":null},{"reference":{"otherSlice":7612126003716308710},"usedName":{"valueName":{"identifier":"createArray"}},"qualification":null},{"reference":{"otherSlice":2421956646851686629},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1917744042732152598},"usedName":{"valueName":{"identifier":"copyArray"}},"qualification":null},{"reference":{"otherSlice":3535168395517515397},"usedName":{"valueName":{"identifier":"sizeofArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"sum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null}],"fragment":["instance Monoid (Array a) where\n        mempty = empty\n        mappend = (<|>)\n        mconcat l\n          = createArray sz (die \"mconcat\" \"impossible\") $\n              \\ ma ->\n                let go !_ [] = return ()\n                    go off (a : as)\n                      = copyArray ma off a 0 (sizeofArray a) >>\n                          go (off + sizeofArray a) as\n                  in go 0 l\n          where sz = sum . fmap sizeofArray $ l"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}