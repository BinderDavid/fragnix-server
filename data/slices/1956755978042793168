{"sliceID":1956755978042793168,"uses":[{"reference":{"otherSlice":7612126003716308710},"usedName":{"valueName":{"identifier":"createArray"}},"qualification":null},{"reference":{"otherSlice":2421956646851686629},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":1080947357764179124},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null},{"reference":{"otherSlice":3184645393199691518},"usedName":{"valueName":{"identifier":"indexArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3535168395517515397},"usedName":{"valueName":{"identifier":"sizeofArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":6423202506202804909},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null}],"fragment":["zipW :: String -> (a -> b -> c) -> Array a -> Array b -> Array c","zipW s f aa ab\n  = createArray mn (die s \"impossible\") $\n      \\ mc ->\n        let go i\n              | i < mn =\n                writeArray mc i (f (indexArray aa i) (indexArray ab i)) >>\n                  go (i + 1)\n              | otherwise = return ()\n          in go 0\n  where mn = sizeofArray aa `min` sizeofArray ab"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}