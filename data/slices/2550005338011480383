{"sliceID":2550005338011480383,"uses":[{"reference":{"otherSlice":1645105641400882136},"usedName":{"valueName":{"identifier":"htonl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"otherSlice":5782968290982124824},"usedName":{"typeName":{"identifier":"HostAddress"}},"qualification":null}],"fragment":["hostAddressToTuple :: HostAddress -> (Word8, Word8, Word8, Word8)","hostAddressToTuple ha'\n  = let ha = htonl ha'\n        byte i = fromIntegral (ha `shiftR` i) :: Word8\n      in (byte 24, byte 16, byte 8, byte 0)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","FlexibleInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}