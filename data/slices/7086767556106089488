{"sliceID":7086767556106089488,"uses":[{"reference":{"otherSlice":2337681378693068080},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":920961248214833976},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"typeName":{"identifier":"Object"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":"T"},{"reference":{"otherSlice":1537769983318493490},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"H"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2299749624321616128},"usedName":{"valueName":{"identifier":"unknownFieldFail"}},"qualification":null},{"reference":{"otherSlice":384585883097761768},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6716583115684516053},"usedName":{"valueName":{"operator":"<?>"}},"qualification":null},{"reference":{"otherSlice":2185855381435780722},"usedName":{"constructorName":{"identifier":"Key"},"constructorTypeName":{"identifier":"JSONPathElement"}},"qualification":null}],"fragment":["lookupFieldWith ::\n                (Value -> Parser a) ->\n                  String -> String -> Object -> T.Text -> Parser a","lookupFieldWith pj tName rec obj key\n  = case H.lookup key obj of\n        Nothing -> unknownFieldFail tName rec (T.unpack key)\n        Just v -> pj v <?> Key key"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"]}}