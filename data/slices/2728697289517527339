{"sliceID":2728697289517527339,"uses":[{"reference":{"otherSlice":6947997737051125680},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":5577026005116061919},"usedName":{"typeName":{"identifier":"HashPSQ"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"List"},{"reference":{"otherSlice":2362837949189714529},"usedName":{"valueName":{"identifier":"insert"}},"qualification":null},{"reference":{"otherSlice":811180821725942760},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null}],"fragment":["fromList ::\n           (Hashable k, Ord k, Ord p) => [(k, p, v)] -> HashPSQ k p v","fromList = List.foldl' (\\ psq (k, p, x) -> insert k p x psq) empty"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","GeneralizedNewtypeDeriving","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}