{"sliceID":6226481787424459031,"uses":[{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":3632351450164646686},"usedName":{"valueName":{"identifier":"mapAccumL"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["mapAccumL ::\n          (acc -> Word8 -> (acc, Word8)) ->\n            acc -> ByteString -> (acc, ByteString)","mapAccumL f s0 cs0 = go s0 cs0\n  where go s Empty = (s, Empty)\n        go s (Chunk c cs) = (s'', Chunk c' cs')\n          where (s', c') = S.mapAccumL f s c\n                (s'', cs') = go s' cs"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}