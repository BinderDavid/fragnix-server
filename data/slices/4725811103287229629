{"sliceID":4725811103287229629,"uses":[{"reference":{"builtinModule":"GHC.Num"},"usedName":{"typeName":{"identifier":"Num"}},"qualification":null},{"reference":{"otherSlice":1428913918031776161},"usedName":{"typeName":{"identifier":"Number"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3151987875864360268},"usedName":{"valueName":{"identifier":"binop"}},"qualification":null},{"reference":{"otherSlice":1428913918031776161},"usedName":{"constructorName":{"identifier":"I"},"constructorTypeName":{"identifier":"Number"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1428913918031776161},"usedName":{"constructorName":{"identifier":"D"},"constructorTypeName":{"identifier":"Number"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"abs"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"negate"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"signum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null}],"fragment":["instance Num Number where\n        (+) = binop (((I $!) .) . (+)) (((D $!) .) . (+))\n        \n        {-# INLINE (+) #-}\n        (-) = binop (((I $!) .) . (-)) (((D $!) .) . (-))\n        \n        {-# INLINE (-) #-}\n        (*) = binop (((I $!) .) . (*)) (((D $!) .) . (*))\n        \n        {-# INLINE (*) #-}\n        abs (I a) = I $! abs a\n        abs (D a) = D $! abs a\n        \n        {-# INLINE abs #-}\n        negate (I a) = I $! negate a\n        negate (D a) = D $! negate a\n        \n        {-# INLINE negate #-}\n        signum (I a) = I $! signum a\n        signum (D a) = D $! signum a\n        \n        {-# INLINE signum #-}\n        fromInteger = (I $!) . fromInteger\n        \n        {-# INLINE fromInteger #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}