{"sliceID":5865452378992217586,"uses":[{"reference":{"otherSlice":8530159555426240241},"usedName":{"valueName":{"identifier":"break"}},"qualification":"S"},{"reference":{"otherSlice":3627595078809745886},"usedName":{"valueName":{"identifier":"isSpace"}},"qualification":null},{"reference":{"otherSlice":8367622675347968738},"usedName":{"valueName":{"identifier":"map"}},"qualification":"S"},{"reference":{"otherSlice":8671408432898955317},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5030599164842377315},"usedName":{"valueName":{"identifier":"dropWhile"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["extractBearerAuth :: ByteString -> Maybe ByteString","extractBearerAuth bs\n  = let (x, y) = S.break isSpace bs in\n      if S.map toLower x == \"bearer\" then Just $ S.dropWhile isSpace y\n        else Nothing"],"instances":[],"language":{"extensions":["OverloadedStrings","RecordWildCards","TupleSections","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}