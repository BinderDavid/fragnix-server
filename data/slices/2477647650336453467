{"sliceID":2477647650336453467,"uses":[{"reference":{"otherSlice":8481347181219118462},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":9129153005186475130},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":"LazyState"},{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":6485218519662548500},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":1567328412331834120},"usedName":{"valueName":{"identifier":"liftCatch"}},"qualification":"LazyState"}],"fragment":["instance MonadError e m => MonadError e (LazyState.StateT s m)\n         where\n        throwError = lift . throwError\n        catchError = LazyState.liftCatch catchError"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}