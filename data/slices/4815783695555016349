{"sliceID":4815783695555016349,"uses":[{"reference":{"otherSlice":6434239717856201971},"usedName":{"constructorName":{"identifier":"Buf"},"constructorTypeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":3893154810935052978},"usedName":{"valueName":{"identifier":"readGen"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":6847531996737423701},"usedName":{"valueName":{"identifier":"unsafeThaw"}},"qualification":null},{"reference":{"otherSlice":6348490321383483620},"usedName":{"valueName":{"identifier":"writeGen"}},"qualification":null},{"reference":{"otherSlice":7135712205563062970},"usedName":{"valueName":{"identifier":"copyI"}},"qualification":"A"},{"reference":{"otherSlice":8106603847080743927},"usedName":{"valueName":{"identifier":"unsafeFreeze"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":577283740759386957},"usedName":{"valueName":{"identifier":"new"}},"qualification":"A"},{"reference":{"otherSlice":6434239717856201971},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":6880979574363404356},"usedName":{"typeName":{"identifier":"Array"}},"qualification":"A"}],"fragment":["append :: Buffer -> A.Array -> Int -> Int -> Buffer","append (Buf arr0 off0 len0 cap0 gen0) !arr1 !off1 !len1\n  = runST $\n      do let woff = sizeOf (0 :: Int) `shiftR` 1\n             newlen = len0 + len1\n             !gen = if gen0 == 0 then 0 else readGen arr0\n         if gen == gen0 && newlen <= cap0 then\n           do let newgen = gen + 1\n              marr <- unsafeThaw arr0\n              writeGen marr newgen\n              A.copyI marr (off0 + len0) arr1 off1 (off0 + newlen)\n              arr2 <- A.unsafeFreeze marr\n              return (Buf arr2 off0 newlen cap0 newgen)\n           else\n           do let newcap = newlen * 2\n                  newgen = 1\n              marr <- A.new (newcap + woff)\n              writeGen marr newgen\n              A.copyI marr woff arr0 off0 (woff + len0)\n              A.copyI marr (woff + len0) arr1 off1 (woff + newlen)\n              arr2 <- A.unsafeFreeze marr\n              return (Buf arr2 woff newlen newcap newgen)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","RankNTypes","RecordWildCards","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}