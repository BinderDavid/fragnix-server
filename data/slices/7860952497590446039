{"sliceID":7860952497590446039,"uses":[{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"Start"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"LLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"RLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"typeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"otherSlice":6194690843835908673},"usedName":{"typeName":{"identifier":"Size"}},"qualification":null}],"fragment":["size' :: LTree k p v -> Size","size' Start = 0\nsize' (LLoser s _ _ _ _) = s\nsize' (RLoser s _ _ _ _) = s"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}