{"sliceID":8262312170536368329,"uses":[{"reference":{"otherSlice":1868711746240202356},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":207069885339927036},"usedName":{"valueName":{"identifier":"upperBound"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafeDupablePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"max"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"otherSlice":5831756764704217508},"usedName":{"valueName":{"identifier":"mallocByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"constructorName":{"identifier":"PS"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.ForeignPtr"},"usedName":{"typeName":{"identifier":"ForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":811219613042846892},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":1868711746240202356},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["unstreamChunks :: Int -> Stream Word8 -> ByteString","unstreamChunks chunkSize (Stream next s0 len0)\n  = chunk s0 (upperBound 4 len0)\n  where chunk s1 len1\n          = unsafeDupablePerformIO $\n              do let len = max 4 (min len1 chunkSize)\n                 mallocByteString len >>= loop len 0 s1\n          where loop !n !off !s fp\n                  = case next s of\n                        Done | off == 0 -> return Empty\n                             | otherwise -> return $! Chunk (trimUp fp off) Empty\n                        Skip s' -> loop n off s' fp\n                        Yield x s' | off == chunkSize ->\n                                     do let !newLen = n - off\n                                        return $! Chunk (trimUp fp off) (chunk s newLen)\n                                   | off == n -> realloc fp n off s' x\n                                   | otherwise ->\n                                     do withForeignPtr fp $ \\ p -> pokeByteOff p off x\n                                        loop n (off + 1) s' fp\n                \n                {-# NOINLINE realloc #-}\n                realloc fp n off s x\n                  = do let n' = min (n + n) chunkSize\n                       fp' <- copy0 fp n n'\n                       withForeignPtr fp' $ \\ p -> pokeByteOff p off x\n                       loop n' (off + 1) s fp'\n                trimUp fp off = B.PS fp 0 off\n                \n                copy0 :: ForeignPtr Word8 -> Int -> Int -> IO (ForeignPtr Word8)\n                copy0 !src !srcLen !destLen\n                  = do dest <- mallocByteString destLen\n                       withForeignPtr src $\n                         \\ src' ->\n                           withForeignPtr dest $\n                             \\ dest' -> memcpy dest' src' (fromIntegral srcLen)\n                       return dest"],"instances":[],"language":{"extensions":["BangPatterns","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}