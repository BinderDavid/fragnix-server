{"sliceID":90025603689929971,"uses":[{"reference":{"otherSlice":7205873948198437081},"usedName":{"valueName":{"identifier":"object"}},"qualification":null},{"reference":{"otherSlice":5424858156587540989},"usedName":{"valueName":{"operator":".="}},"qualification":null},{"reference":{"otherSlice":2794407055151438010},"usedName":{"valueName":{"identifier":"decodeUtf8"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"requestMethod"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"rawPathInfo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":96750593574605565},"usedName":{"valueName":{"identifier":"queryItemToJSON"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"queryString"}},"qualification":null},{"reference":{"otherSlice":868047340988889012},"usedName":{"valueName":{"identifier":"readAsDouble"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Text.Printf"},"usedName":{"valueName":{"identifier":"printf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"toRational"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":8141870712971736804},"usedName":{"valueName":{"identifier":"requestBodyLengthToJSON"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"requestBodyLength"}},"qualification":null},{"reference":{"otherSlice":248739104559243974},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"S8"},{"reference":{"otherSlice":767523377190173057},"usedName":{"valueName":{"identifier":"sockToJSON"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"remoteHost"}},"qualification":null},{"reference":{"otherSlice":3939678808824171543},"usedName":{"valueName":{"identifier":"httpVersionToJSON"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"httpVersion"}},"qualification":null},{"reference":{"otherSlice":3948745731942176634},"usedName":{"valueName":{"identifier":"requestHeadersToJSON"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"requestHeaders"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"Rational"}},"qualification":null},{"reference":{"builtinModule":"GHC.Float"},"usedName":{"typeName":{"identifier":"Double"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromRational"}},"qualification":null},{"reference":{"otherSlice":3434173955242746546},"usedName":{"typeName":{"identifier":"NominalDiffTime"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S8"},{"reference":{"otherSlice":2337681378693068080},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null}],"fragment":["requestToJSON ::\n              NominalDiffTime -> Request -> [S8.ByteString] -> Value","requestToJSON duration req reqBody\n  = object\n      [\"method\" .= decodeUtf8 (requestMethod req),\n       \"path\" .= decodeUtf8 (rawPathInfo req),\n       \"queryString\" .= map queryItemToJSON (queryString req),\n       \"durationMs\" .=\n         (readAsDouble . printf \"%.2f\" . rationalToDouble $\n            toRational duration * 1000),\n       \"size\" .= requestBodyLengthToJSON (requestBodyLength req),\n       \"body\" .= decodeUtf8 (S8.concat reqBody),\n       \"remoteHost\" .= sockToJSON (remoteHost req),\n       \"httpVersion\" .= httpVersionToJSON (httpVersion req),\n       \"headers\" .= requestHeadersToJSON (requestHeaders req)]\n  where rationalToDouble :: Rational -> Double\n        rationalToDouble = fromRational"],"instances":[],"language":{"extensions":["OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}