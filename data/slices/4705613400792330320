{"sliceID":4705613400792330320,"uses":[{"reference":{"otherSlice":5076188108530419173},"usedName":{"valueName":{"identifier":"munstreamR"}},"qualification":null},{"reference":{"otherSlice":3905709738026749698},"usedName":{"valueName":{"identifier":"lift"}},"qualification":"Bundle"},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":2256778640200800668},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["unstreamR ::\n            (PrimMonad m, MVector v a) => Bundle u a -> m (v (PrimState m) a)","unstreamR s = munstreamR (Bundle.lift s)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}