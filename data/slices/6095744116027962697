{"sliceID":6095744116027962697,"uses":[{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":3855045874624644727},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":5010666227755546614},"usedName":{"valueName":{"identifier":"merge"}},"qualification":null},{"reference":{"otherSlice":7074760854266457307},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"otherSlice":3614838055085350508},"usedName":{"valueName":{"identifier":"binShrinkL"}},"qualification":null},{"reference":{"otherSlice":3952400964462370628},"usedName":{"valueName":{"identifier":"binShrinkR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":399320570619546538},"usedName":{"typeName":{"identifier":"IntPSQ"}},"qualification":null}],"fragment":["delete :: Ord p => Int -> IntPSQ p v -> IntPSQ p v","delete k = go\n  where go t\n          = case t of\n                Nil -> Nil\n                Tip k' _ _ | k == k' -> Nil\n                           | otherwise -> t\n                Bin k' p' x' m l r | nomatch k k' m -> t\n                                   | k == k' -> merge m l r\n                                   | zero k m -> binShrinkL k' p' x' m (go l) r\n                                   | otherwise -> binShrinkR k' p' x' m l (go r)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}