{"sliceID":6334744289290064058,"uses":[{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":4791260247128078865},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S"},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":932626082253544283},"usedName":{"valueName":{"identifier":"unsafeCreate"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1281346884047654848},"usedName":{"valueName":{"identifier":"checkedSum"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":"L"},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"otherSlice":7987649984260342197},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"constructorName":{"identifier":"PS"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"otherSlice":811219613042846892},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"}],"fragment":["toStrict :: ByteString -> S.ByteString","toStrict Empty = S.empty\ntoStrict (Chunk c Empty) = c\ntoStrict cs0 = S.unsafeCreate totalLen $ \\ ptr -> go cs0 ptr\n  where totalLen\n          = S.checkedSum \"Lazy.toStrict\" . L.map S.length . toChunks $ cs0\n        go Empty !_ = return ()\n        go (Chunk (S.PS fp off len) cs) !destptr\n          = withForeignPtr fp $\n              \\ p ->\n                do S.memcpy destptr (p `plusPtr` off) len\n                   go cs (destptr `plusPtr` len)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}