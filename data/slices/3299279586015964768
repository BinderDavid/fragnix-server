{"sliceID":3299279586015964768,"uses":[{"reference":{"builtinModule":"GHC.ST"},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8013849340421230462},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":"VM"},{"reference":{"otherSlice":7662606866524429462},"usedName":{"valueName":{"identifier":"maxExpt"}},"qualification":null},{"reference":{"otherSlice":4833656378719677710},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":"VM"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":7181637078111864342},"usedName":{"valueName":{"identifier":"unsafeFreeze"}},"qualification":"V"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":6628461094791741830},"usedName":{"valueName":{"identifier":"unsafeIndex"}},"qualification":"V"},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"unsafeShiftR"}},"qualification":null},{"reference":{"otherSlice":2738749419576514045},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"V"},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null}],"fragment":["expts10 :: V.Vector Integer","expts10\n  = runST $\n      do mv <- VM.unsafeNew maxExpt\n         VM.unsafeWrite mv 0 1\n         VM.unsafeWrite mv 1 10\n         let go !ix\n               | ix == maxExpt = V.unsafeFreeze mv\n               | otherwise =\n                 do VM.unsafeWrite mv ix xx\n                    VM.unsafeWrite mv (ix + 1) (10 * xx)\n                    go (ix + 2)\n               where xx = x * x\n                     x = V.unsafeIndex expts10 half\n                     !half = ix `unsafeShiftR` 1\n         go 2"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","UnboxedTuples","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}