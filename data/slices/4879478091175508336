{"sliceID":4879478091175508336,"uses":[{"reference":{"otherSlice":1868711746240202356},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":7535420074696502581},"usedName":{"valueName":{"identifier":"runText"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":207069885339927036},"usedName":{"valueName":{"identifier":"upperBound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":577283740759386957},"usedName":{"valueName":{"identifier":"new"}},"qualification":"A"},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":5528339794293630653},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3439034958307438106},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":3378149163416592467},"usedName":{"valueName":{"identifier":"copyM"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":1868711746240202356},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["unstream :: Stream Char -> Text","unstream (Stream next0 s0 len)\n  = runText $\n      \\ done ->\n        do let mlen = upperBound 4 len + 1\n           arr0 <- A.new mlen\n           let outer !arr !maxi = encode\n                 where encode !si !di\n                         = case next0 si of\n                               Done -> done arr di\n                               Skip si' -> encode si' di\n                               Yield c si' | maxi < di + 1 -> realloc si di\n                                           | otherwise ->\n                                             do n <- unsafeWrite arr di c\n                                                encode si' (di + n)\n                       \n                       {-# NOINLINE realloc #-}\n                       realloc !si !di\n                         = do let newlen = (maxi + 1) * 2\n                              arr' <- A.new newlen\n                              A.copyM arr' 0 arr 0 di\n                              outer arr' (newlen - 1) si di\n           outer arr0 (mlen - 1) s0 0"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}