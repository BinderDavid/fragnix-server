{"sliceID":5454128857729963934,"uses":[{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"typeName":{"identifier":"Foldable"}},"qualification":null},{"reference":{"otherSlice":6416309471946888257},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldMap"}},"qualification":null},{"reference":{"otherSlice":6416309471946888257},"usedName":{"constructorName":{"identifier":"ErrorT"},"constructorTypeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mempty"}},"qualification":null}],"fragment":["instance (Foldable f) => Foldable (ErrorT e f) where\n        foldMap f (ErrorT a) = foldMap (either (const mempty) f) a"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}