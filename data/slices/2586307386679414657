{"sliceID":2586307386679414657,"uses":[{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"newIORef"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5578418172209195165},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"otherSlice":4900873264252530777},"usedName":{"valueName":{"identifier":"resume"}},"qualification":"Timeout"},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":6043783101314232459},"usedName":{"valueName":{"identifier":"pause"}},"qualification":"Timeout"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"typeName":{"identifier":"IORef"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":4289378736736410887},"usedName":{"typeName":{"identifier":"Handle"}},"qualification":"Timeout"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["timeoutBody ::\n            Maybe (I.IORef Int) ->\n              Timeout.Handle -> IO ByteString -> IO () -> IO (IO ByteString)","timeoutBody remainingRef timeoutHandle rbody handle100Continue\n  = do isFirstRef <- I.newIORef True\n       let checkEmpty\n             = case remainingRef of\n                   Nothing -> return . S.null\n                   Just ref -> \\ bs ->\n                                 if S.null bs then return True else\n                                   do x <- I.readIORef ref\n                                      return $! x <= 0\n       return $\n         do isFirst <- I.readIORef isFirstRef\n            when isFirst $\n              do handle100Continue\n                 Timeout.resume timeoutHandle\n                 I.writeIORef isFirstRef False\n            bs <- rbody\n            isEmpty <- checkEmpty bs\n            when isEmpty (Timeout.pause timeoutHandle)\n            return bs"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}