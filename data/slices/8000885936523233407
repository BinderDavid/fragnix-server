{"sliceID":8000885936523233407,"uses":[{"reference":{"otherSlice":4289542537616874493},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":673775860187228082},"usedName":{"valueName":{"identifier":"zipWith3"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["zipWith3 ::\n           (Vector v a, Vector v b, Vector v c, Vector v d) =>\n           (a -> b -> c -> d) -> v a -> v b -> v c -> v d","zipWith3 f\n  = \\ as bs cs ->\n      unstream (Bundle.zipWith3 f (stream as) (stream bs) (stream cs))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}