{"sliceID":4193800335949597114,"uses":[{"reference":{"otherSlice":5928074826083234112},"usedName":{"constructorName":{"identifier":"Node2"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"otherSlice":4255773995153485309},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":5928074826083234112},"usedName":{"constructorName":{"identifier":"Node3"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":4255773995153485309},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":5928074826083234112},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null}],"fragment":["delRebuildLeftSide ::\n                     Sized a =>\n                     Int ->\n                       a ->\n                         Node (Node a) ->\n                           FingerTree (Node (Node a)) -> Digit (Node a) -> FingerTree (Node a)","delRebuildLeftSide s p (Node2 _ a b) m sf\n  = let !sp = size p in\n      case a of\n          Node2 sxy x y -> Deep s (Two (Node3 (sp + sxy) p x y) b) m sf\n          Node3 sxyz x y z -> Deep s\n                                (Three (Node2 (sp + sx) p x) (Node2 (sxyz - sx) y z) b)\n                                m\n                                sf\n            where !sx = size x\ndelRebuildLeftSide s p (Node3 _ a b c) m sf\n  = let !sp = size p in\n      case a of\n          Node2 sxy x y -> Deep s (Three (Node3 (sp + sxy) p x y) b c) m sf\n          Node3 sxyz x y z -> Deep s\n                                (Four (Node2 (sp + sx) p x) (Node2 (sxyz - sx) y z) b c)\n                                m\n                                sf\n            where !sx = size x"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}