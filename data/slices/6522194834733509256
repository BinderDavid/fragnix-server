{"sliceID":6522194834733509256,"uses":[{"reference":{"otherSlice":6150436666955507733},"usedName":{"typeName":{"identifier":"Prim"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"G"},{"reference":{"otherSlice":8771066935057325333},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicUnsafeFreeze"}},"qualification":"G"},{"reference":{"otherSlice":2666109911461762260},"usedName":{"constructorName":{"identifier":"MVector"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":8771066935057325333},"usedName":{"constructorName":{"identifier":"Vector"},"constructorTypeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":885461612090025196},"usedName":{"valueName":{"identifier":"unsafeFreezeByteArray"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicUnsafeThaw"}},"qualification":"G"},{"reference":{"otherSlice":1719249631113445075},"usedName":{"valueName":{"identifier":"unsafeThawByteArray"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":7165231488447120885},"usedName":{"valueName":{"identifier":"indexByteArray"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"otherSlice":5121304073843016402},"usedName":{"valueName":{"identifier":"copyByteArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":3560978585239020784},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"elemseq"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null}],"fragment":["instance Prim a => G.Vector Vector a where\n        {-# INLINE basicUnsafeFreeze #-}\n        basicUnsafeFreeze (MVector i n marr)\n          = Vector i n `liftM` unsafeFreezeByteArray marr\n        \n        {-# INLINE basicUnsafeThaw #-}\n        basicUnsafeThaw (Vector i n arr)\n          = MVector i n `liftM` unsafeThawByteArray arr\n        \n        {-# INLINE basicLength #-}\n        basicLength (Vector _ n _) = n\n        \n        {-# INLINE basicUnsafeSlice #-}\n        basicUnsafeSlice j n (Vector i _ arr) = Vector (i + j) n arr\n        \n        {-# INLINE basicUnsafeIndexM #-}\n        basicUnsafeIndexM (Vector i _ arr) j\n          = return $! indexByteArray arr (i + j)\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MVector i n dst) (Vector j _ src)\n          = copyByteArray dst (i * sz) src (j * sz) (n * sz)\n          where sz = sizeOf (undefined :: a)\n        \n        {-# INLINE elemseq #-}\n        elemseq _ = seq"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","MultiParamTypeClasses","TypeFamilies","ScopedTypeVariables","Rank2Types","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}