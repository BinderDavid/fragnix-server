{"sliceID":6179123205237542719,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"toList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":791246562637580449},"usedName":{"valueName":{"identifier":"unfoldForestQ"}},"qualification":null},{"reference":{"otherSlice":5744811960989021356},"usedName":{"valueName":{"identifier":"fromList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8609837841181870823},"usedName":{"typeName":{"identifier":"Forest"}},"qualification":null}],"fragment":["unfoldForestM_BF ::\n                   Monad m => (b -> m (a, [b])) -> [b] -> m (Forest a)","unfoldForestM_BF f = liftM toList . unfoldForestQ f . fromList"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","DeriveGeneric","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}