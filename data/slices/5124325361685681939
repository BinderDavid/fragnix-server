{"sliceID":5124325361685681939,"uses":[{"reference":{"otherSlice":1289144971551604409},"usedName":{"constructorName":{"identifier":"Void"},"constructorTypeName":{"identifier":"OrdPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":1289144971551604409},"usedName":{"constructorName":{"identifier":"Winner"},"constructorTypeName":{"identifier":"OrdPSQ"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"typeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"Start"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"LLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"constructorName":{"identifier":"RLoser"},"constructorTypeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":1289144971551604409},"usedName":{"typeName":{"identifier":"OrdPSQ"}},"qualification":null}],"fragment":["hasCorrectSizeAnnotations :: OrdPSQ k p v -> Bool","hasCorrectSizeAnnotations Void = True\nhasCorrectSizeAnnotations (Winner _ t0 _) = go t0\n  where go :: LTree k p v -> Bool\n        go t@Start = calculateSize t == 0\n        go t@(LLoser s _ l _ r) = calculateSize t == s && go l && go r\n        go t@(RLoser s _ l _ r) = calculateSize t == s && go l && go r\n        \n        calculateSize :: LTree k p v -> Int\n        calculateSize Start = 0\n        calculateSize (LLoser _ _ l _ r)\n          = 1 + calculateSize l + calculateSize r\n        calculateSize (RLoser _ _ l _ r)\n          = 1 + calculateSize l + calculateSize r"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}