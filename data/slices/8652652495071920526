{"sliceID":8652652495071920526,"uses":[{"reference":{"otherSlice":3256071029754299372},"usedName":{"valueName":{"identifier":"toToken"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":947020012818109989},"usedName":{"valueName":{"identifier":"headerStuff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2728446607831036551},"usedName":{"typeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"otherSlice":4242350305663552248},"usedName":{"typeName":{"identifier":"ReadBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":6929508421568669800},"usedName":{"typeName":{"identifier":"TokenHeader"}},"qualification":null}],"fragment":["newName :: DynamicTable -> ReadBuffer -> IO TokenHeader","newName dyntbl rbuf\n  = do !t <- toToken <$> headerStuff dyntbl rbuf\n       !val <- headerStuff dyntbl rbuf\n       let !tv = (t, val)\n       return tv"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}