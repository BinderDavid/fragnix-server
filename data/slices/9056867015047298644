{"sliceID":9056867015047298644,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":6236763947455069656},"usedName":{"valueName":{"identifier":"fromStream"}},"qualification":null},{"reference":{"otherSlice":976628837217299383},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":6110420032456596170},"usedName":{"constructorName":{"identifier":"Max"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"operator":"/"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":521552564646137297},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Bounds"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"truncate"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"RealFrac"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["enumFromTo_double ::\n                    (Monad m, Ord a, RealFrac a) => a -> a -> Bundle m v a","enumFromTo_double n m\n  = n `seq` m `seq` fromStream (Stream step n) (Max (len n lim))\n  where lim = m + 1 / 2\n        \n        {-# INLINE [0] len #-}\n        len x y\n          | x > y = 0\n          | otherwise =\n            ((Ck.check \"Data/Vector/Fusion/Bundle/Monadic.hs\" 961) Ck.Bounds)\n              \"enumFromTo\"\n              \"vector too large\"\n              (l > 0)\n              $ fromIntegral l\n          where l :: Integer\n                l = truncate (y - x) + 2\n        \n        {-# INLINE [0] step #-}\n        step x\n          | x <= lim = return $ Yield x (x + 1)\n          | otherwise = return $ Done"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}