{"sliceID":3740395646963403446,"uses":[{"reference":{"otherSlice":1105906692949335211},"usedName":{"constructorName":{"identifier":"Seq"},"constructorTypeName":{"identifier":"Seq"}},"qualification":null},{"reference":{"otherSlice":854576328335137368},"usedName":{"valueName":{"identifier":"splitTreeE"}},"qualification":null},{"reference":{"otherSlice":5151236523523606238},"usedName":{"constructorName":{"operator":":*:"},"constructorTypeName":{"identifier":"StrictPair"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1105906692949335211},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["uncheckedSplitAt :: Int -> Seq a -> (Seq a, Seq a)","uncheckedSplitAt i (Seq xs)\n  = case splitTreeE i xs of\n        l :*: r -> (Seq l, Seq r)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}