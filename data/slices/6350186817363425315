{"sliceID":6350186817363425315,"uses":[{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"EmptyT"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":3786938555280466723},"usedName":{"constructorName":{"identifier":"InsOne"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":3786938555280466723},"usedName":{"constructorName":{"identifier":"InsTwo"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":4035425512200636628},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":3668620541072891507},"usedName":{"valueName":{"identifier":"insLeftDigit"}},"qualification":null},{"reference":{"otherSlice":3395262214377723653},"usedName":{"constructorName":{"identifier":"InsLeftDig"},"constructorTypeName":{"identifier":"InsDigNode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3395262214377723653},"usedName":{"constructorName":{"identifier":"InsDigNode"},"constructorTypeName":{"identifier":"InsDigNode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":5481435342856473736},"usedName":{"valueName":{"identifier":"consTree"}},"qualification":null},{"reference":{"otherSlice":563856421806425312},"usedName":{"valueName":{"identifier":"insNode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":417747953040241424},"usedName":{"valueName":{"identifier":"insRightDigit"}},"qualification":null},{"reference":{"otherSlice":4010044494782501624},"usedName":{"constructorName":{"identifier":"InsRightDig"},"constructorTypeName":{"identifier":"InsNodeDig"}},"qualification":null},{"reference":{"otherSlice":4010044494782501624},"usedName":{"constructorName":{"identifier":"InsNodeDig"},"constructorTypeName":{"identifier":"InsNodeDig"}},"qualification":null},{"reference":{"otherSlice":4472144548531888458},"usedName":{"valueName":{"identifier":"snocTree"}},"qualification":null},{"reference":{"otherSlice":4255773995153485309},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":4255773995153485309},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":3786938555280466723},"usedName":{"typeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null}],"fragment":["insTree ::\n          Sized a =>\n          (Int -> a -> Ins a) -> Int -> FingerTree a -> FingerTree a","insTree _ !_ EmptyT = EmptyT\ninsTree f i (Single x)\n  = case f i x of\n        InsOne x' -> Single x'\n        InsTwo m n -> deep (One m) EmptyT (One n)\ninsTree f i (Deep s pr m sf)\n  | i < spr =\n    case insLeftDigit f i pr of\n        InsLeftDig pr' -> Deep (s + 1) pr' m sf\n        InsDigNode pr' n -> m `seq` Deep (s + 1) pr' (n `consTree` m) sf\n  | i < spm =\n    let !m' = insTree (insNode f) (i - spr) m in Deep (s + 1) pr m' sf\n  | otherwise =\n    case insRightDigit f (i - spm) sf of\n        InsRightDig sf' -> Deep (s + 1) pr m sf'\n        InsNodeDig n sf' -> m `seq` Deep (s + 1) pr (m `snocTree` n) sf'\n  where spr = size pr\n        spm = spr + size m"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}