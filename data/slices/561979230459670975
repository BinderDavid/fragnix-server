{"sliceID":561979230459670975,"uses":[{"reference":{"otherSlice":4182049159116233466},"usedName":{"typeName":{"identifier":"Format"}},"qualification":"Stream"},{"reference":{"otherSlice":2270124290948061460},"usedName":{"typeName":{"identifier":"CompressParams"}},"qualification":null},{"reference":{"otherSlice":7511316425710433924},"usedName":{"typeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.ST.Lazy"},"usedName":{"typeName":{"identifier":"ST"}},"qualification":null},{"reference":{"otherSlice":7511316425710433924},"usedName":{"constructorName":{"identifier":"CompressInputRequired"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"otherSlice":7511316425710433924},"usedName":{"valueName":{"identifier":"compressSupplyInput"}},"qualification":null},{"reference":{"otherSlice":1582063526392969943},"usedName":{"valueName":{"identifier":"mkStateST"}},"qualification":null},{"reference":{"otherSlice":8437999126740322595},"usedName":{"valueName":{"identifier":"compressStream"}},"qualification":null},{"reference":{"otherSlice":6747612953802376366},"usedName":{"valueName":{"identifier":"runStreamST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":125078826469118394},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":8686746673302569493},"usedName":{"typeName":{"identifier":"State"}},"qualification":"Stream"},{"reference":{"otherSlice":7511316425710433924},"usedName":{"constructorName":{"identifier":"CompressOutputAvailable"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7511316425710433924},"usedName":{"constructorName":{"identifier":"CompressStreamEnd"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null}],"fragment":["compressStreamST ::\n                 Stream.Format -> CompressParams -> CompressStream (ST s)","compressStreamST format params\n  = CompressInputRequired{compressSupplyInput =\n                            \\ chunk ->\n                              do zstate <- mkStateST\n                                 let next = compressStream format params\n                                 (strm', zstate') <- runStreamST (next chunk) zstate\n                                 return (go strm' zstate')}\n  where go ::\n           CompressStream Stream -> Stream.State s -> CompressStream (ST s)\n        go (CompressInputRequired next) zstate\n          = CompressInputRequired{compressSupplyInput =\n                                    \\ chunk ->\n                                      do (strm', zstate') <- runStreamST (next chunk) zstate\n                                         return (go strm' zstate')}\n        go (CompressOutputAvailable chunk next) zstate\n          = CompressOutputAvailable chunk $\n              do (strm', zstate') <- runStreamST next zstate\n                 return (go strm' zstate')\n        go CompressStreamEnd _ = CompressStreamEnd"],"instances":[],"language":{"extensions":["RankNTypes","DeriveDataTypeable","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}