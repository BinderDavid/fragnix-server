{"sliceID":224558358116176119,"uses":[{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FrameHeaders"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":7980604682421784157},"usedName":{"constructorName":{"identifier":"FrameHeader"},"constructorTypeName":{"identifier":"FrameHeader"}},"qualification":null},{"reference":{"otherSlice":7980604682421784157},"usedName":{"valueName":{"identifier":"flags"}},"qualification":null},{"reference":{"otherSlice":3281083188637845408},"usedName":{"constructorName":{"identifier":"Open"},"constructorTypeName":{"identifier":"StreamState"}},"qualification":null},{"reference":{"otherSlice":6386400259197273904},"usedName":{"constructorName":{"identifier":"JustOpened"},"constructorTypeName":{"identifier":"OpenState"}},"qualification":null},{"reference":{"otherSlice":686719806749404538},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":686719806749404538},"usedName":{"valueName":{"identifier":"streamNumber"}},"qualification":null},{"reference":{"otherSlice":8563723542902844888},"usedName":{"constructorName":{"identifier":"HeadersFrame"},"constructorTypeName":{"identifier":"FramePayload"}},"qualification":null},{"reference":{"otherSlice":6140162584443591277},"usedName":{"valueName":{"identifier":"guardIt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4653902114501957285},"usedName":{"valueName":{"identifier":"decodeHeadersFrame"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5670793333350899775},"usedName":{"valueName":{"identifier":"defaultPriority"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3896349541620594627},"usedName":{"valueName":{"identifier":"checkPriority"}},"qualification":null},{"reference":{"otherSlice":9115618956355902897},"usedName":{"valueName":{"identifier":"testEndStream"}},"qualification":null},{"reference":{"otherSlice":2175452893941233123},"usedName":{"valueName":{"identifier":"testEndHeader"}},"qualification":null},{"reference":{"otherSlice":6684327216585799554},"usedName":{"valueName":{"identifier":"hpackDecodeHeader"}},"qualification":null},{"reference":{"otherSlice":6386400259197273904},"usedName":{"constructorName":{"identifier":"NoBody"},"constructorTypeName":{"identifier":"OpenState"}},"qualification":null},{"reference":{"otherSlice":6386400259197273904},"usedName":{"constructorName":{"identifier":"HasBody"},"constructorTypeName":{"identifier":"OpenState"}},"qualification":null},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"BS"},{"reference":{"otherSlice":6386400259197273904},"usedName":{"constructorName":{"identifier":"Continued"},"constructorTypeName":{"identifier":"OpenState"}},"qualification":null},{"reference":{"otherSlice":6386400259197273904},"usedName":{"constructorName":{"identifier":"Body"},"constructorTypeName":{"identifier":"OpenState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"atomically"}},"qualification":null},{"reference":{"otherSlice":5519274105550261016},"usedName":{"valueName":{"identifier":"writeTQueue"}},"qualification":null},{"reference":{"otherSlice":3281083188637845408},"usedName":{"constructorName":{"identifier":"HalfClosed"},"constructorTypeName":{"identifier":"StreamState"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":"E"},{"reference":{"otherSlice":209820424723097279},"usedName":{"constructorName":{"identifier":"ConnectionError"},"constructorTypeName":{"identifier":"HTTP2Error"}},"qualification":null},{"reference":{"otherSlice":4373455107983741140},"usedName":{"constructorName":{"identifier":"ProtocolError"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FrameData"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":7980604682421784157},"usedName":{"valueName":{"identifier":"payloadLength"}},"qualification":null},{"reference":{"otherSlice":7980604682421784157},"usedName":{"valueName":{"identifier":"streamId"}},"qualification":null},{"reference":{"otherSlice":3244558403807755735},"usedName":{"constructorName":{"identifier":"Context"},"constructorTypeName":{"identifier":"Context"}},"qualification":null},{"reference":{"otherSlice":3244558403807755735},"usedName":{"valueName":{"identifier":"controlQ"}},"qualification":null},{"reference":{"otherSlice":8563723542902844888},"usedName":{"constructorName":{"identifier":"DataFrame"},"constructorTypeName":{"identifier":"FramePayload"}},"qualification":null},{"reference":{"otherSlice":2462712469545540707},"usedName":{"valueName":{"identifier":"decodeDataFrame"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":5649985639987245285},"usedName":{"valueName":{"identifier":"windowUpdateFrame"}},"qualification":null},{"reference":{"otherSlice":4345469173277560744},"usedName":{"valueName":{"identifier":"append"}},"qualification":"BS"},{"reference":{"otherSlice":7450610694038807841},"usedName":{"valueName":{"identifier":"enqueueControl"}},"qualification":null},{"reference":{"otherSlice":7606099774008308977},"usedName":{"constructorName":{"identifier":"CFrame"},"constructorTypeName":{"identifier":"Control"}},"qualification":null},{"reference":{"otherSlice":209820424723097279},"usedName":{"constructorName":{"identifier":"StreamError"},"constructorTypeName":{"identifier":"HTTP2Error"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FrameContinuation"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":4373455107983741140},"usedName":{"constructorName":{"identifier":"EnhanceYourCalm"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"otherSlice":248739104559243974},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"BS"},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FrameWindowUpdate"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":686719806749404538},"usedName":{"valueName":{"identifier":"streamWindow"}},"qualification":null},{"reference":{"otherSlice":8563723542902844888},"usedName":{"constructorName":{"identifier":"WindowUpdateFrame"},"constructorTypeName":{"identifier":"FramePayload"}},"qualification":null},{"reference":{"otherSlice":5319772796815658290},"usedName":{"valueName":{"identifier":"decodeWindowUpdateFrame"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"readTVar"}},"qualification":null},{"reference":{"otherSlice":8778214293149589423},"usedName":{"valueName":{"identifier":"isWindowOverflow"}},"qualification":null},{"reference":{"otherSlice":4373455107983741140},"usedName":{"constructorName":{"identifier":"FlowControlError"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"writeTVar"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FrameRSTStream"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":8563723542902844888},"usedName":{"constructorName":{"identifier":"RSTStreamFrame"},"constructorTypeName":{"identifier":"FramePayload"}},"qualification":null},{"reference":{"otherSlice":7945724810662256159},"usedName":{"valueName":{"identifier":"decoderstStreamFrame"}},"qualification":null},{"reference":{"otherSlice":2708228187031681692},"usedName":{"constructorName":{"identifier":"Reset"},"constructorTypeName":{"identifier":"ClosedCode"}},"qualification":null},{"reference":{"otherSlice":7196802242024295411},"usedName":{"valueName":{"identifier":"closed"}},"qualification":null},{"reference":{"otherSlice":3281083188637845408},"usedName":{"constructorName":{"identifier":"Closed"},"constructorTypeName":{"identifier":"StreamState"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"constructorName":{"identifier":"FramePriority"},"constructorTypeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":3244558403807755735},"usedName":{"valueName":{"identifier":"outputQ"}},"qualification":null},{"reference":{"otherSlice":3244558403807755735},"usedName":{"valueName":{"identifier":"priorityTreeSize"}},"qualification":null},{"reference":{"otherSlice":686719806749404538},"usedName":{"valueName":{"identifier":"streamPrecedence"}},"qualification":null},{"reference":{"otherSlice":8563723542902844888},"usedName":{"constructorName":{"identifier":"PriorityFrame"},"constructorTypeName":{"identifier":"FramePayload"}},"qualification":null},{"reference":{"otherSlice":2035370252098002591},"usedName":{"valueName":{"identifier":"decodePriorityFrame"}},"qualification":null},{"reference":{"otherSlice":3815283975219979718},"usedName":{"valueName":{"identifier":"toPrecedence"}},"qualification":null},{"reference":{"otherSlice":991826200323355792},"usedName":{"valueName":{"identifier":"isIdle"}},"qualification":null},{"reference":{"builtinModule":"Data.IORef"},"usedName":{"valueName":{"identifier":"atomicModifyIORef'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":1026569281997323117},"usedName":{"valueName":{"identifier":"prepare"}},"qualification":null},{"reference":{"otherSlice":4750783545462577014},"usedName":{"valueName":{"identifier":"delete"}},"qualification":null},{"reference":{"otherSlice":4406646487968172397},"usedName":{"valueName":{"identifier":"enqueueOutput"}},"qualification":null},{"reference":{"otherSlice":2708228187031681692},"usedName":{"constructorName":{"identifier":"ResetByMe"},"constructorTypeName":{"identifier":"ClosedCode"}},"qualification":null},{"reference":{"otherSlice":4373455107983741140},"usedName":{"constructorName":{"identifier":"StreamClosed"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"otherSlice":8567078786032081139},"usedName":{"typeName":{"identifier":"FrameTypeId"}},"qualification":null},{"reference":{"otherSlice":7980604682421784157},"usedName":{"typeName":{"identifier":"FrameHeader"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":3244558403807755735},"usedName":{"typeName":{"identifier":"Context"}},"qualification":null},{"reference":{"otherSlice":3281083188637845408},"usedName":{"typeName":{"identifier":"StreamState"}},"qualification":null},{"reference":{"otherSlice":686719806749404538},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["stream ::\n       FrameTypeId ->\n         FrameHeader ->\n           ByteString -> Context -> StreamState -> Stream -> IO StreamState","stream FrameHeaders header@FrameHeader{flags} bs ctx\n  (Open JustOpened) Stream{streamNumber}\n  = do HeadersFrame mp frag <- guardIt $ decodeHeadersFrame header bs\n       pri <- case mp of\n                  Nothing -> return defaultPriority\n                  Just p -> do checkPriority p streamNumber\n                               return p\n       let !endOfStream = testEndStream flags\n           !endOfHeader = testEndHeader flags\n       if endOfHeader then\n         do tbl <- hpackDecodeHeader frag ctx\n            return $\n              if endOfStream then Open (NoBody tbl pri) else\n                Open (HasBody tbl pri)\n         else\n         do let !siz = BS.length frag\n            return $ Open $ Continued [frag] siz 1 endOfStream pri\nstream FrameHeaders header@FrameHeader{flags} bs _\n  (Open (Body q _ _)) _\n  = do HeadersFrame _ _ <- guardIt $ decodeHeadersFrame header bs\n       let !endOfStream = testEndStream flags\n       if endOfStream then\n         do atomically $ writeTQueue q \"\"\n            return HalfClosed\n         else\n         E.throwIO $\n           ConnectionError ProtocolError\n             \"continuation in trailer is not supported\"\nstream FrameData header@FrameHeader{flags, payloadLength, streamId}\n  bs Context{controlQ} s@(Open (Body q mcl bodyLength))\n  Stream{streamNumber}\n  = do DataFrame body <- guardIt $ decodeDataFrame header bs\n       let !endOfStream = testEndStream flags\n       len0 <- readIORef bodyLength\n       let !len = len0 + payloadLength\n       writeIORef bodyLength len\n       when (payloadLength /= 0) $\n         do let !frame1 = windowUpdateFrame 0 payloadLength\n                !frame2 = windowUpdateFrame streamNumber payloadLength\n                !frame = frame1 `BS.append` frame2\n            enqueueControl controlQ $ CFrame frame\n       atomically $ writeTQueue q body\n       if endOfStream then\n         do case mcl of\n                Nothing -> return ()\n                Just cl -> when (cl /= len) $\n                             E.throwIO $ StreamError ProtocolError streamId\n            atomically $ writeTQueue q \"\"\n            return HalfClosed\n         else return s\nstream FrameContinuation FrameHeader{flags} frag ctx\n  (Open (Continued rfrags siz n endOfStream pri)) _\n  = do let !endOfHeader = testEndHeader flags\n           !rfrags' = frag : rfrags\n           !siz' = siz + BS.length frag\n           !n' = n + 1\n       when (siz' > 51200) $\n         E.throwIO $ ConnectionError EnhanceYourCalm \"Header is too big\"\n       when (n' > 10) $\n         E.throwIO $\n           ConnectionError EnhanceYourCalm \"Header is too fragmented\"\n       if endOfHeader then\n         do let !hdrblk = BS.concat $ reverse rfrags'\n            tbl <- hpackDecodeHeader hdrblk ctx\n            return $\n              if endOfStream then Open (NoBody tbl pri) else\n                Open (HasBody tbl pri)\n         else return $ Open $ Continued rfrags' siz' n' endOfStream pri\nstream FrameWindowUpdate header@FrameHeader{streamId} bs _ s\n  Stream{streamWindow}\n  = do WindowUpdateFrame n <- guardIt $\n                                decodeWindowUpdateFrame header bs\n       !w <- (n +) <$> atomically (readTVar streamWindow)\n       when (isWindowOverflow w) $\n         E.throwIO $ StreamError FlowControlError streamId\n       atomically $ writeTVar streamWindow w\n       return s\nstream FrameRSTStream header bs ctx _ strm\n  = do RSTStreamFrame e <- guardIt $ decoderstStreamFrame header bs\n       let !cc = Reset e\n       closed ctx strm cc\n       return $ Closed cc\nstream FramePriority header bs Context{outputQ, priorityTreeSize} s\n  Stream{streamNumber, streamPrecedence}\n  = do PriorityFrame newpri <- guardIt $\n                                 decodePriorityFrame header bs\n       checkPriority newpri streamNumber\n       oldpre <- readIORef streamPrecedence\n       let !newpre = toPrecedence newpri\n       writeIORef streamPrecedence newpre\n       if isIdle s then\n         do n <- atomicModifyIORef' priorityTreeSize (\\ x -> (x + 1, x + 1))\n            when (n >= 20) $\n              E.throwIO $\n                ConnectionError EnhanceYourCalm \"too many idle priority frames\"\n            prepare outputQ streamNumber newpri\n         else\n         do mx <- delete outputQ streamNumber oldpre\n            case mx of\n                Nothing -> return ()\n                Just out -> enqueueOutput outputQ out\n       return s\nstream FrameContinuation _ _ _ _ _\n  = E.throwIO $\n      ConnectionError ProtocolError \"continue frame cannot come here\"\nstream _ _ _ _ (Open Continued{}) _\n  = E.throwIO $\n      ConnectionError ProtocolError\n        \"an illegal frame follows header/continuation frames\"\nstream _ _ _ _ st@(Closed (ResetByMe _)) _ = return st\nstream FrameData FrameHeader{streamId} _ _ _ _\n  = E.throwIO $ StreamError StreamClosed streamId\nstream _ FrameHeader{streamId} _ _ _ _\n  = E.throwIO $ StreamError ProtocolError streamId"],"instances":[],"language":{"extensions":["OverloadedStrings","NamedFieldPuns","BangPatterns","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}