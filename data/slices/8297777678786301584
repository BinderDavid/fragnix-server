{"sliceID":8297777678786301584,"uses":[{"reference":{"otherSlice":4199517113549565308},"usedName":{"valueName":{"identifier":"discard"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3472896285437106778},"usedName":{"valueName":{"identifier":"fold1M"}},"qualification":"Bundle"},{"reference":{"otherSlice":2322077952989357605},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["fold1M_ :: (Monad m, Vector v a) => (a -> a -> m a) -> v a -> m ()","fold1M_ m = discard . Bundle.fold1M m . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}