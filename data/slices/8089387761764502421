{"sliceID":8089387761764502421,"uses":[{"reference":{"otherSlice":7804469898566101617},"usedName":{"typeName":{"identifier":"Error"}},"qualification":null},{"reference":{"otherSlice":6847450126335022993},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"otherSlice":6416309471946888257},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"otherSlice":6847450126335022993},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":6485218519662548500},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance (Error e, MonadThrow m) => MonadThrow (ErrorT e m) where\n        throwM = lift . throwM"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}