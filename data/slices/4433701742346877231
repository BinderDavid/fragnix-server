{"sliceID":4433701742346877231,"uses":[{"reference":{"otherSlice":7077023313041791550},"usedName":{"typeName":{"identifier":"MonadState"}},"qualification":null},{"reference":{"otherSlice":2112684581019604880},"usedName":{"typeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"otherSlice":7077023313041791550},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":6485218519662548500},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"otherSlice":7077023313041791550},"usedName":{"valueName":{"identifier":"put"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":7077023313041791550},"usedName":{"valueName":{"identifier":"state"}},"qualification":null}],"fragment":["instance MonadState s m => MonadState s (CatchT m) where\n        get = lift get\n        put = lift . put\n        state = lift . state"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}