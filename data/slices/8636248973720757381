{"sliceID":8636248973720757381,"uses":[{"reference":{"otherSlice":3184162202925999579},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6556509482847664593},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":null},{"reference":{"otherSlice":4887050685156491640},"usedName":{"valueName":{"identifier":"span_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["lines :: Text -> [Text]","lines ps\n  | null ps = []\n  | otherwise = h : if null t then [] else lines (unsafeTail t)\n  where (# h, t #) = span_ (/= '\\n') ps"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}