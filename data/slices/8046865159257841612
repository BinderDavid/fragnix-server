{"sliceID":8046865159257841612,"uses":[{"reference":{"otherSlice":7860952497590446039},"usedName":{"valueName":{"identifier":"size'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":2626348265651904398},"usedName":{"valueName":{"identifier":"rloser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":1236153491232357267},"usedName":{"valueName":{"identifier":"omega"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":9167253569638967607},"usedName":{"valueName":{"identifier":"rbalanceLeft"}},"qualification":null},{"reference":{"otherSlice":5001120335514706597},"usedName":{"valueName":{"identifier":"rbalanceRight"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":3085832176914410862},"usedName":{"typeName":{"identifier":"LTree"}},"qualification":null},{"reference":{"otherSlice":2626348265651904398},"usedName":{"valueName":{"identifier":"lloser"}},"qualification":null},{"reference":{"otherSlice":8152970668655703067},"usedName":{"valueName":{"identifier":"lbalanceLeft"}},"qualification":null},{"reference":{"otherSlice":2956940859808936365},"usedName":{"valueName":{"identifier":"lbalanceRight"}},"qualification":null}],"fragment":["lbalance, rbalance ::\n            (Ord k, Ord p) =>\n            k -> p -> v -> LTree k p v -> k -> LTree k p v -> LTree k p v","lbalance k p v l m r\n  | size' l + size' r < 2 = lloser k p v l m r\n  | size' r > omega * size' l = lbalanceLeft k p v l m r\n  | size' l > omega * size' r = lbalanceRight k p v l m r\n  | otherwise = lloser k p v l m r","rbalance k p v l m r\n  | size' l + size' r < 2 = rloser k p v l m r\n  | size' r > omega * size' l = rbalanceLeft k p v l m r\n  | size' l > omega * size' r = rbalanceRight k p v l m r\n  | otherwise = rloser k p v l m r"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}