{"sliceID":2956810404583107954,"uses":[{"reference":{"otherSlice":3957479230352181842},"usedName":{"valueName":{"identifier":"breakByte"}},"qualification":"B"},{"reference":{"otherSlice":3579314455847880429},"usedName":{"valueName":{"identifier":"decodePathSegments"}},"qualification":null},{"reference":{"otherSlice":3133621383246103626},"usedName":{"valueName":{"identifier":"parseQuery"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":5979280622285648106},"usedName":{"typeName":{"identifier":"Query"}},"qualification":null}],"fragment":["decodePath :: B.ByteString -> ([Text], Query)","decodePath b\n  = let (x, y) = B.breakByte 63 b in\n      (decodePathSegments x, parseQuery y)"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}