{"sliceID":4096724408125725094,"uses":[{"reference":{"otherSlice":5762632242212758418},"usedName":{"typeName":{"identifier":"ShortByteString"}},"qualification":null},{"reference":{"otherSlice":3197216120572374079},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":6311865867341187927},"usedName":{"valueName":{"identifier":"create"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7590734003678593726},"usedName":{"valueName":{"identifier":"copyByteArray"}},"qualification":null},{"reference":{"otherSlice":3118392215913675066},"usedName":{"valueName":{"identifier":"asBA"}},"qualification":null}],"fragment":["append :: ShortByteString -> ShortByteString -> ShortByteString","append src1 src2\n  = let !len1 = length src1\n        !len2 = length src2\n      in\n      create (len1 + len2) $\n        \\ dst ->\n          do copyByteArray (asBA src1) 0 dst 0 len1\n             copyByteArray (asBA src2) 0 dst len1 len2"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","RankNTypes","ForeignFunctionInterface","MagicHash","UnboxedTuples","UnliftedFFITypes","Unsafe","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}