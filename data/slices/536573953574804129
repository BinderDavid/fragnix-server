{"sliceID":536573953574804129,"uses":[{"reference":{"otherSlice":8662081469631001866},"usedName":{"constructorName":{"identifier":"ReaperSettings"},"constructorTypeName":{"identifier":"ReaperSettings"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperAction"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperCons"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperDelay"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperEmpty"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"valueName":{"identifier":"reaperNull"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"newIORef"}},"qualification":null},{"reference":{"otherSlice":1450244548681071916},"usedName":{"constructorName":{"identifier":"NoReaper"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"constructorName":{"identifier":"Reaper"},"constructorTypeName":{"identifier":"Reaper"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperAdd"}},"qualification":null},{"reference":{"otherSlice":3733917974255537721},"usedName":{"valueName":{"identifier":"add"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperRead"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperStop"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperKill"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"otherSlice":1450244548681071916},"usedName":{"constructorName":{"identifier":"Workload"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"Data.IORef"},"usedName":{"valueName":{"identifier":"atomicModifyIORef'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"killThread"}},"qualification":null},{"reference":{"otherSlice":8662081469631001866},"usedName":{"typeName":{"identifier":"ReaperSettings"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"typeName":{"identifier":"Reaper"}},"qualification":null}],"fragment":["mkReaper ::\n         ReaperSettings workload item -> IO (Reaper workload item)","mkReaper settings@ReaperSettings{..}\n  = do stateRef <- newIORef NoReaper\n       tidRef <- newIORef Nothing\n       return\n         Reaper{reaperAdd = add settings stateRef tidRef,\n                reaperRead = readRef stateRef, reaperStop = stop stateRef,\n                reaperKill = kill tidRef}\n  where readRef stateRef\n          = do mx <- readIORef stateRef\n               case mx of\n                   NoReaper -> return reaperEmpty\n                   Workload wl -> return wl\n        stop stateRef\n          = atomicModifyIORef' stateRef $\n              \\ mx ->\n                case mx of\n                    NoReaper -> (NoReaper, reaperEmpty)\n                    Workload x -> (Workload reaperEmpty, x)\n        kill tidRef\n          = do mtid <- readIORef tidRef\n               case mtid of\n                   Nothing -> return ()\n                   Just tid -> killThread tid"],"instances":[],"language":{"extensions":["RecordWildCards","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}