{"sliceID":6236763947455069656,"uses":[{"reference":{"otherSlice":976628837217299383},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"constructorName":{"identifier":"Bundle"},"constructorTypeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":7913830746686835807},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Chunk"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeWrite"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":976628837217299383},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":6110420032456596170},"usedName":{"typeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["fromStream :: Monad m => Stream m a -> Size -> Bundle m v a","fromStream (Stream step t) sz\n  = Bundle (Stream step t) (Stream step' t) Nothing sz\n  where step' s\n          = do r <- step s\n               return $ fmap (\\ x -> Chunk 1 (\\ v -> M.basicUnsafeWrite v 0 x)) r"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}