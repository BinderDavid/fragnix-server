{"sliceID":4255831879758217756,"uses":[{"reference":{"otherSlice":4508831406543011146},"usedName":{"valueName":{"identifier":"unfoldrM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4302818720694206147},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["unfoldr :: Monad m => (s -> Maybe (a, s)) -> s -> Bundle m u a","unfoldr f = unfoldrM (return . f)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}