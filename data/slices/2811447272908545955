{"sliceID":2811447272908545955,"uses":[{"reference":{"builtinModule":"GHC.ST"},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"otherSlice":729958558491907864},"usedName":{"valueName":{"identifier":"new"}},"qualification":"M"},{"reference":{"otherSlice":7554029144730972634},"usedName":{"valueName":{"identifier":"unsafeFreeze"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"typeName":{"identifier":"ST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5874421699803552364},"usedName":{"valueName":{"identifier":"unsafeTake"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"valueName":{"identifier":"elemseq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8519155196647617854},"usedName":{"valueName":{"identifier":"unsafeThaw"}},"qualification":null},{"reference":{"otherSlice":6370104610824253647},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1710731503429193408},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["constructN :: forall v a . Vector v a => Int -> (v a -> a) -> v a","constructN !n f\n  = runST\n      (do v <- M.new n\n          v' <- unsafeFreeze v\n          fill v' 0)\n  where fill :: forall s . v a -> Int -> ST s (v a)\n        fill !v i\n          | i < n =\n            let x = f (unsafeTake i v) in\n              elemseq v x $\n                do v' <- unsafeThaw v\n                   M.unsafeWrite v' i x\n                   v'' <- unsafeFreeze v'\n                   fill v'' (i + 1)\n        fill v _ = return v"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}