{"sliceID":2495556723067160092,"uses":[{"reference":{"otherSlice":3848874062030354227},"usedName":{"constructorName":{"identifier":"WhenMissing"},"constructorTypeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"valueName":{"identifier":"missingSubtree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"valueName":{"identifier":"missingKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null}],"fragment":["mapGentlyWhenMissing ::\n                       Functor f => (a -> b) -> WhenMissing f k x a -> WhenMissing f k x b","mapGentlyWhenMissing f t\n  = WhenMissing{missingSubtree =\n                  \\ m -> fmap f <$> missingSubtree t m,\n                missingKey = \\ k x -> fmap f <$> missingKey t k x}"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}