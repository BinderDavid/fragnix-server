{"sliceID":4354296217775384376,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"mallocBytes"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"free"}},"qualification":null},{"reference":{"otherSlice":6166620187559862752},"usedName":{"valueName":{"identifier":"encodeTokenHeader"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":3730763711957041450},"usedName":{"valueName":{"identifier":"create"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":811219613042846892},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":958118617932303493},"usedName":{"constructorName":{"identifier":"BufferOverrun"},"constructorTypeName":{"identifier":"BufferOverrun"}},"qualification":null},{"reference":{"otherSlice":2655786183038399924},"usedName":{"typeName":{"identifier":"EncodeStrategy"}},"qualification":null},{"reference":{"otherSlice":3520920364834565834},"usedName":{"typeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":2728446607831036551},"usedName":{"typeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"otherSlice":1967376015967899813},"usedName":{"typeName":{"identifier":"TokenHeaderList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["encodeHeader' ::\n              EncodeStrategy ->\n                Size -> DynamicTable -> TokenHeaderList -> IO ByteString","encodeHeader' stgy siz dyntbl hs\n  = bracket (mallocBytes siz) free enc\n  where enc buf\n          = do (hs', len) <- encodeTokenHeader buf siz stgy True dyntbl hs\n               case hs' of\n                   [] -> create len $ \\ p -> memcpy p buf len\n                   _ -> throwIO BufferOverrun"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}