{"sliceID":8430432918913905914,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"identifier":"void"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8721526537659742777},"usedName":{"valueName":{"identifier":"copy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3092570537208454296},"usedName":{"valueName":{"identifier":"splitAt"}},"qualification":"BS"},{"reference":{"otherSlice":3525280260578742172},"usedName":{"valueName":{"identifier":"bufferIO"}},"qualification":null},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"BS"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":8433867133710663609},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":4569852275802132727},"usedName":{"typeName":{"identifier":"BufSize"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["packHeader ::\n           Buffer ->\n             BufSize ->\n               (ByteString -> IO ()) -> IO () -> [ByteString] -> Int -> IO Int","packHeader _ _ _ _ [] n = return n\npackHeader buf siz send hook (bs : bss) n\n  | len < room =\n    do let dst = buf `plusPtr` n\n       void $ copy dst bs\n       packHeader buf siz send hook bss (n + len)\n  | otherwise =\n    do let dst = buf `plusPtr` n\n           (bs1, bs2) = BS.splitAt room bs\n       void $ copy dst bs1\n       bufferIO buf siz send\n       hook\n       packHeader buf siz send hook (bs2 : bss) 0\n  where len = BS.length bs\n        room = siz - n"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}