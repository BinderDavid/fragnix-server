{"sliceID":3244979190532430811,"uses":[{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quotRem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":6376244257574649963},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"otherSlice":5724896843322748361},"usedName":{"valueName":{"identifier":"i2w"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":8068578393031383548},"usedName":{"valueName":{"identifier":"unsafeIndex"}},"qualification":"B"},{"reference":{"otherSlice":6587724712381108724},"usedName":{"valueName":{"identifier":"digits"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"Integral"}},"qualification":null},{"reference":{"otherSlice":5966208167612816875},"usedName":{"typeName":{"identifier":"MArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"typeName":{"identifier":"ST"}},"qualification":null}],"fragment":["posDecimal ::\n             (Integral a) => forall s . MArray s -> Int -> Int -> a -> ST s ()","posDecimal marr off0 ds v0 = go (off0 + ds - 1) v0\n  where go off v\n          | v >= 100 =\n            do let (q, r) = v `quotRem` 100\n               write2 off r\n               go (off - 2) q\n          | v < 10 = unsafeWrite marr off (i2w v)\n          | otherwise = write2 off v\n        write2 off i0\n          = do let i = fromIntegral i0\n                   j = i + i\n               unsafeWrite marr off $ get (j + 1)\n               unsafeWrite marr (off - 1) $ get j\n        get = fromIntegral . B.unsafeIndex digits"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","RankNTypes","ScopedTypeVariables","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}