{"sliceID":1518538844996360694,"uses":[{"reference":{"otherSlice":3597018201094423050},"usedName":{"valueName":{"identifier":"dayStart"}},"qualification":null},{"reference":{"otherSlice":6153250837217495513},"usedName":{"valueName":{"identifier":"utcDayLength"}},"qualification":null},{"reference":{"otherSlice":8421869514625647238},"usedName":{"valueName":{"identifier":"diffAbsoluteTime"}},"qualification":null},{"reference":{"otherSlice":2624607442863277509},"usedName":{"valueName":{"identifier":"addDays"}},"qualification":null},{"reference":{"builtinModule":"Data.Fixed"},"usedName":{"valueName":{"identifier":"div'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2635401880325554829},"usedName":{"constructorName":{"identifier":"UTCTime"},"constructorTypeName":{"identifier":"UTCTime"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4149385944025706657},"usedName":{"constructorName":{"identifier":"ModifiedJulianDay"},"constructorTypeName":{"identifier":"Day"}},"qualification":null},{"reference":{"otherSlice":3812395921192148391},"usedName":{"valueName":{"identifier":"taiEpoch"}},"qualification":null},{"reference":{"otherSlice":2597759570661449607},"usedName":{"typeName":{"identifier":"LeapSecondMap"}},"qualification":null},{"reference":{"otherSlice":7425006966609070372},"usedName":{"typeName":{"identifier":"AbsoluteTime"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2635401880325554829},"usedName":{"typeName":{"identifier":"UTCTime"}},"qualification":null}],"fragment":["taiToUTCTime :: LeapSecondMap -> AbsoluteTime -> Maybe UTCTime","taiToUTCTime lsmap abstime\n  = let stable day\n          = do dayt <- dayStart lsmap day\n               len <- utcDayLength lsmap day\n               let dtime = diffAbsoluteTime abstime dayt\n                   day' = addDays (div' dtime len) day\n               if day == day' then return (UTCTime day dtime) else stable day'\n      in\n      stable $\n        ModifiedJulianDay $ div' (diffAbsoluteTime abstime taiEpoch) 86400"],"instances":[],"language":{"extensions":["Rank2Types","DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}