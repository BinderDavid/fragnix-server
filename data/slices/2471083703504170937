{"sliceID":2471083703504170937,"uses":[{"reference":{"otherSlice":976628837217299383},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":976628837217299383},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["mapM :: Monad m => (a -> m b) -> Stream m a -> Stream m b","mapM f (Stream step t) = Stream step' t\n  where {-# INLINE [0] step' #-}\n        step' s\n          = do r <- step s\n               case r of\n                   Yield x s' -> liftM (`Yield` s') (f x)\n                   Skip s' -> return (Skip s')\n                   Done -> return Done"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}