{"sliceID":6332833401312613360,"uses":[{"reference":{"otherSlice":7826664568205610012},"usedName":{"typeName":{"identifier":"Catch"}},"qualification":null},{"reference":{"otherSlice":435732019952753290},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":435732019952753290},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":300208031876827798},"usedName":{"valueName":{"identifier":"runAccumT"}},"qualification":null}],"fragment":["liftCatch :: Catch e m (a, w) -> Catch e (AccumT w m) a","liftCatch catchE m h\n  = AccumT $ \\ w -> runAccumT m w `catchE` \\ e -> runAccumT (h e) w"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}