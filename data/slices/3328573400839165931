{"sliceID":3328573400839165931,"uses":[{"reference":{"otherSlice":7599519667858710776},"usedName":{"typeName":{"identifier":"Family"}},"qualification":null},{"reference":{"otherSlice":1575450884604877623},"usedName":{"typeName":{"identifier":"SocketType"}},"qualification":null},{"reference":{"otherSlice":7195185856990304431},"usedName":{"typeName":{"identifier":"ProtocolNumber"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"allocaBytes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Types"},"usedName":{"typeName":{"identifier":"CInt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1176054751428239196},"usedName":{"valueName":{"identifier":"packSocketTypeOrThrow"}},"qualification":null},{"reference":{"otherSlice":2494876676028475079},"usedName":{"valueName":{"identifier":"throwSocketErrorIfMinus1Retry"}},"qualification":null},{"reference":{"otherSlice":7538515310555455976},"usedName":{"valueName":{"identifier":"c_socketpair"}},"qualification":null},{"reference":{"otherSlice":7456968725881499022},"usedName":{"valueName":{"identifier":"packFamily"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"peekArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1660965797830391715},"usedName":{"valueName":{"identifier":"setNonBlockIfNeeded"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"newMVar"}},"qualification":null},{"reference":{"otherSlice":8197619942740010703},"usedName":{"constructorName":{"identifier":"Connected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"otherSlice":881119326870730711},"usedName":{"valueName":{"identifier":"withSocketsDo"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null}],"fragment":["socketPair ::\n           Family -> SocketType -> ProtocolNumber -> IO (Socket, Socket)","socketPair family stype protocol\n  = do allocaBytes (2 * sizeOf (1 :: CInt)) $\n         \\ fdArr ->\n           do c_stype <- packSocketTypeOrThrow \"socketPair\" stype\n              _rc <- throwSocketErrorIfMinus1Retry \"Network.Socket.socketpair\" $\n                       c_socketpair (packFamily family) c_stype protocol fdArr\n              [fd1, fd2] <- peekArray 2 fdArr\n              s1 <- mkNonBlockingSocket fd1\n              s2 <- mkNonBlockingSocket fd2\n              return (s1, s2)\n  where mkNonBlockingSocket fd\n          = do setNonBlockIfNeeded fd\n               stat <- newMVar Connected\n               withSocketsDo $ return ()\n               return (MkSocket fd family stype protocol stat)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}