{"sliceID":2825661550840394817,"uses":[{"reference":{"builtinModule":"Control.Concurrent.MVar"},"usedName":{"valueName":{"identifier":"withMVar"}},"qualification":null},{"reference":{"otherSlice":5936152612635895590},"usedName":{"valueName":{"identifier":"lock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket_"}},"qualification":null},{"reference":{"otherSlice":7005592783764265097},"usedName":{"valueName":{"identifier":"c_setpwent"}},"qualification":null},{"reference":{"otherSlice":4603695402879669849},"usedName":{"valueName":{"identifier":"c_endpwent"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"resetErrno"}},"qualification":null},{"reference":{"otherSlice":1717912424989511598},"usedName":{"valueName":{"identifier":"throwErrnoIfNullAndError"}},"qualification":null},{"reference":{"otherSlice":5985714550960947066},"usedName":{"valueName":{"identifier":"c_getpwent"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"nullPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":2157404944631587166},"usedName":{"valueName":{"identifier":"unpackUserEntry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":5858228627906841875},"usedName":{"typeName":{"identifier":"UserEntry"}},"qualification":null}],"fragment":["getAllUserEntries :: IO [UserEntry]","getAllUserEntries\n  = withMVar lock $ \\ _ -> bracket_ c_setpwent c_endpwent $ worker []\n  where worker accum\n          = do resetErrno\n               ppw <- throwErrnoIfNullAndError \"getAllUserEntries\" $ c_getpwent\n               if ppw == nullPtr then return (reverse accum) else\n                 do thisentry <- unpackUserEntry ppw\n                    worker (thisentry : accum)"],"instances":[],"language":{"extensions":["CApiFFI","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}