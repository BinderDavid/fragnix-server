{"sliceID":2687075347601074229,"uses":[{"reference":{"otherSlice":3651195766347386861},"usedName":{"valueName":{"identifier":"getClientCookies"}},"qualification":null},{"reference":{"otherSlice":5286553186981066813},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"Map"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":333926707491976865},"usedName":{"valueName":{"identifier":"assertFailure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4755613459485646256},"usedName":{"valueName":{"identifier":"assertBool"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"concat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":9079646820445488578},"usedName":{"valueName":{"identifier":"setCookieValue"}},"qualification":"Cookie"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":6144584388836266359},"usedName":{"typeName":{"identifier":"Session"}},"qualification":null}],"fragment":["assertClientCookieValue ::\n                        String -> ByteString -> ByteString -> Session ()","assertClientCookieValue s cookieName cookieValue\n  = do cookies <- getClientCookies\n       case Map.lookup cookieName cookies of\n           Nothing -> assertFailure (s ++ \" (cookie does not exist)\")\n           Just c -> assertBool\n                       (concat\n                          [s, \" (actual value \", show $ Cookie.setCookieValue c,\n                           \" expected value \", show cookieValue, \")\"])\n                       (Cookie.setCookieValue c == cookieValue)"],"instances":[],"language":{"extensions":["OverloadedStrings","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}