{"sliceID":4647698986951156806,"uses":[{"reference":{"otherSlice":8028585778067812017},"usedName":{"typeName":{"identifier":"RegexMaker"}},"qualification":null},{"reference":{"otherSlice":5383107759007114376},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"otherSlice":3514027083194216634},"usedName":{"typeName":{"identifier":"CompOption"}},"qualification":null},{"reference":{"otherSlice":6024572806983767782},"usedName":{"typeName":{"identifier":"ExecOption"}},"qualification":null},{"reference":{"otherSlice":8028585778067812017},"usedName":{"valueName":{"identifier":"makeRegex"}},"qualification":null},{"reference":{"otherSlice":564666320712974869},"usedName":{"valueName":{"identifier":"matchM"}},"qualification":null},{"reference":{"otherSlice":564666320712974869},"usedName":{"typeName":{"identifier":"RegexContext"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null}],"fragment":["(=~~) ::\n        (RegexMaker Regex CompOption ExecOption source,\n         RegexContext Regex source1 target, Monad m) =>\n        source1 -> source -> m target","(=~~) x r\n  = let make ::\n               RegexMaker Regex CompOption ExecOption a => a -> Regex\n        make = makeRegex\n      in matchM (make r) x"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}