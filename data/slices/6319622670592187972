{"sliceID":6319622670592187972,"uses":[{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafeInterleaveIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7478412105882641925},"usedName":{"valueName":{"identifier":"recv"}},"qualification":"N"},{"reference":{"otherSlice":7477884691346391193},"usedName":{"valueName":{"identifier":"defaultChunkSize"}},"qualification":null},{"reference":{"otherSlice":5578418172209195165},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"otherSlice":2984067902347114514},"usedName":{"valueName":{"identifier":"shutdown"}},"qualification":null},{"reference":{"otherSlice":275843164019579883},"usedName":{"constructorName":{"identifier":"ShutdownReceive"},"constructorTypeName":{"identifier":"ShutdownCmd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["getContents :: Socket -> IO ByteString","getContents sock = loop\n  where loop\n          = unsafeInterleaveIO $\n              do s <- N.recv sock defaultChunkSize\n                 if S.null s then shutdown sock ShutdownReceive >> return Empty else\n                   Chunk s `liftM` loop"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}