{"sliceID":1711866540825387594,"uses":[{"reference":{"otherSlice":756638219425142493},"usedName":{"valueName":{"identifier":"null"}},"qualification":"V"},{"reference":{"otherSlice":6962674997942609218},"usedName":{"valueName":{"identifier":"emptyArray_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":652411901723476108},"usedName":{"valueName":{"identifier":"char8"}},"qualification":"B"},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"operator":"<>"}},"qualification":null},{"reference":{"otherSlice":4918228984635666724},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":"V"},{"reference":{"otherSlice":4096196190496625492},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":"V"},{"reference":{"otherSlice":4369540123880366130},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"V"},{"reference":{"otherSlice":2738749419576514045},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"V"},{"reference":{"otherSlice":2337681378693068080},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":8984783929342293342},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Null"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":1215177400267601974},"usedName":{"valueName":{"identifier":"null_"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Bool"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":2996148614284672141},"usedName":{"valueName":{"identifier":"bool"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Number"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":8557263781849287004},"usedName":{"valueName":{"identifier":"scientific"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"String"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":4313674913129244149},"usedName":{"valueName":{"identifier":"text"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Array"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Object"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":3928167056117968559},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"HMS"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"otherSlice":391169610247762830},"usedName":{"valueName":{"identifier":"emptyObject_"}},"qualification":null},{"reference":{"otherSlice":4871054613251541877},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":"HMS"},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":"T"}],"fragment":["array :: V.Vector Value -> Builder","array v\n  | V.null v = emptyArray_\n  | otherwise =\n    B.char8 '[' <> encodeToBuilder (V.unsafeHead v) <>\n      V.foldr withComma (B.char8 ']') (V.unsafeTail v)\n  where withComma a z = B.char8 ',' <> encodeToBuilder a <> z","encodeToBuilder :: Value -> Builder","encodeToBuilder Null = null_\nencodeToBuilder (Bool b) = bool b\nencodeToBuilder (Number n) = scientific n\nencodeToBuilder (String s) = text s\nencodeToBuilder (Array v) = array v\nencodeToBuilder (Object m) = object m","object :: HMS.HashMap T.Text Value -> Builder","object m\n  = case HMS.toList m of\n        (x : xs) -> B.char8 '{' <> one x <>\n                      foldr withComma (B.char8 '}') xs\n        _ -> emptyObject_\n  where withComma a z = B.char8 ',' <> one a <> z\n        one (k, v) = text k <> B.char8 ':' <> encodeToBuilder v"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}