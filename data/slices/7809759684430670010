{"sliceID":7809759684430670010,"uses":[{"reference":{"otherSlice":6658493354337671128},"usedName":{"constructorName":{"identifier":"Text"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6985743501285579037},"usedName":{"valueName":{"identifier":"text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6557031379473270038},"usedName":{"constructorName":{"identifier":"Iter"},"constructorTypeName":{"identifier":"Iter"}},"qualification":null},{"reference":{"otherSlice":2626927518950880956},"usedName":{"valueName":{"identifier":"iter"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["commonPrefixes :: Text -> Text -> Maybe (Text, Text, Text)","commonPrefixes t0@(Text arr0 off0 len0) t1@(Text arr1 off1 len1)\n  = go 0 0\n  where go !i !j\n          | i < len0 && j < len1 && a == b = go (i + d0) (j + d1)\n          | i > 0 =\n            Just\n              (Text arr0 off0 i, text arr0 (off0 + i) (len0 - i),\n               text arr1 (off1 + j) (len1 - j))\n          | otherwise = Nothing\n          where Iter a d0 = iter t0 i\n                Iter b d1 = iter t1 j"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}