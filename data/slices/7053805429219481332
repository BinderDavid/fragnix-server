{"sliceID":7053805429219481332,"uses":[{"reference":{"otherSlice":4468617394058822907},"usedName":{"typeName":{"identifier":"Binary"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4468617394058822907},"usedName":{"valueName":{"identifier":"put"}},"qualification":null},{"reference":{"otherSlice":3772163678356121352},"usedName":{"valueName":{"identifier":"putWord8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"fromEnum"}},"qualification":null},{"reference":{"otherSlice":4468617394058822907},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":1667282292606484044},"usedName":{"valueName":{"identifier":"getWord8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null}],"fragment":["instance Binary Bool where\n        put = putWord8 . fromIntegral . fromEnum\n        get = getWord8 >>= toBool\n          where toBool 0 = return False\n                toBool 1 = return True\n                toBool c = fail (\"Could not map value \" ++ show c ++ \" to Bool\")"],"instances":[],"language":{"extensions":["FlexibleContexts","DefaultSignatures","GADTs","ScopedTypeVariables","PatternGuards","PolyKinds","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}