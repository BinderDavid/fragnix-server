{"sliceID":8916921770474388430,"uses":[{"reference":{"otherSlice":5658441291795675539},"usedName":{"constructorName":{"identifier":"Reaper"},"constructorTypeName":{"identifier":"Reaper"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperAdd"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperKill"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperRead"}},"qualification":null},{"reference":{"otherSlice":5658441291795675539},"usedName":{"valueName":{"identifier":"reaperStop"}},"qualification":null},{"reference":{"otherSlice":1462254132124174125},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5769651342567328677},"usedName":{"constructorName":{"identifier":"Negative"},"constructorTypeName":{"identifier":"Entry"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"otherSlice":5769651342567328677},"usedName":{"constructorName":{"identifier":"Positive"},"constructorTypeName":{"identifier":"Entry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6432063620146282938},"usedName":{"valueName":{"identifier":"positive"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"onException"}},"qualification":"E"},{"reference":{"otherSlice":5075158861698340322},"usedName":{"valueName":{"identifier":"negative"}},"qualification":null},{"reference":{"otherSlice":8522588587671324175},"usedName":{"typeName":{"identifier":"FileInfoCache"}},"qualification":null},{"reference":{"otherSlice":413328651774111622},"usedName":{"typeName":{"identifier":"Hash"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4083196669851533839},"usedName":{"typeName":{"identifier":"FileInfo"}},"qualification":null}],"fragment":["getAndRegisterInfo ::\n                   FileInfoCache -> Hash -> FilePath -> IO FileInfo","getAndRegisterInfo reaper@Reaper{..} h path\n  = do cache <- reaperRead\n       case M.lookup h path cache of\n           Just Negative -> throwIO\n                              (userError \"FileInfoCache:getAndRegisterInfo\")\n           Just (Positive x) -> return x\n           Nothing -> positive reaper h path `E.onException`\n                        negative reaper h path"],"instances":[],"language":{"extensions":["RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}