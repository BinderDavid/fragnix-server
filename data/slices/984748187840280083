{"sliceID":984748187840280083,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":6947997737051125680},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":4871054613251541877},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"L"},{"reference":{"otherSlice":3766288850241904628},"usedName":{"valueName":{"identifier":"unsafeInsertWith"}},"qualification":null},{"reference":{"otherSlice":488845226488802922},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null}],"fragment":["fromListWith ::\n               (Eq k, Hashable k) => (v -> v -> v) -> [(k, v)] -> HashMap k v","fromListWith f\n  = L.foldl' (\\ m (k, v) -> unsafeInsertWith f k v m) empty"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","MagicHash","ScopedTypeVariables","PatternGuards","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}