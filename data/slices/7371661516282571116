{"sliceID":7371661516282571116,"uses":[{"reference":{"otherSlice":3706295977478673008},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":87473710531740042},"usedName":{"valueName":{"identifier":"control"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"mask"}},"qualification":"E"},{"reference":{"otherSlice":8577945148332070513},"usedName":{"valueName":{"identifier":"liftBaseOp_"}},"qualification":null}],"fragment":["mask ::\n       MonadBaseControl IO m => ((forall a . m a -> m a) -> m b) -> m b","mask f\n  = control $\n      \\ runInBase -> E.mask $ \\ g -> runInBase $ f $ liftBaseOp_ g"],"instances":[],"language":{"extensions":["NoImplicitPrelude","ExistentialQuantification","FlexibleContexts","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}