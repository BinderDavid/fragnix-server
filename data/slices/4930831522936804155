{"sliceID":4930831522936804155,"uses":[{"reference":{"builtinModule":"GHC.Read"},"usedName":{"typeName":{"identifier":"Read"}},"qualification":null},{"reference":{"otherSlice":6423202506202804909},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null},{"reference":{"builtinModule":"GHC.Read"},"usedName":{"valueName":{"identifier":"readsPrec"}},"qualification":null},{"reference":{"builtinModule":"GHC.Read"},"usedName":{"valueName":{"identifier":"readParen"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"readP_to_S"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<$"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"string"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"skipSpaces"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"readS_to_P"}},"qualification":null},{"reference":{"builtinModule":"Text.Read"},"usedName":{"valueName":{"identifier":"reads"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"valueName":{"identifier":"fromListN"}},"qualification":null}],"fragment":["instance Read a => Read (Array a) where\n        readsPrec p\n          = readParen (p > 10) . readP_to_S $\n              do () <$ string \"fromListN\"\n                 skipSpaces\n                 n <- readS_to_P reads\n                 skipSpaces\n                 l <- readS_to_P reads\n                 return $ fromListN n l"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}