{"sliceID":7644209924582563772,"uses":[{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":"IntSet"},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":"IntSet"},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":"IntSet"},{"reference":{"otherSlice":2656393015452141261},"usedName":{"valueName":{"identifier":"suffixBitMask"}},"qualification":"IntSet"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":8670052852832108484},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":4436036170711701602},"usedName":{"valueName":{"identifier":"intFromNat"}},"qualification":null},{"reference":{"otherSlice":3639719446156183290},"usedName":{"valueName":{"identifier":"natFromInt"}},"qualification":null},{"reference":{"otherSlice":7584045994032308447},"usedName":{"valueName":{"identifier":"shiftRL"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":7584045994032308447},"usedName":{"valueName":{"identifier":"shiftLL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":555828902643222699},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":8753219322949164487},"usedName":{"typeName":{"identifier":"IntSet"}},"qualification":"IntSet"},{"reference":{"otherSlice":8670052852832108484},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null}],"fragment":["fromSet :: (Key -> a) -> IntSet.IntSet -> IntMap a","fromSet _ IntSet.Nil = Nil\nfromSet f (IntSet.Bin p m l r)\n  = Bin p m (fromSet f l) (fromSet f r)\nfromSet f (IntSet.Tip kx bm)\n  = buildTree f kx bm (IntSet.suffixBitMask + 1)\n  where buildTree g !prefix !bmask bits\n          = case bits of\n                0 -> Tip prefix $! g prefix\n                _ -> case intFromNat ((natFromInt bits) `shiftRL` 1) of\n                         bits2 | bmask .&. ((1 `shiftLL` bits2) - 1) == 0 ->\n                                 buildTree g (prefix + bits2) (bmask `shiftRL` bits2) bits2\n                               | (bmask `shiftRL` bits2) .&. ((1 `shiftLL` bits2) - 1) == 0 ->\n                                 buildTree g prefix bmask bits2\n                               | otherwise ->\n                                 Bin prefix bits2 (buildTree g prefix bmask bits2)\n                                   (buildTree g (prefix + bits2) (bmask `shiftRL` bits2) bits2)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}