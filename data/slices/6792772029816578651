{"sliceID":6792772029816578651,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1515572791565902691},"usedName":{"valueName":{"identifier":"newTimeCache"}},"qualification":null},{"reference":{"otherSlice":2929982452161047285},"usedName":{"valueName":{"identifier":"simpleTimeFormat"}},"qualification":null},{"reference":{"otherSlice":7304401497855796845},"usedName":{"valueName":{"identifier":"initLogger"}},"qualification":null},{"reference":{"otherSlice":4782021621411536862},"usedName":{"constructorName":{"identifier":"FromFallback"},"constructorTypeName":{"identifier":"IPAddrSource"}},"qualification":null},{"reference":{"otherSlice":6247677831557181941},"usedName":{"constructorName":{"identifier":"LogStdout"},"constructorTypeName":{"identifier":"LogType"}},"qualification":null},{"reference":{"otherSlice":6542920437974541857},"usedName":{"valueName":{"identifier":"apacheLogger"}},"qualification":null},{"reference":{"otherSlice":6542920437974541857},"usedName":{"valueName":{"identifier":"logRemover"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"identifier":"void"}},"qualification":null},{"reference":{"otherSlice":1133924331468692327},"usedName":{"typeName":{"identifier":"ApacheLogger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["withStdoutLogger :: (ApacheLogger -> IO a) -> IO a","withStdoutLogger app\n  = bracket setup teardown $ \\ (aplogger, _) -> app aplogger\n  where setup\n          = do tgetter <- newTimeCache simpleTimeFormat\n               apf <- initLogger FromFallback (LogStdout 4096) tgetter\n               let aplogger = apacheLogger apf\n                   remover = logRemover apf\n               return (aplogger, remover)\n        teardown (_, remover) = void remover"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}