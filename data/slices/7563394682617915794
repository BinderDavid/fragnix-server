{"sliceID":7563394682617915794,"uses":[{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"typeName":{"identifier":"MonadZip"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"valueName":{"identifier":"mzipWith"}},"qualification":null},{"reference":{"otherSlice":4426932037271932392},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftA2"}},"qualification":null}],"fragment":["instance (MonadZip m) => MonadZip (ExceptT e m) where\n        mzipWith f (ExceptT a) (ExceptT b)\n          = ExceptT $ mzipWith (liftA2 f) a b\n        \n        {-# INLINE mzipWith #-}"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}