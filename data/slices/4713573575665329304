{"sliceID":4713573575665329304,"uses":[{"reference":{"builtinModule":"Control.Concurrent.MVar"},"usedName":{"valueName":{"identifier":"withMVar"}},"qualification":null},{"reference":{"otherSlice":5936152612635895590},"usedName":{"valueName":{"identifier":"lock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket_"}},"qualification":null},{"reference":{"otherSlice":2749750998898953750},"usedName":{"valueName":{"identifier":"c_setgrent"}},"qualification":null},{"reference":{"otherSlice":798533064087827526},"usedName":{"valueName":{"identifier":"c_endgrent"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"resetErrno"}},"qualification":null},{"reference":{"otherSlice":1717912424989511598},"usedName":{"valueName":{"identifier":"throwErrnoIfNullAndError"}},"qualification":null},{"reference":{"otherSlice":7591377699025384330},"usedName":{"valueName":{"identifier":"c_getgrent"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"nullPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":1334447266832812473},"usedName":{"valueName":{"identifier":"unpackGroupEntry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":1074297413458439265},"usedName":{"typeName":{"identifier":"GroupEntry"}},"qualification":null}],"fragment":["getAllGroupEntries :: IO [GroupEntry]","getAllGroupEntries\n  = withMVar lock $ \\ _ -> bracket_ c_setgrent c_endgrent $ worker []\n  where worker accum\n          = do resetErrno\n               ppw <- throwErrnoIfNullAndError \"getAllGroupEntries\" $ c_getgrent\n               if ppw == nullPtr then return (reverse accum) else\n                 do thisentry <- unpackGroupEntry ppw\n                    worker (thisentry : accum)"],"instances":[],"language":{"extensions":["CApiFFI","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}