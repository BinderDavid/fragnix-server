{"sliceID":8569385758334088693,"uses":[{"reference":{"otherSlice":1106325324778289270},"usedName":{"constructorName":{"identifier":"WhenMatched"},"constructorTypeName":{"identifier":"WhenMatched"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"otherSlice":1106325324778289270},"usedName":{"typeName":{"identifier":"WhenMatched"}},"qualification":null}],"fragment":["zipWithMatched ::\n                 Applicative f => (k -> x -> y -> z) -> WhenMatched f k x y z","zipWithMatched f = WhenMatched $ \\ k x y -> pure $! Just $! f k x y"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}