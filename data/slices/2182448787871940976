{"sliceID":2182448787871940976,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"ProcessID"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2868476736563522921},"usedName":{"typeName":{"identifier":"ProcessStatus"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"alloca"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrnoIfMinus1Retry"}},"qualification":null},{"reference":{"otherSlice":5659164407408392995},"usedName":{"valueName":{"identifier":"c_waitpid"}},"qualification":null},{"reference":{"otherSlice":6598821808356455361},"usedName":{"valueName":{"identifier":"waitOptions"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1315423517880914095},"usedName":{"valueName":{"identifier":"readWaitStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["getProcessStatus ::\n                 Bool -> Bool -> ProcessID -> IO (Maybe ProcessStatus)","getProcessStatus block stopped pid\n  = alloca $\n      \\ wstatp ->\n        do pid' <- throwErrnoIfMinus1Retry \"getProcessStatus\"\n                     (c_waitpid pid wstatp (waitOptions block stopped))\n           case pid' of\n               0 -> return Nothing\n               _ -> do ps <- readWaitStatus wstatp\n                       return (Just ps)"],"instances":[],"language":{"extensions":["CApiFFI","InterruptibleFFI","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}