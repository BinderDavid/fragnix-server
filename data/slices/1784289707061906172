{"sliceID":1784289707061906172,"uses":[{"reference":{"otherSlice":2347089666054590766},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"otherSlice":7987649984260342197},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":"L"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"allocaArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5591682352857387820},"usedName":{"valueName":{"identifier":"throwSocketErrorWaitWrite"}},"qualification":null},{"reference":{"otherSlice":5995604860002003939},"usedName":{"valueName":{"identifier":"c_writev"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":3829819806467854161},"usedName":{"valueName":{"identifier":"unsafeUseAsCStringLen"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"poke"}},"qualification":null},{"reference":{"otherSlice":6227570810232212242},"usedName":{"constructorName":{"identifier":"IOVec"},"constructorTypeName":{"identifier":"IOVec"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":6227570810232212242},"usedName":{"typeName":{"identifier":"IOVec"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null}],"fragment":["send :: Socket -> ByteString -> IO Int64","send sock@(MkSocket fd _ _ _ _) s\n  = do let cs = take maxNumChunks (L.toChunks s)\n           len = length cs\n       liftM fromIntegral . allocaArray len $\n         \\ ptr ->\n           withPokes cs ptr $\n             \\ niovs ->\n               throwSocketErrorWaitWrite sock \"writev\" $\n                 c_writev (fromIntegral fd) ptr niovs\n  where withPokes ss p f = loop ss p 0 0\n          where loop (c : cs) q k !niovs\n                  | k < maxNumBytes =\n                    unsafeUseAsCStringLen c $\n                      \\ (ptr, len) ->\n                        do poke q $ IOVec ptr (fromIntegral len)\n                           loop cs (q `plusPtr` sizeOf (undefined :: IOVec))\n                             (k + fromIntegral len)\n                             (niovs + 1)\n                  | otherwise = f niovs\n                loop _ _ _ niovs = f niovs\n        maxNumBytes = 4194304 :: Int\n        maxNumChunks = 1024 :: Int"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}