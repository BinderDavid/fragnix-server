{"sliceID":1612750777847459904,"uses":[{"reference":{"otherSlice":4879478091175508336},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":3572604384653929005},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"S"},{"reference":{"otherSlice":5209636935073169998},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":5920019322916033742},"usedName":{"valueName":{"identifier":"safe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":6658493354337671128},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["zipWith :: (Char -> Char -> Char) -> Text -> Text -> Text","zipWith f t1 t2 = unstream (S.zipWith g (stream t1) (stream t2))\n  where g a b = safe (f a b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}