{"sliceID":4038048211443236342,"uses":[{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8218805848122191995},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":7757403855399631850},"usedName":{"valueName":{"identifier":"mk"}},"qualification":"CI"},{"reference":{"otherSlice":5876941829933060846},"usedName":{"valueName":{"identifier":"mapResponseHeaders"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"filter"}},"qualification":null},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"fst"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"notElem"}},"qualification":null}],"fragment":["stripHeaders :: [ByteString] -> (Response -> Response)","stripHeaders hs\n  = let hnames = map CI.mk hs in\n      mapResponseHeaders (filter (\\ hdr -> fst hdr `notElem` hnames))"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}