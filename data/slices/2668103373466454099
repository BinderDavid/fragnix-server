{"sliceID":2668103373466454099,"uses":[{"reference":{"otherSlice":3620193903104711892},"usedName":{"valueName":{"identifier":"execState"}},"qualification":null},{"reference":{"otherSlice":4728685561892384115},"usedName":{"valueName":{"identifier":"runS"}},"qualification":null},{"reference":{"otherSlice":6140241550693940551},"usedName":{"valueName":{"identifier":"def"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"flip"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6931263826636065684},"usedName":{"valueName":{"identifier":"notFoundApp"}},"qualification":null},{"reference":{"otherSlice":7330458896976269828},"usedName":{"valueName":{"identifier":"routes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":7330458896976269828},"usedName":{"valueName":{"identifier":"middlewares"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8218805848122191995},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4728685561892384115},"usedName":{"typeName":{"identifier":"ScottyT"}},"qualification":null},{"reference":{"otherSlice":628686228066488211},"usedName":{"typeName":{"identifier":"Application"}},"qualification":null}],"fragment":["scottyAppT ::\n             (Monad m, Monad n) =>\n             (m Response -> IO Response) -> ScottyT e m () -> n Application","scottyAppT runActionToIO defs\n  = do let s = execState (runS defs) def\n       let rapp req callback\n             = runActionToIO (foldl (flip ($)) notFoundApp (routes s) req) >>=\n                 callback\n       return $ foldl (flip ($)) rapp (middlewares s)"],"instances":[],"language":{"extensions":["OverloadedStrings","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}