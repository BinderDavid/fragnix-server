{"sliceID":9217085476487624171,"uses":[{"reference":{"otherSlice":6839481173187836993},"usedName":{"valueName":{"identifier":"peekWord8'"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"identifier":"void"}},"qualification":null},{"reference":{"otherSlice":7996999233900208959},"usedName":{"valueName":{"identifier":"anyWord8"}},"qualification":"I"},{"reference":{"otherSlice":4060020629361012727},"usedName":{"valueName":{"identifier":"decimal"}},"qualification":null},{"reference":{"otherSlice":7983566071168235513},"usedName":{"constructorName":{"identifier":"SP"},"constructorTypeName":{"identifier":"SP"}},"qualification":null},{"reference":{"otherSlice":1661752722654164929},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"B8"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"negate"}},"qualification":null},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B8"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3189925689892398619},"usedName":{"valueName":{"identifier":"peekWord8"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"*>"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":7349409384358421327},"usedName":{"valueName":{"identifier":"takeWhile"}},"qualification":"I"},{"reference":{"otherSlice":6489790711030823812},"usedName":{"valueName":{"identifier":"isDigit_w8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3683678812901133496},"usedName":{"valueName":{"identifier":"satisfy"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":6396013820204897410},"usedName":{"valueName":{"identifier":"scientific"}},"qualification":"Sci"},{"reference":{"otherSlice":4588959792580978722},"usedName":{"valueName":{"identifier":"signed"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1008626907939011545},"usedName":{"typeName":{"identifier":"Scientific"}},"qualification":null},{"reference":{"otherSlice":9177932474043345134},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["scientifically :: (Scientific -> a) -> Parser a","scientifically h\n  = do let minus = 45\n           plus = 43\n       sign <- I.peekWord8'\n       let !positive = sign == plus || sign /= minus\n       when (sign == plus || sign == minus) $ void $ I.anyWord8\n       n <- decimal\n       let f fracDigits\n             = SP (B8.foldl' step n fracDigits) (negate $ B8.length fracDigits)\n           step a w = a * 10 + fromIntegral (w - 48)\n       dotty <- I.peekWord8\n       SP c e <- case dotty of\n                     Just 46 -> I.anyWord8 *> (f <$> I.takeWhile isDigit_w8)\n                     _ -> pure (SP n 0)\n       let !signedCoeff\n             | positive = c\n             | otherwise = -c\n       let littleE = 101\n           bigE = 69\n       (I.satisfy (\\ ex -> ex == littleE || ex == bigE) *>\n          fmap (h . Sci.scientific signedCoeff . (e +)) (signed decimal))\n         <|> return (h $ Sci.scientific signedCoeff e)"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","TypeFamilies","TypeSynonymInstances","GADTs","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}