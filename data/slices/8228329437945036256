{"sliceID":8228329437945036256,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"Control.Category"},"usedName":{"typeName":{"identifier":"Category"}},"qualification":"Category"},{"reference":{"otherSlice":8530606344857069545},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"builtinModule":"Control.Category"},"usedName":{"valueName":{"identifier":"id"}},"qualification":"Category"},{"reference":{"otherSlice":1857655581503707846},"usedName":{"valueName":{"identifier":"preserveMissing"}},"qualification":null},{"reference":{"builtinModule":"Control.Category"},"usedName":{"valueName":{"operator":"."}},"qualification":"Category"},{"reference":{"otherSlice":4348296255908580135},"usedName":{"valueName":{"identifier":"traverseMaybeMissing"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8530606344857069545},"usedName":{"valueName":{"identifier":"missingKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["instance (Applicative f, Monad f) =>\n         Category.Category (WhenMissing f)\n         where\n        id = preserveMissing\n        f . g\n          = traverseMaybeMissing $\n              \\ k x ->\n                do y <- missingKey g k x\n                   case y of\n                       Nothing -> pure Nothing\n                       Just q -> missingKey f k q\n        \n        {-# INLINE id #-}\n        \n        {-# INLINE (.) #-}"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}