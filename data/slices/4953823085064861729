{"sliceID":4953823085064861729,"uses":[{"reference":{"otherSlice":2241445292210312499},"usedName":{"typeName":{"identifier":"ToJSON2"}},"qualification":null},{"reference":{"otherSlice":2241445292210312499},"usedName":{"valueName":{"identifier":"liftToJSON2"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"constructorName":{"identifier":"Array"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":479735525071965687},"usedName":{"valueName":{"identifier":"create"}},"qualification":"V"},{"reference":{"otherSlice":8013849340421230462},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":"VM"},{"reference":{"otherSlice":4833656378719677710},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":"VM"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2241445292210312499},"usedName":{"valueName":{"identifier":"liftToEncoding2"}},"qualification":null},{"reference":{"otherSlice":5160575339240789199},"usedName":{"valueName":{"identifier":"list"}},"qualification":"E"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null}],"fragment":["instance ToJSON2 (,) where\n        liftToJSON2 toA _ toB _ (a, b)\n          = Array $\n              V.create $\n                do mv <- VM.unsafeNew 2\n                   VM.unsafeWrite mv 0 (toA a)\n                   VM.unsafeWrite mv 1 (toB b)\n                   return mv\n        \n        {-# INLINE liftToJSON2 #-}\n        liftToEncoding2 toA _ toB _ (a, b) = E.list id [toA a, toB b]\n        \n        {-# INLINE liftToEncoding2 #-}"],"instances":[],"language":{"extensions":["DefaultSignatures","EmptyDataDecls","FlexibleContexts","FlexibleInstances","FunctionalDependencies","GADTs","MultiParamTypeClasses","NamedFieldPuns","OverloadedStrings","PatternGuards","RecordWildCards","ScopedTypeVariables","TypeOperators","TypeSynonymInstances","UndecidableInstances","PolyKinds","NondecreasingIndentation","ExplicitForAll"]}}