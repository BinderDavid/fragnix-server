{"sliceID":1677750760557422202,"uses":[{"reference":{"builtinModule":"Control.Monad.ST.Lazy"},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"otherSlice":7987649984260342197},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":"L"},{"reference":{"otherSlice":7927641156243649111},"usedName":{"constructorName":{"identifier":"DecompressInputRequired"},"constructorTypeName":{"identifier":"DecompressStream"}},"qualification":null},{"reference":{"otherSlice":4791260247128078865},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":7927641156243649111},"usedName":{"constructorName":{"identifier":"DecompressOutputAvailable"},"constructorTypeName":{"identifier":"DecompressStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7927641156243649111},"usedName":{"constructorName":{"identifier":"DecompressStreamEnd"},"constructorTypeName":{"identifier":"DecompressStream"}},"qualification":null},{"reference":{"otherSlice":2178076902115356483},"usedName":{"valueName":{"identifier":"fromChunks"}},"qualification":"L"},{"reference":{"otherSlice":7927641156243649111},"usedName":{"constructorName":{"identifier":"DecompressStreamError"},"constructorTypeName":{"identifier":"DecompressStream"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"otherSlice":4273952938330441952},"usedName":{"typeName":{"identifier":"DecompressError"}},"qualification":null},{"reference":{"otherSlice":7927641156243649111},"usedName":{"typeName":{"identifier":"DecompressStream"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.ST.Lazy"},"usedName":{"typeName":{"identifier":"ST"}},"qualification":null}],"fragment":["foldDecompressStreamWithInput ::\n                              (S.ByteString -> a -> a) ->\n                                (L.ByteString -> a) ->\n                                  (DecompressError -> a) ->\n                                    (forall s . DecompressStream (ST s)) -> L.ByteString -> a","foldDecompressStreamWithInput chunk end err\n  = \\ s lbs -> runST (fold s (L.toChunks lbs))\n  where fold (DecompressInputRequired next) []\n          = next S.empty >>= \\ strm -> fold strm []\n        fold (DecompressInputRequired next) (inchunk : inchunks)\n          = next inchunk >>= \\ s -> fold s inchunks\n        fold (DecompressOutputAvailable outchunk next) inchunks\n          = do r <- next >>= \\ s -> fold s inchunks\n               return $ chunk outchunk r\n        fold (DecompressStreamEnd inchunk) inchunks\n          = return $ end (L.fromChunks (inchunk : inchunks))\n        fold (DecompressStreamError derr) _ = return $ err derr"],"instances":[],"language":{"extensions":["RankNTypes","DeriveDataTypeable","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}