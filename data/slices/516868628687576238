{"sliceID":516868628687576238,"uses":[{"reference":{"otherSlice":7599519667858710776},"usedName":{"typeName":{"identifier":"Family"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"otherSlice":2694158817781932873},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2089503463097500348},"usedName":{"valueName":{"identifier":"sizeOfSockAddrByFamily"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"allocaBytes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["withNewSockAddr :: Family -> (Ptr SockAddr -> Int -> IO a) -> IO a","withNewSockAddr family f\n  = do let sz = sizeOfSockAddrByFamily family\n       allocaBytes sz $ \\ ptr -> f ptr sz"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","FlexibleInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}