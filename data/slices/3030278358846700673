{"sliceID":3030278358846700673,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":6947997737051125680},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":4871054613251541877},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"L"},{"reference":{"otherSlice":5692234775433850018},"usedName":{"valueName":{"identifier":"unsafeInsert"}},"qualification":"HM"},{"reference":{"otherSlice":488845226488802922},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null}],"fragment":["fromList :: (Eq k, Hashable k) => [(k, v)] -> HashMap k v","fromList = L.foldl' (\\ m (k, !v) -> HM.unsafeInsert k v m) empty"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}