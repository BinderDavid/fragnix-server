{"sliceID":4801354834058179748,"uses":[{"reference":{"otherSlice":5540843120797527584},"usedName":{"valueName":{"identifier":"readInteger"}},"qualification":"B8"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5888982201187801192},"usedName":{"constructorName":{"identifier":"ByteRangeSuffix"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"negate"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":5888982201187801192},"usedName":{"constructorName":{"identifier":"ByteRangeFromTo"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":null},{"reference":{"otherSlice":5888982201187801192},"usedName":{"constructorName":{"identifier":"ByteRangeFrom"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":null},{"reference":{"otherSlice":5578418172209195165},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":404915850270007730},"usedName":{"valueName":{"identifier":"isPrefixOf"}},"qualification":"B"},{"reference":{"otherSlice":1986893899592906745},"usedName":{"valueName":{"identifier":"drop"}},"qualification":"B"},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1403983467327225593},"usedName":{"typeName":{"identifier":"ByteRanges"}},"qualification":null}],"fragment":["parseByteRanges :: B.ByteString -> Maybe ByteRanges","parseByteRanges bs1\n  = do bs2 <- stripPrefixB \"bytes=\" bs1\n       (r, bs3) <- range bs2\n       ranges (r :) bs3\n  where range bs2\n          = do (i, bs3) <- B8.readInteger bs2\n               if i < 0 then Just (ByteRangeSuffix (negate i), bs3) else\n                 do bs4 <- stripPrefixB \"-\" bs3\n                    case B8.readInteger bs4 of\n                        Just (j, bs5) | j >= i -> Just (ByteRangeFromTo i j, bs5)\n                        _ -> Just (ByteRangeFrom i, bs4)\n        ranges front bs3\n          | B.null bs3 = Just (front [])\n          | otherwise =\n            do bs4 <- stripPrefixB \",\" bs3\n               (r, bs5) <- range bs4\n               ranges (front . (r :)) bs5\n        stripPrefixB x y\n          | x `B.isPrefixOf` y = Just (B.drop (B.length x) y)\n          | otherwise = Nothing"],"instances":[],"language":{"extensions":["OverloadedStrings","FlexibleInstances","MultiParamTypeClasses","DeriveDataTypeable","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}