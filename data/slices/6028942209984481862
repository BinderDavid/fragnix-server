{"sliceID":6028942209984481862,"uses":[{"reference":{"otherSlice":7282735108512275250},"usedName":{"typeName":{"identifier":"Async"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":2823994061949608284},"usedName":{"valueName":{"identifier":"waitEither"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"finally"}},"qualification":null},{"reference":{"otherSlice":1618159690354805937},"usedName":{"valueName":{"identifier":"cancel"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null}],"fragment":["waitEitherCancel :: Async a -> Async b -> IO (Either a b)","waitEitherCancel left right\n  = waitEither left right `finally` (cancel left >> cancel right)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}