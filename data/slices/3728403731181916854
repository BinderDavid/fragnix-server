{"sliceID":3728403731181916854,"uses":[{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":9034244731772916494},"usedName":{"valueName":{"identifier":"pullR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":4035425512200636628},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8687904603722479860},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":5928074826083234112},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["delRightDigitE ::\n               Int ->\n                 Int ->\n                   Digit (Elem a) ->\n                     FingerTree (Node (Elem a)) -> Digit (Elem a) -> FingerTree (Elem a)","delRightDigitE !_i s pr m One{} = pullR (s - 1) pr m\ndelRightDigitE i s pr m (Two a b)\n  | i == 0 = Deep (s - 1) pr m (One b)\n  | otherwise = Deep (s - 1) pr m (One a)\ndelRightDigitE i s pr m (Three a b c)\n  | i == 0 = Deep (s - 1) pr m (Two b c)\n  | i == 1 = Deep (s - 1) pr m (Two a c)\n  | otherwise = deep pr m (Two a b)\ndelRightDigitE i s pr m (Four a b c d)\n  | i == 0 = Deep (s - 1) pr m (Three b c d)\n  | i == 1 = Deep (s - 1) pr m (Three a c d)\n  | i == 2 = Deep (s - 1) pr m (Three a b d)\n  | otherwise = Deep (s - 1) pr m (Three a b c)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}