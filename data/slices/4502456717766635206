{"sliceID":4502456717766635206,"uses":[{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"EmptyT"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":492216043322585822},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8687904603722479860},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":7370334449174698517},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null}],"fragment":["takeSuffixER :: Int -> Digit (Elem a) -> FingerTree (Elem a)","takeSuffixER !_i (One _) = EmptyT\ntakeSuffixER i (Two _ b)\n  | i < 1 = EmptyT\n  | otherwise = Single b\ntakeSuffixER i (Three _ b c)\n  | i < 1 = EmptyT\n  | i < 2 = Single c\n  | otherwise = Deep 2 (One b) EmptyT (One c)\ntakeSuffixER i (Four _ b c d)\n  | i < 1 = EmptyT\n  | i < 2 = Single d\n  | i < 3 = Deep 2 (One c) EmptyT (One d)\n  | otherwise = Deep 3 (Two b c) EmptyT (One d)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}