{"sliceID":7049120822843806711,"uses":[{"reference":{"otherSlice":3155590906824619350},"usedName":{"constructorName":{"identifier":"Put"},"constructorTypeName":{"identifier":"PutM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3204762557225739818},"usedName":{"constructorName":{"identifier":"PairS"},"constructorTypeName":{"identifier":"PairS"}},"qualification":null},{"reference":{"otherSlice":3155590906824619350},"usedName":{"valueName":{"identifier":"unPut"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":"Monoid"},{"reference":{"otherSlice":1475651043936973667},"usedName":{"typeName":{"identifier":"Put"}},"qualification":null}],"fragment":["mappend' :: Put -> Put -> Put","mappend' m k\n  = Put $\n      let PairS _ w = unPut m\n          PairS _ w' = unPut k\n        in PairS () (w `Monoid.mappend` w')"],"instances":[],"language":{"extensions":["FlexibleInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}