{"sliceID":1198631138434953304,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9129153005186475130},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":9129153005186475130},"usedName":{"constructorName":{"identifier":"StateT"},"constructorTypeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":9129153005186475130},"usedName":{"valueName":{"identifier":"runStateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null}],"fragment":["instance (Monad m) => Monad (StateT s m) where\n        m >>= k\n          = StateT $\n              \\ s ->\n                do ~(a, s') <- runStateT m s\n                   runStateT (k a) s'\n        \n        {-# INLINE (>>=) #-}\n        fail str = StateT $ \\ _ -> fail str\n        \n        {-# INLINE fail #-}"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}