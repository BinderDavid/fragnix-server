{"sliceID":8629150823660933882,"uses":[{"reference":{"otherSlice":8481347181219118462},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":7334244411852247161},"usedName":{"typeName":{"identifier":"IdentityT"}},"qualification":null},{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":6485218519662548500},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":6025372411208735900},"usedName":{"valueName":{"identifier":"liftCatch"}},"qualification":"Identity"}],"fragment":["instance MonadError e m => MonadError e (IdentityT m) where\n        throwError = lift . throwError\n        catchError = Identity.liftCatch catchError"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}