{"sliceID":7747191538585707198,"uses":[{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"otherSlice":521552564646137297},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Unsafe"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"otherSlice":7298166268752041815},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":6743180586269997912},"usedName":{"valueName":{"identifier":"overlaps"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":null}],"fragment":["unsafeCopy ::\n             (PrimMonad m, MVector v a) =>\n             v (PrimState m) a -> v (PrimState m) a -> m ()","unsafeCopy dst src\n  = ((Ck.check \"Data/Vector/Generic/Mutable.hs\" 802) Ck.Unsafe)\n      \"unsafeCopy\"\n      \"length mismatch\"\n      (length dst == length src)\n      $\n      ((Ck.check \"Data/Vector/Generic/Mutable.hs\" 804) Ck.Unsafe)\n        \"unsafeCopy\"\n        \"overlapping vectors\"\n        (not (dst `overlaps` src))\n        $ (dst `seq` src `seq` basicUnsafeCopy dst src)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}