{"sliceID":916018845664749315,"uses":[{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":8779388776141780797},"usedName":{"valueName":{"identifier":"parseMethod"}},"qualification":null},{"reference":{"otherSlice":2150836866812832620},"usedName":{"valueName":{"identifier":"requestMethod"}},"qualification":null},{"reference":{"otherSlice":5348759668413405203},"usedName":{"valueName":{"identifier":"matchRoute"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1359409559438061565},"usedName":{"valueName":{"identifier":"mkEnv"}},"qualification":null},{"reference":{"otherSlice":6342004951039605697},"usedName":{"valueName":{"identifier":"runAction"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3717595593305571482},"usedName":{"typeName":{"identifier":"ScottyError"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"typeName":{"identifier":"MonadIO"}},"qualification":null},{"reference":{"otherSlice":6892246593342672256},"usedName":{"typeName":{"identifier":"ErrorHandler"}},"qualification":null},{"reference":{"otherSlice":8089791658463645936},"usedName":{"typeName":{"identifier":"StdMethod"}},"qualification":null},{"reference":{"otherSlice":3321873544491540098},"usedName":{"typeName":{"identifier":"RoutePattern"}},"qualification":null},{"reference":{"otherSlice":6412538906221599864},"usedName":{"typeName":{"identifier":"ActionT"}},"qualification":null},{"reference":{"otherSlice":8396679117646924720},"usedName":{"typeName":{"identifier":"Middleware"}},"qualification":null}],"fragment":["route ::\n        (ScottyError e, MonadIO m) =>\n        ErrorHandler e m ->\n          StdMethod -> RoutePattern -> ActionT e m () -> Middleware m","route h method pat action app req\n  = let tryNext = app req in\n      if Right method == parseMethod (requestMethod req) then\n        case matchRoute pat req of\n            Just captures -> do env <- mkEnv req captures\n                                res <- runAction h env action\n                                maybe tryNext return res\n            Nothing -> tryNext\n        else tryNext"],"instances":[],"language":{"extensions":["FlexibleContexts","FlexibleInstances","OverloadedStrings","RankNTypes","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}