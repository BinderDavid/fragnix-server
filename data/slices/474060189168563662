{"sliceID":474060189168563662,"uses":[{"reference":{"otherSlice":976628837217299383},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":1258919833507916442},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":597998669842714883},"usedName":{"valueName":{"identifier":"error"}},"qualification":"Ck"},{"reference":{"otherSlice":4099865619337112873},"usedName":{"valueName":{"identifier":"emptyStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":976628837217299383},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["tail :: Monad m => Stream m a -> Stream m a","tail (Stream step t) = Stream step' (Left t)\n  where {-# INLINE [0] step' #-}\n        step' (Left s)\n          = liftM\n              (\\ r ->\n                 case r of\n                     Yield _ s' -> Skip (Right s')\n                     Skip s' -> Skip (Left s')\n                     Done -> (\\ state ->\n                                (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 350) state\n                                  emptyStream)\n                               \"tail\")\n              (step s)\n        step' (Right s)\n          = liftM\n              (\\ r ->\n                 case r of\n                     Yield x s' -> Yield x (Right s')\n                     Skip s' -> Skip (Right s')\n                     Done -> Done)\n              (step s)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}