{"sliceID":9212364612754854588,"uses":[{"reference":{"otherSlice":8771870886501392845},"usedName":{"typeName":{"identifier":"RegexLike"}},"qualification":null},{"reference":{"otherSlice":5383107759007114376},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":8771870886501392845},"usedName":{"valueName":{"identifier":"matchTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.String"},"usedName":{"valueName":{"identifier":"withCAString"}},"qualification":null},{"reference":{"otherSlice":627915647160326289},"usedName":{"valueName":{"identifier":"wrapTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":3114677758322251798},"usedName":{"valueName":{"identifier":"unwrap"}},"qualification":null},{"reference":{"otherSlice":8771870886501392845},"usedName":{"valueName":{"identifier":"matchOnce"}},"qualification":null},{"reference":{"otherSlice":7179349083988671255},"usedName":{"valueName":{"identifier":"execute"}},"qualification":null},{"reference":{"otherSlice":8771870886501392845},"usedName":{"valueName":{"identifier":"matchAll"}},"qualification":null},{"reference":{"otherSlice":5242447563210612342},"usedName":{"valueName":{"identifier":"wrapMatchAll"}},"qualification":null},{"reference":{"otherSlice":8771870886501392845},"usedName":{"valueName":{"identifier":"matchCount"}},"qualification":null},{"reference":{"otherSlice":823503577355230793},"usedName":{"valueName":{"identifier":"wrapCount"}},"qualification":null}],"fragment":["instance RegexLike Regex String where\n        matchTest regex str\n          = unsafePerformIO $ do withCAString str (wrapTest regex) >>= unwrap\n        matchOnce regex str\n          = unsafePerformIO $ execute regex str >>= unwrap\n        matchAll regex str\n          = unsafePerformIO $\n              withCAString str (wrapMatchAll regex) >>= unwrap\n        matchCount regex str\n          = unsafePerformIO $ withCAString str (wrapCount regex) >>= unwrap"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}