{"sliceID":4751619890601406897,"uses":[{"reference":{"otherSlice":2451309880818761991},"usedName":{"valueName":{"identifier":"compNewline"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4184560915590529943},"usedName":{"valueName":{"identifier":"compIgnoreCase"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4568226797746959374},"usedName":{"valueName":{"identifier":"compExtended"}},"qualification":null},{"reference":{"otherSlice":8028585778067812017},"usedName":{"valueName":{"identifier":"makeRegexOpts"}},"qualification":null},{"reference":{"otherSlice":7211150897574583579},"usedName":{"valueName":{"identifier":"defaultExecOpt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":5383107759007114376},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null}],"fragment":["mkRegexWithOpts :: String -> Bool -> Bool -> Regex","mkRegexWithOpts s single_line case_sensitive\n  = let opt\n          = (if single_line then (compNewline .|.) else id) .\n              (if case_sensitive then id else (compIgnoreCase .|.))\n              $ compExtended\n      in makeRegexOpts opt defaultExecOpt s"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}