{"sliceID":57549553376078425,"uses":[{"reference":{"otherSlice":6523246914974521014},"usedName":{"valueName":{"identifier":"withBufferPool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7485471397305916155},"usedName":{"valueName":{"identifier":"fdSocket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":1447479991411827481},"usedName":{"valueName":{"identifier":"receiveloop"}},"qualification":null},{"reference":{"otherSlice":2347089666054590766},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":3228785340336385205},"usedName":{"typeName":{"identifier":"BufferPool"}},"qualification":null},{"reference":{"otherSlice":9124103446665558349},"usedName":{"typeName":{"identifier":"Recv"}},"qualification":null}],"fragment":["receive :: Socket -> BufferPool -> Recv","receive sock pool\n  = withBufferPool pool $\n      \\ (ptr, size) ->\n        do let sock' = fdSocket sock\n               size' = fromIntegral size\n           fromIntegral <$> receiveloop sock' ptr size'"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}