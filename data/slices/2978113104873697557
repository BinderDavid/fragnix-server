{"sliceID":2978113104873697557,"uses":[{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":751284367628750892},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2256778640200800668},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"otherSlice":7468751483111131918},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":null},{"reference":{"otherSlice":3658581144601444427},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"Bundle"},{"reference":{"otherSlice":999351203523402733},"usedName":{"valueName":{"identifier":"checkSlice"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"otherSlice":7298166268752041815},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":7618513344290335766},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null},{"reference":{"otherSlice":6503087671127039195},"usedName":{"valueName":{"identifier":"unsafeAppend1"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null}],"fragment":["partitionUnknown ::\n                   (PrimMonad m, MVector v a) =>\n                   (a -> Bool) ->\n                     Bundle u a -> m (v (PrimState m) a, v (PrimState m) a)","partitionUnknown f s\n  = do v1 <- unsafeNew 0\n       v2 <- unsafeNew 0\n       (v1', n1, v2', n2) <- Bundle.foldM' put (v1, 0, v2, 0) s\n       ((Ck.checkSlice \"Data/Vector/Generic/Mutable.hs\" 983) Ck.Internal)\n         \"partitionUnknown\"\n         0\n         n1\n         (length v1')\n         $\n         ((Ck.checkSlice \"Data/Vector/Generic/Mutable.hs\" 984) Ck.Internal)\n           \"partitionUnknown\"\n           0\n           n2\n           (length v2')\n           $ return (unsafeSlice 0 n1 v1', unsafeSlice 0 n2 v2')\n  where {-# INLINE [0] put #-}\n        put (v1, i1, v2, i2) x\n          | f x =\n            do v1' <- unsafeAppend1 v1 i1 x\n               return (v1', i1 + 1, v2, i2)\n          | otherwise =\n            do v2' <- unsafeAppend1 v2 i2 x\n               return (v1, i1, v2', i2 + 1)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}