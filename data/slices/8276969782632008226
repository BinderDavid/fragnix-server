{"sliceID":8276969782632008226,"uses":[{"reference":{"otherSlice":6716583115684516053},"usedName":{"valueName":{"operator":"<?>"}},"qualification":null},{"reference":{"otherSlice":2185855381435780722},"usedName":{"constructorName":{"identifier":"Index"},"constructorTypeName":{"identifier":"JSONPathElement"}},"qualification":null},{"reference":{"otherSlice":2955134678835024079},"usedName":{"valueName":{"identifier":"withArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5986968119246965674},"usedName":{"valueName":{"identifier":"length"}},"qualification":"V"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":2853228438806977476},"usedName":{"valueName":{"identifier":"parseJSONElemAtIndex"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<*>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":2337681378693068080},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":920961248214833976},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["parseIndexedJSONPair ::\n                     (Value -> Parser a) ->\n                       (Value -> Parser b) -> Int -> Value -> Parser (a, b)","parseIndexedJSONPair keyParser valParser idx value\n  = p value <?> Index idx\n  where p = withArray \"(k,v)\" $\n              \\ ab ->\n                let n = V.length ab in\n                  if n == 2 then\n                    (,) <$> parseJSONElemAtIndex keyParser 0 ab <*>\n                      parseJSONElemAtIndex valParser 1 ab\n                    else\n                    fail $ \"cannot unpack array of length \" ++ show n ++ \" into a pair\""],"instances":[],"language":{"extensions":["DataKinds","DefaultSignatures","FlexibleContexts","FlexibleInstances","GADTs","MultiParamTypeClasses","NamedFieldPuns","OverloadedStrings","RecordWildCards","ScopedTypeVariables","TypeOperators","TypeSynonymInstances","UndecidableInstances","ViewPatterns","PolyKinds","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}