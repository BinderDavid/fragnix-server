{"sliceID":6569506914321003886,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":3848874062030354227},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":357068319934710683},"usedName":{"valueName":{"identifier":"mapWhenMissing"}},"qualification":null}],"fragment":["instance (Applicative f, Monad f) => Functor (WhenMissing f k x)\n         where\n        fmap = mapWhenMissing\n        \n        {-# INLINE fmap #-}"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}