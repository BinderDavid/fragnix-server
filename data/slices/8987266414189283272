{"sliceID":8987266414189283272,"uses":[{"reference":{"otherSlice":346679826841760143},"usedName":{"constructorName":{"identifier":"UrlEncoded"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"otherSlice":5578418172209195165},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":248739104559243974},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":8819855837653387286},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"otherSlice":4915886393898742696},"usedName":{"valueName":{"identifier":"prboMaxParmsSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":7740163859099370426},"usedName":{"valueName":{"identifier":"parseSimpleQuery"}},"qualification":"H"},{"reference":{"otherSlice":346679826841760143},"usedName":{"constructorName":{"identifier":"Multipart"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"otherSlice":4700449487939487972},"usedName":{"valueName":{"identifier":"parsePiecesEx"}},"qualification":null},{"reference":{"otherSlice":4266482746038848749},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"S8"},{"reference":{"otherSlice":4345469173277560744},"usedName":{"valueName":{"identifier":"append"}},"qualification":"S"},{"reference":{"otherSlice":4915886393898742696},"usedName":{"typeName":{"identifier":"ParseRequestBodyOptions"}},"qualification":null},{"reference":{"otherSlice":7789413659326569857},"usedName":{"typeName":{"identifier":"BackEnd"}},"qualification":null},{"reference":{"otherSlice":346679826841760143},"usedName":{"typeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4942888801223460576},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":1156478319431720055},"usedName":{"typeName":{"identifier":"Param"}},"qualification":null},{"reference":{"otherSlice":6377169190689415136},"usedName":{"typeName":{"identifier":"File"}},"qualification":null}],"fragment":["conduitRequestBodyEx ::\n                     ParseRequestBodyOptions ->\n                       BackEnd y ->\n                         RequestBodyType ->\n                           IO S.ByteString -> (Either Param (File y) -> IO ()) -> IO ()","conduitRequestBodyEx o _ UrlEncoded rbody add\n  = do let loop size front\n             = do bs <- rbody\n                  if S.null bs then return $ S.concat $ front [] else\n                    do let newsize = size + S.length bs\n                       case prboMaxParmsSize o of\n                           Just maxSize -> when (newsize > maxSize) $\n                                             error \"Maximum size of parameters exceeded\"\n                           Nothing -> return ()\n                       loop newsize $ front . (bs :)\n       bs <- loop 0 id\n       mapM_ (add . Left) $ H.parseSimpleQuery bs\nconduitRequestBodyEx o backend (Multipart bound) rbody add\n  = parsePiecesEx o backend (S8.pack \"--\" `S.append` bound) rbody add"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}