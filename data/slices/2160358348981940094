{"sliceID":2160358348981940094,"uses":[{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":2472949373024698355},"usedName":{"valueName":{"identifier":"newNameList"}},"qualification":null},{"reference":{"otherSlice":4096054026617212887},"usedName":{"valueName":{"identifier":"arityInt"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"zip"}},"qualification":null},{"reference":{"otherSlice":2406948088679681918},"usedName":{"valueName":{"identifier":"interleave"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":7721714347464982760},"usedName":{"valueName":{"identifier":"tagSingleConstructors"}},"qualification":null},{"reference":{"otherSlice":2325125819179893812},"usedName":{"valueName":{"identifier":"argsToValue"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":7721714347464982760},"usedName":{"valueName":{"identifier":"allNullaryToStringTag"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"all"}},"qualification":null},{"reference":{"otherSlice":2764637785666044152},"usedName":{"valueName":{"identifier":"isNullary"}},"qualification":null},{"reference":{"otherSlice":3849646064215094801},"usedName":{"valueName":{"identifier":"conStr"}},"qualification":null},{"reference":{"otherSlice":4266155657029963898},"usedName":{"valueName":{"identifier":"getConName"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":3720735402915720453},"usedName":{"typeName":{"identifier":"JSONClass"}},"qualification":null},{"reference":{"otherSlice":7721714347464982760},"usedName":{"typeName":{"identifier":"Options"}},"qualification":null}],"fragment":["consToValue :: JSONClass -> Options -> [Con] -> Q Exp","consToValue _ _ []\n  = error $\n      \"Data.Aeson.TH.consToValue: \" ++ \"Not a single constructor given!\"\nconsToValue jc opts cons\n  = do value <- newName \"value\"\n       tjs <- newNameList \"_tj\" $ arityInt jc\n       tjls <- newNameList \"_tjl\" $ arityInt jc\n       let zippedTJs = zip tjs tjls\n           interleavedTJs = interleave tjs tjls\n       lamE (map varP $ interleavedTJs ++ [value]) $\n         caseE (varE value) (matches zippedTJs)\n  where matches tjs\n          = case cons of\n                [con] | not (tagSingleConstructors opts) ->\n                        [argsToValue jc tjs opts False con]\n                _ | allNullaryToStringTag opts && all isNullary cons ->\n                    [match (conP conName []) (normalB $ conStr opts conName) [] |\n                     con <- cons, let conName = getConName con]\n                  | otherwise -> [argsToValue jc tjs opts True con | con <- cons]"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"]}}