{"sliceID":8959695814763541421,"uses":[{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"snd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":8841449591608802983},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":null},{"reference":{"otherSlice":7992803646567922328},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":null},{"reference":{"otherSlice":1128439396637303949},"usedName":{"valueName":{"identifier":"snoc"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"otherSlice":4192188388592563342},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["scanl ::\n      (Word8 -> Word8 -> Word8) -> Word8 -> ByteString -> ByteString","scanl f z = snd . foldl k (z, singleton z)\n  where k (c, acc) a = let n = f c a in (n, acc `snoc` n)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}