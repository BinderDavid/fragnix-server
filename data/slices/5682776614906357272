{"sliceID":5682776614906357272,"uses":[{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":1745715555375600494},"usedName":{"typeName":{"identifier":"MutableArray"}},"qualification":null},{"reference":{"otherSlice":7364999129320711813},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":521552564646137297},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":2919479770736738958},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1240416926497088270},"usedName":{"valueName":{"identifier":"newArray"}},"qualification":null},{"reference":{"otherSlice":2440164120304872508},"usedName":{"valueName":{"identifier":"uninitialised"}},"qualification":null},{"reference":{"otherSlice":330799558505403247},"usedName":{"valueName":{"identifier":"loopM"}},"qualification":null},{"reference":{"otherSlice":5575741799243539711},"usedName":{"valueName":{"identifier":"readArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1080947357764179124},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null}],"fragment":["moveForwardsLargeOverlap ::\n                           PrimMonad m =>\n                           MutableArray (PrimState m) a -> Int -> Int -> Int -> m ()","moveForwardsLargeOverlap !arr !dstOff !srcOff !len\n  = ((Ck.check \"Data/Vector/Mutable.hs\" 168) Ck.Internal)\n      \"moveForwardsLargeOverlap\"\n      \"not a forward move\"\n      (dstOff > srcOff)\n      $\n      do queue <- newArray nonOverlap uninitialised\n         loopM nonOverlap $\n           \\ i -> readArray arr (srcOff + i) >>= writeArray queue i\n         let mov !i !qTop\n               = when (i < dstOff + len) $\n                   do x <- readArray arr i\n                      y <- readArray queue qTop\n                      writeArray arr i y\n                      writeArray queue qTop x\n                      mov (i + 1) (if qTop + 1 >= nonOverlap then 0 else qTop + 1)\n         mov dstOff 0\n  where nonOverlap = dstOff - srcOff"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","FlexibleInstances","BangPatterns","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}