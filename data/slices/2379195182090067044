{"sliceID":2379195182090067044,"uses":[{"reference":{"otherSlice":6554198848565970259},"usedName":{"valueName":{"identifier":"zipWith6M"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":976628837217299383},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWith6 ::\n           Monad m =>\n           (a -> b -> c -> d -> e -> f -> g) ->\n             Stream m a ->\n               Stream m b ->\n                 Stream m c -> Stream m d -> Stream m e -> Stream m f -> Stream m g","zipWith6 fn = zipWith6M (\\ a b c d e f -> return (fn a b c d e f))"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}