{"sliceID":3502578380762426354,"uses":[{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4864064101191181079},"usedName":{"constructorName":{"identifier":"ActionError"},"constructorTypeName":{"identifier":"ActionError"}},"qualification":null},{"reference":{"otherSlice":8481347181219118462},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":3717595593305571482},"usedName":{"typeName":{"identifier":"ScottyError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":6412538906221599864},"usedName":{"typeName":{"identifier":"ActionT"}},"qualification":null}],"fragment":["rescue ::\n         (ScottyError e, Monad m) =>\n         ActionT e m a -> (e -> ActionT e m a) -> ActionT e m a","rescue action h\n  = catchError action $\n      \\ e ->\n        case e of\n            ActionError err -> h err\n            other -> throwError other"],"instances":[],"language":{"extensions":["OverloadedStrings","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}