{"sliceID":3378733494828413575,"uses":[{"reference":{"otherSlice":2597048707352617539},"usedName":{"typeName":{"identifier":"BoundedPrim"}},"qualification":"P"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":3039011035720625274},"usedName":{"valueName":{"identifier":"condB"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":1944059598400749810},"usedName":{"valueName":{"identifier":"emptyB"}},"qualification":"P"},{"reference":{"otherSlice":5204560378110754215},"usedName":{"valueName":{"identifier":"charUtf8"}},"qualification":"P"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"otherSlice":4549133229117298045},"usedName":{"valueName":{"identifier":"liftFixedToBounded"}},"qualification":"P"},{"reference":{"otherSlice":2738925834121320523},"usedName":{"valueName":{"identifier":"char7"}},"qualification":"P"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"otherSlice":7952084535627831340},"usedName":{"valueName":{"operator":">$<"}},"qualification":null},{"reference":{"otherSlice":8664283136848573116},"usedName":{"valueName":{"operator":">*<"}},"qualification":null}],"fragment":["charUtf8HtmlEscaped :: P.BoundedPrim Char","charUtf8HtmlEscaped\n  = condB (> '>') (condB (== '\\DEL') P.emptyB P.charUtf8) $\n      condB (== '<') (fixed4 ('&', ('l', ('t', ';')))) $\n        condB (== '>') (fixed4 ('&', ('g', ('t', ';')))) $\n          condB (== '&') (fixed5 ('&', ('a', ('m', ('p', ';'))))) $\n            condB (== '\"') (fixed6 ('&', ('q', ('u', ('o', ('t', ';')))))) $\n              condB (== '\\'') (fixed5 ('&', ('#', ('3', ('9', ';'))))) $\n                condB (\\ c -> c >= ' ' || c == '\\t' || c == '\\n' || c == '\\r')\n                  (P.liftFixedToBounded P.char7)\n                  $ P.emptyB\n  where {-# INLINE fixed4 #-}\n        fixed4 x\n          = P.liftFixedToBounded $\n              const x >$< P.char7 >*< P.char7 >*< P.char7 >*< P.char7\n        \n        {-# INLINE fixed5 #-}\n        fixed5 x\n          = P.liftFixedToBounded $\n              const x >$< P.char7 >*< P.char7 >*< P.char7 >*< P.char7 >*< P.char7\n        \n        {-# INLINE fixed6 #-}\n        fixed6 x\n          = P.liftFixedToBounded $\n              const x >$< P.char7 >*< P.char7 >*< P.char7 >*< P.char7 >*< P.char7\n                >*< P.char7"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}