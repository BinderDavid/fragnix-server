{"sliceID":6851752709985363242,"uses":[{"reference":{"builtinModule":"Control.Concurrent.MVar"},"usedName":{"valueName":{"identifier":"modifyMVar_"}},"qualification":null},{"reference":{"otherSlice":7712117533244340570},"usedName":{"valueName":{"identifier":"runInteractiveProcess_delegate_ctlc"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3674725535859094497},"usedName":{"valueName":{"identifier":"installHandler"}},"qualification":null},{"reference":{"otherSlice":8381563371817836750},"usedName":{"valueName":{"identifier":"sigINT"}},"qualification":null},{"reference":{"otherSlice":2606660308800241632},"usedName":{"constructorName":{"identifier":"Ignore"},"constructorTypeName":{"identifier":"Handler"}},"qualification":null},{"reference":{"otherSlice":4994947921717376583},"usedName":{"valueName":{"identifier":"sigQUIT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["startDelegateControlC :: IO ()","startDelegateControlC\n  = modifyMVar_ runInteractiveProcess_delegate_ctlc $\n      \\ delegating ->\n        do case delegating of\n               Nothing -> do old_int <- installHandler sigINT Ignore Nothing\n                             old_quit <- installHandler sigQUIT Ignore Nothing\n                             return (Just (1, old_int, old_quit))\n               Just (count, old_int, old_quit) -> do let !count' = count + 1\n                                                     return (Just (count', old_int, old_quit))"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}