{"sliceID":1685062946300063706,"uses":[{"reference":{"otherSlice":1971102957276645166},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":3445991739723726812},"usedName":{"valueName":{"identifier":"lengthOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":6915584818829723372},"usedName":{"constructorName":{"identifier":"Complete"},"constructorTypeName":{"identifier":"More"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":751572041774192625},"usedName":{"valueName":{"identifier":"prompt"}},"qualification":null},{"reference":{"otherSlice":5481301733920344986},"usedName":{"typeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":1770770862601050229},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["inputSpansChunks :: Pos -> Parser Bool","inputSpansChunks i\n  = T.Parser $\n      \\ t pos_ more _lose succ ->\n        let pos = pos_ + i in\n          if pos < lengthOf t || more == Complete then succ t pos more False\n            else\n            let lose' t' pos' more' = succ t' pos' more' False\n                succ' t' pos' more' = succ t' pos' more' True\n              in prompt t pos more lose' succ'"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"]}}