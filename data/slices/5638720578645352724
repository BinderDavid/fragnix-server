{"sliceID":5638720578645352724,"uses":[{"reference":{"otherSlice":2649902483894179063},"usedName":{"constructorName":{"identifier":"AltSmaller"},"constructorTypeName":{"identifier":"Altered"}},"qualification":null},{"reference":{"otherSlice":2649902483894179063},"usedName":{"constructorName":{"identifier":"AltBigger"},"constructorTypeName":{"identifier":"Altered"}},"qualification":null},{"reference":{"otherSlice":2649902483894179063},"usedName":{"constructorName":{"identifier":"AltAdj"},"constructorTypeName":{"identifier":"Altered"}},"qualification":null},{"reference":{"otherSlice":2649902483894179063},"usedName":{"constructorName":{"identifier":"AltSame"},"constructorTypeName":{"identifier":"Altered"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":2649902483894179063},"usedName":{"typeName":{"identifier":"Altered"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7509559696951815033},"usedName":{"constructorName":{"identifier":"Lazy"},"constructorTypeName":{"identifier":"AreWeStrict"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7178570872342069366},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":null},{"reference":{"otherSlice":7509559696951815033},"usedName":{"constructorName":{"identifier":"Strict"},"constructorTypeName":{"identifier":"AreWeStrict"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":3680591839889780986},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":9085244951776104570},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"otherSlice":5492475195316348806},"usedName":{"valueName":{"identifier":"balanceL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":4896811384005926977},"usedName":{"valueName":{"identifier":"glue"}},"qualification":null},{"reference":{"otherSlice":7509559696951815033},"usedName":{"typeName":{"identifier":"AreWeStrict"}},"qualification":null}],"fragment":["atKeyPlain ::\n             Ord k =>\n             AreWeStrict -> k -> (Maybe a -> Maybe a) -> Map k a -> Map k a","atKeyPlain strict k0 f0 t\n  = case go k0 f0 t of\n        AltSmaller t' -> t'\n        AltBigger t' -> t'\n        AltAdj t' -> t'\n        AltSame -> t\n  where go ::\n             Ord k => k -> (Maybe a -> Maybe a) -> Map k a -> Altered k a\n        go !k f Tip\n          = case f Nothing of\n                Nothing -> AltSame\n                Just x -> case strict of\n                              Lazy -> AltBigger $ singleton k x\n                              Strict -> x `seq` (AltBigger $ singleton k x)\n        go k f (Bin sx kx x l r)\n          = case compare k kx of\n                LT -> case go k f l of\n                          AltSmaller l' -> AltSmaller $ balanceR kx x l' r\n                          AltBigger l' -> AltBigger $ balanceL kx x l' r\n                          AltAdj l' -> AltAdj $ Bin sx kx x l' r\n                          AltSame -> AltSame\n                GT -> case go k f r of\n                          AltSmaller r' -> AltSmaller $ balanceL kx x l r'\n                          AltBigger r' -> AltBigger $ balanceR kx x l r'\n                          AltAdj r' -> AltAdj $ Bin sx kx x l r'\n                          AltSame -> AltSame\n                EQ -> case f (Just x) of\n                          Just x' -> case strict of\n                                         Lazy -> AltAdj $ Bin sx kx x' l r\n                                         Strict -> x' `seq` (AltAdj $ Bin sx kx x' l r)\n                          Nothing -> AltSmaller $ glue l r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"]}}